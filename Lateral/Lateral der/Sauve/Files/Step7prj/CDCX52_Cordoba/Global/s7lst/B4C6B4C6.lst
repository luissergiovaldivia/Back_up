"V01.00.000"
"$_Languages"
"10(1) Espagnol (traditionnel)";"12(1) Français (France)";"9(2) Anglais (Royaume-Uni)";"513(1) Key"
"$_Timestamp"
"12.05.2015  21:59:07";"20.05.2015  00:12:23";"20.05.2015  00:12:23";""
"$_Typ(BlockComment)"
"This DB is used to record the movements reference times in a zone (area)
Symbolic name of DB = ZxT
DB Number = x98
With x = zone number (1 to 9)
DB d enregistrement des Temps ref d'une zone
Le Nom du DB = ZxT
Le numéro du DB = x98
Avec x =au numero de la zone (1à 9)

";"This DB is used to record the movements reference times in a zone (area)
Symbolic name of DB = ZxT
DB Number = x98
With x = zone number (1 to 9)
DB d enregistrement des Temps ref d'une zone
Le Nom du DB = ZxT
Le numéro du DB = x98
Avec x =au numero de la zone (1à 9)

";"This DB is used to record the movements reference times in a zone (area)
Symbolic name of DB = ZxT
DB Number = x98
With x = zone number (1 to 9)
DB d enregistrement des Temps ref d'une zone
Le Nom du DB = ZxT
Le numéro du DB = x98
Avec x =au numero de la zone (1à 9)

";""
"INTERRUPCION CICLICA
";"INTERRUPTION CYCLIQUE
";"INTERRUPCION CICLICA
";""
"**************************************************************************
*                   TCPIP CONNECTION FOR SIPTOL                          *
*     ETABLISSEMENT DE LA COMMUNICATION TCPIP POUR LES LIAISONS SIPTOL   *
**************************************************************************

WARNING :
*********
THIS FB USING NEED A HARDWARE IMPLEMENTATION AND PLC COMUNICATION CARD SETTINGS
WITH HWCONFIG AND THE  FLOW CONTROL LEVEL 2 NETWORK IMPLEMENTATION IN NETPRO

BF IMPLEMENTATION (FB1961):
*****************************
1 FB BY CP 343-1 LEAN CARD IN PLC
NO LIMIT ON THE NUMBER OF FRAME EXCEPT TO THE CARD USING  THE FIRMWARE P2.1.5
WHERE THE NUMBER OF CONECTION IS LIMITED TO 8 /CARD

A) FB SETTINGS IN REGARDS TO THE HARDWARE :
- CPADDRESS = VALUE OF ENTRY STARTS IN CP SETTING ADRESS TAB IN HWCONFIG
- ID = ID IN THE TCP LINKS PROPERTIES IN GENERAL CP TAB IN NETPRO
- MODDBNR = NUMBER OF SIP DB USED
- MODBASEREG = OFFSET OF THE SIPTOL DATAS OF THE PROJECT ( TO BE CONFIRMED BY
THE RENAULT PROJECT MANAGER)

B) FB SETTINGS / PLC PROGRAM :
-MODDBNR = NUMBER OF ""SIP"" DB ASSOCIATED TO CARTE CP 343-1 LEAN CARD IN PLC
AVEC
1ST ETH CP343 CARD   = 89 (SYMBOLIC NAME = SIP1)
2ND ETH CP343 CARD   = 88 (SYMBOLIC NAME = SIP2)
3RD ETH CP343 CARD   = 87 (SYMBOLIC NAME = SIP3)
4TH ETH CP343 CARD   = 86 (SYMBOLIC NAME = SIP4)
5TH ETH CP343 CARD   = 85 (SYMBOLIC NAME = SIP5)
6TH ETH CP343 CARD   = 84 (SYMBOLIC NAME = SIP6)

VARRIABLES TO ADD IN GLOBAL DB IG :
***********************************
IF CARD FAULT USED IN PLC PROGRAM :
IG.DFCCOM1 = BOOL= ETH 1 CONNECTION CARD FAULT
IG.DFCCOM2 = BOOL= ETH 2 CONNECTION CARD FAULT
IG.DFCCOM3 = BOOL= ETH 3 CONNECTION CARD FAULT

********************* FRENCH INFORMATION ****************************
ATTENTION:
**********
L'UTILISATION DE CE FB NECESSISTE UNE MISE EN OEUVRE MATERIELLE ET UN
PARAMETRAGE SUR LE COUPLEUR DE COMMUNICATION SOUS HWCONFIG. ET LA DECALARATION
DU RESEAU DE NIVEAU 2 DE PILOTAGE SOUS NETPRO

MISE EN OEUVRE DU BF (FB1961):
*****************************
1 FB PAR CARTE DE COMMUNICATION CP 343-1 LEAN SUR L'API
PAS DE LIMITE SUR LE NOMBRE DE TRAME SAUF POUR LES COUPLEURS UTILISANT LE
FIRMWARE P2.1.5 OU LE NOMBRE DE CONNEXION EST LIMITE A 8 /CARTE

A)PARRAMETRAGE DU FB PAR RAPPORT A LA CONFIGURATION MATERIELLE :
- CPADDRESS = VALEUR DE DEBUT D'ENTREE DANS ONGLET ADRESSE DES PROPRIETE DU CP
              SOUS HWCONFIG
- ID = ID DANS PROPRIETE LIAISON TCP ONGLET GENERAL DU CP SOUS NETPRO
- MODDBNR = N° DE DB SIP
- MODBASEREG = OFFSET DES INFORMATION COTE SIPTOL POUR LA LIGNE ( A CONFIRMER
               PAR CHEF DE PROJET RENAULT)
B) PARAMETRAGE DU FB / PROGRAMME API :
-MODDBNR = N° DU DB SIP ASSOCIE A LA CARTE CP 343-1 LEAN SUR L'API
AVEC
1ER CARTE ETH CP343  = 89 (NOM SYMBOLIQUE = SIP1)
2EME CARTE ETH CP343 = 88 (NOM SYMBOLIQUE = SIP2)
3EME CARTE ETH CP343 = 87 (NOM SYMBOLIQUE = SIP3)
4EME CARTE ETH CP343 = 86 (NOM SYMBOLIQUE = SIP4)
5EME CARTE ETH CP343 = 85 (NOM SYMBOLIQUE = SIP5)
6EME CARTE ETH CP343 = 84 (NOM SYMBOLIQUE = SIP6)

INFORMATIONS A RAJOUTER DANS LE DB GLOBAL IG :
*********************************************
SI BESOIN DES INFORMATIONS DEFAUT CARTE AU NIVEAU DU PROGRAMME
IG.DFCCOM1 = BOOL= DEFAUT DE CARTE DE COMMUNICATION ETH 1
IG.DFCCOM2 = BOOL= DEFAUT DE CARTE DE COMMUNICATION ETH 2
IG.DFCCOM3 = BOOL= DEFAUT DE CARTE DE COMMUNICATION ETH 3

";"**************************************************************************
*                   TCPIP CONNECTION FOR SIPTOL                          *
*     ETABLISSEMENT DE LA COMMUNICATION TCPIP POUR LES LIAISONS SIPTOL   *
**************************************************************************

WARNING :
*********
THIS FB USING NEED A HARDWARE IMPLEMENTATION AND PLC COMUNICATION CARD SETTINGS
WITH HWCONFIG AND THE  FLOW CONTROL LEVEL 2 NETWORK IMPLEMENTATION IN NETPRO

BF IMPLEMENTATION (FB1961):
*****************************
1 FB BY CP 343-1 LEAN CARD IN PLC
NO LIMIT ON THE NUMBER OF FRAME EXCEPT TO THE CARD USING  THE FIRMWARE P2.1.5
WHERE THE NUMBER OF CONECTION IS LIMITED TO 8 /CARD

A) FB SETTINGS IN REGARDS TO THE HARDWARE :
- CPADDRESS = VALUE OF ENTRY STARTS IN CP SETTING ADRESS TAB IN HWCONFIG
- ID = ID IN THE TCP LINKS PROPERTIES IN GENERAL CP TAB IN NETPRO
- MODDBNR = NUMBER OF SIP DB USED
- MODBASEREG = OFFSET OF THE SIPTOL DATAS OF THE PROJECT ( TO BE CONFIRMED BY
THE RENAULT PROJECT MANAGER)

B) FB SETTINGS / PLC PROGRAM :
-MODDBNR = NUMBER OF ""SIP"" DB ASSOCIATED TO CARTE CP 343-1 LEAN CARD IN PLC
AVEC
1ST ETH CP343 CARD   = 89 (SYMBOLIC NAME = SIP1)
2ND ETH CP343 CARD   = 88 (SYMBOLIC NAME = SIP2)
3RD ETH CP343 CARD   = 87 (SYMBOLIC NAME = SIP3)
4TH ETH CP343 CARD   = 86 (SYMBOLIC NAME = SIP4)
5TH ETH CP343 CARD   = 85 (SYMBOLIC NAME = SIP5)
6TH ETH CP343 CARD   = 84 (SYMBOLIC NAME = SIP6)

VARRIABLES TO ADD IN GLOBAL DB IG :
***********************************
IF CARD FAULT USED IN PLC PROGRAM :
IG.DFCCOM1 = BOOL= ETH 1 CONNECTION CARD FAULT
IG.DFCCOM2 = BOOL= ETH 2 CONNECTION CARD FAULT
IG.DFCCOM3 = BOOL= ETH 3 CONNECTION CARD FAULT

********************* FRENCH INFORMATION ****************************
ATTENTION:
**********
L'UTILISATION DE CE FB NECESSISTE UNE MISE EN OEUVRE MATERIELLE ET UN
PARAMETRAGE SUR LE COUPLEUR DE COMMUNICATION SOUS HWCONFIG. ET LA DECALARATION
DU RESEAU DE NIVEAU 2 DE PILOTAGE SOUS NETPRO

MISE EN OEUVRE DU BF (FB1961):
*****************************
1 FB PAR CARTE DE COMMUNICATION CP 343-1 LEAN SUR L'API
PAS DE LIMITE SUR LE NOMBRE DE TRAME SAUF POUR LES COUPLEURS UTILISANT LE
FIRMWARE P2.1.5 OU LE NOMBRE DE CONNEXION EST LIMITE A 8 /CARTE

A)PARRAMETRAGE DU FB PAR RAPPORT A LA CONFIGURATION MATERIELLE :
- CPADDRESS = VALEUR DE DEBUT D'ENTREE DANS ONGLET ADRESSE DES PROPRIETE DU CP
              SOUS HWCONFIG
- ID = ID DANS PROPRIETE LIAISON TCP ONGLET GENERAL DU CP SOUS NETPRO
- MODDBNR = N° DE DB SIP
- MODBASEREG = OFFSET DES INFORMATION COTE SIPTOL POUR LA LIGNE ( A CONFIRMER
               PAR CHEF DE PROJET RENAULT)
B) PARAMETRAGE DU FB / PROGRAMME API :
-MODDBNR = N° DU DB SIP ASSOCIE A LA CARTE CP 343-1 LEAN SUR L'API
AVEC
1ER CARTE ETH CP343  = 89 (NOM SYMBOLIQUE = SIP1)
2EME CARTE ETH CP343 = 88 (NOM SYMBOLIQUE = SIP2)
3EME CARTE ETH CP343 = 87 (NOM SYMBOLIQUE = SIP3)
4EME CARTE ETH CP343 = 86 (NOM SYMBOLIQUE = SIP4)
5EME CARTE ETH CP343 = 85 (NOM SYMBOLIQUE = SIP5)
6EME CARTE ETH CP343 = 84 (NOM SYMBOLIQUE = SIP6)

INFORMATIONS A RAJOUTER DANS LE DB GLOBAL IG :
*********************************************
SI BESOIN DES INFORMATIONS DEFAUT CARTE AU NIVEAU DU PROGRAMME
IG.DFCCOM1 = BOOL= DEFAUT DE CARTE DE COMMUNICATION ETH 1
IG.DFCCOM2 = BOOL= DEFAUT DE CARTE DE COMMUNICATION ETH 2
IG.DFCCOM3 = BOOL= DEFAUT DE CARTE DE COMMUNICATION ETH 3

";"**************************************************************************
*                   TCPIP CONNECTION FOR SIPTOL                          *
*     ETABLISSEMENT DE LA COMMUNICATION TCPIP POUR LES LIAISONS SIPTOL   *
**************************************************************************

WARNING :
*********
THIS FB USING NEED A HARDWARE IMPLEMENTATION AND PLC COMUNICATION CARD SETTINGS
WITH HWCONFIG AND THE  FLOW CONTROL LEVEL 2 NETWORK IMPLEMENTATION IN NETPRO

BF IMPLEMENTATION (FB1961):
*****************************
1 FB BY CP 343-1 LEAN CARD IN PLC
NO LIMIT ON THE NUMBER OF FRAME EXCEPT TO THE CARD USING  THE FIRMWARE P2.1.5
WHERE THE NUMBER OF CONECTION IS LIMITED TO 8 /CARD

A) FB SETTINGS IN REGARDS TO THE HARDWARE :
- CPADDRESS = VALUE OF ENTRY STARTS IN CP SETTING ADRESS TAB IN HWCONFIG
- ID = ID IN THE TCP LINKS PROPERTIES IN GENERAL CP TAB IN NETPRO
- MODDBNR = NUMBER OF SIP DB USED
- MODBASEREG = OFFSET OF THE SIPTOL DATAS OF THE PROJECT ( TO BE CONFIRMED BY
THE RENAULT PROJECT MANAGER)

B) FB SETTINGS / PLC PROGRAM :
-MODDBNR = NUMBER OF ""SIP"" DB ASSOCIATED TO CARTE CP 343-1 LEAN CARD IN PLC
AVEC
1ST ETH CP343 CARD   = 89 (SYMBOLIC NAME = SIP1)
2ND ETH CP343 CARD   = 88 (SYMBOLIC NAME = SIP2)
3RD ETH CP343 CARD   = 87 (SYMBOLIC NAME = SIP3)
4TH ETH CP343 CARD   = 86 (SYMBOLIC NAME = SIP4)
5TH ETH CP343 CARD   = 85 (SYMBOLIC NAME = SIP5)
6TH ETH CP343 CARD   = 84 (SYMBOLIC NAME = SIP6)

VARRIABLES TO ADD IN GLOBAL DB IG :
***********************************
IF CARD FAULT USED IN PLC PROGRAM :
IG.DFCCOM1 = BOOL= ETH 1 CONNECTION CARD FAULT
IG.DFCCOM2 = BOOL= ETH 2 CONNECTION CARD FAULT
IG.DFCCOM3 = BOOL= ETH 3 CONNECTION CARD FAULT

********************* FRENCH INFORMATION ****************************
ATTENTION:
**********
L'UTILISATION DE CE FB NECESSISTE UNE MISE EN OEUVRE MATERIELLE ET UN
PARAMETRAGE SUR LE COUPLEUR DE COMMUNICATION SOUS HWCONFIG. ET LA DECALARATION
DU RESEAU DE NIVEAU 2 DE PILOTAGE SOUS NETPRO

MISE EN OEUVRE DU BF (FB1961):
*****************************
1 FB PAR CARTE DE COMMUNICATION CP 343-1 LEAN SUR L'API
PAS DE LIMITE SUR LE NOMBRE DE TRAME SAUF POUR LES COUPLEURS UTILISANT LE
FIRMWARE P2.1.5 OU LE NOMBRE DE CONNEXION EST LIMITE A 8 /CARTE

A)PARRAMETRAGE DU FB PAR RAPPORT A LA CONFIGURATION MATERIELLE :
- CPADDRESS = VALEUR DE DEBUT D'ENTREE DANS ONGLET ADRESSE DES PROPRIETE DU CP
              SOUS HWCONFIG
- ID = ID DANS PROPRIETE LIAISON TCP ONGLET GENERAL DU CP SOUS NETPRO
- MODDBNR = N° DE DB SIP
- MODBASEREG = OFFSET DES INFORMATION COTE SIPTOL POUR LA LIGNE ( A CONFIRMER
               PAR CHEF DE PROJET RENAULT)
B) PARAMETRAGE DU FB / PROGRAMME API :
-MODDBNR = N° DU DB SIP ASSOCIE A LA CARTE CP 343-1 LEAN SUR L'API
AVEC
1ER CARTE ETH CP343  = 89 (NOM SYMBOLIQUE = SIP1)
2EME CARTE ETH CP343 = 88 (NOM SYMBOLIQUE = SIP2)
3EME CARTE ETH CP343 = 87 (NOM SYMBOLIQUE = SIP3)
4EME CARTE ETH CP343 = 86 (NOM SYMBOLIQUE = SIP4)
5EME CARTE ETH CP343 = 85 (NOM SYMBOLIQUE = SIP5)
6EME CARTE ETH CP343 = 84 (NOM SYMBOLIQUE = SIP6)

INFORMATIONS A RAJOUTER DANS LE DB GLOBAL IG :
*********************************************
SI BESOIN DES INFORMATIONS DEFAUT CARTE AU NIVEAU DU PROGRAMME
IG.DFCCOM1 = BOOL= DEFAUT DE CARTE DE COMMUNICATION ETH 1
IG.DFCCOM2 = BOOL= DEFAUT DE CARTE DE COMMUNICATION ETH 2
IG.DFCCOM3 = BOOL= DEFAUT DE CARTE DE COMMUNICATION ETH 3

";""
"GESTION DU ROBOT B0
";"GESTION DU ROBOT B0
";"GESTION DU ROBOT B0
";""
"GESTION DEL ROBOT C1
";"GESTION DU ROBOT C1
";"GESTION DEL ROBOT C1
";""
"GESTION DEL ROBOT C2
";"GESTION DU ROBOT C2
";"GESTION DEL ROBOT C2
";""
"GESTION DEL ROBOT C3
";"GESTION DU ROBOT C3
";"GESTION DEL ROBOT C3
";""
"GESTION DEL ROBOT C4
";"GESTION DU ROBOT C4
";"GESTION DEL ROBOT C4
";""
"GESTION DEL ROBOT E0
";"GESTION DU ROBOT E0
";"GESTION DEL ROBOT E0
";""
"GESTION DEL ROBOT F0
";"GESTION DU ROBOT F0
";"GESTION DEL ROBOT F0
";""
"GESTION DEL ROBOT G1
";"GESTION DU ROBOT G1
";"GESTION DEL ROBOT G1
";""
"GESTION DEL ROBOT G2
";"GESTION DU ROBOT G2
";"GESTION DEL ROBOT G2
";""
"GESTION DEL ROBOT G3
";"GESTION DU ROBOT G3
";"GESTION DEL ROBOT G3
";""
"GESTION DEL ROBOT J0
";"GESTION DU ROBOT J0
";"GESTION DEL ROBOT J0
";""
"GESTION DEL ROBOT L1
";"GESTION DU ROBOT L1
";"GESTION DEL ROBOT L1
";""
"GESTION DEL ROBOT A2
";"GESTION DU ROBOT A2
";"GESTION DEL ROBOT A2
";""
"GESTION DEL ROBOT G4
";"GESTION DU ROBOT G4
";"GESTION DEL ROBOT G4
";""
"EJECUCION SOBRE REARRANQUE EN CALIENTE
";"EXECUTION SUR REDEMARRAGE A CHAUD
";"EJECUCION SOBRE REARRANQUE EN CALIENTE
";""
"1_00_CICLO_Z1
*ODIL_ID:64_0*

";"1_00_CYCLE_Z1
*ODIL_ID:64_0*

";"1_00_CICLO_Z1
*ODIL_ID:64_0*

";""
"0_00_CICLO_ISLA
*ODIL_ID:2_1000*

";"0_00_CYCLE_ILOT
*ODIL_ID:2_1000*

";"0_00_CICLO_ISLA
*ODIL_ID:2_1000*

";""
"Programa M200D";"Programa M200D";"Programa M200D";""
"Information générée par BF_Zone_mode_IHM
";"Information générée par BF_Zone_mode_IHM
";"Information générée par BF_Zone_mode_IHM
";""
"Generated by BF_ILOT
used by BF_ZONE_MODE_IHM
";"Generated by BF_ILOT
used by BF_ZONE_MODE_IHM
";"Generated by BF_ILOT
used by BF_ZONE_MODE_IHM
";""
"UDT utilisée en entrée des BF mouvements Multi_positions
";"UDT utilisée en entrée des BF mouvements Multi_positions
";"UDT utilisée en entrée des BF mouvements Multi_positions
";""
"UDT pour BF mouvement à 2 positions et préhenseur Robot
";"UDT pour BF mouvement à 2 positions et préhenseur Robot
";"UDT pour BF mouvement à 2 positions et préhenseur Robot
";""
" Este DB contiene los datos generados por STEP 7 Notificar errores de sistema.
";" Este DB contiene los datos generados por STEP 7 Notificar errores de sistema.
";" Este DB contiene los datos generados por STEP 7 Notificar errores de sistema.
";""
" Este DB forma parte de Notificar errores de sistema y es actualizado por el FB de Notificar errores de sistema.
 Es una interfaz para la visualización del estado y el soporte de diagnóstico de dispositivos IO PROFINET.
";" Este DB forma parte de Notificar errores de sistema y es actualizado por el FB de Notificar errores de sistema.
 Es una interfaz para la visualización del estado y el soporte de diagnóstico de dispositivos IO PROFINET.
";" Este DB forma parte de Notificar errores de sistema y es actualizado por el FB de Notificar errores de sistema.
 Es una interfaz para la visualización del estado y el soporte de diagnóstico de dispositivos IO PROFINET.
";""
" Este FC contiene el código generado por STEP 7 Notificar errores de sistema.
";" Este FC contiene el código generado por STEP 7 Notificar errores de sistema.
";" Este FC contiene el código generado por STEP 7 Notificar errores de sistema.
";""
" Este FB contiene el código generado por STEP 7 Notificar errores de sistema.
Este bloque es llamado por los OBs de error así como por el OB1 o por un OB de alarma cíclica.
El FB evalúa los errores de sistema y los indica a través de un Alarm_S
al visualizador.
Durante la ejecución del FB se retardan todas las interrupciones.
";" Este FB contiene el código generado por STEP 7 Notificar errores de sistema.
Este bloque es llamado por los OBs de error así como por el OB1 o por un OB de alarma cíclica.
El FB evalúa los errores de sistema y los indica a través de un Alarm_S
al visualizador.
Durante la ejecución del FB se retardan todas las interrupciones.
";" Este FB contiene el código generado por STEP 7 Notificar errores de sistema.
Este bloque es llamado por los OBs de error así como por el OB1 o por un OB de alarma cíclica.
El FB evalúa los errores de sistema y los indica a través de un Alarm_S
al visualizador.
Durante la ejecución del FB se retardan todas las interrupciones.
";""
"CRC=6b7e/IDB=980d
Build S7_S7FFUP_K05.04.03.00_03.03.00.01; 31.01.2007 16:47:52
";"CRC=6b7e/IDB=980d
Build S7_S7FFUP_K05.04.03.00_03.03.00.01; 31.01.2007 16:47:52
";"CRC=6b7e/IDB=980d
Build S7_S7FFUP_K05.04.03.00_03.03.00.01; 31.01.2007 16:47:52
";""
"CRC=14b4/IDB=980d
Build S7_S7FFUP_K05.04.03.00_03.03.00.01; 31.01.2007 16:47:56
";"CRC=14b4/IDB=980d
Build S7_S7FFUP_K05.04.03.00_03.03.00.01; 31.01.2007 16:47:56
";"CRC=14b4/IDB=980d
Build S7_S7FFUP_K05.04.03.00_03.03.00.01; 31.01.2007 16:47:56
";""
"CRC=eda2/IDB=dc2f
Build S7_S7FFUP_K05.04.04.00_03.05.00.01;  2.11.2007 09:27:44
";"CRC=eda2/IDB=dc2f
Build S7_S7FFUP_K05.04.04.00_03.05.00.01;  2.11.2007 09:27:44
";"CRC=eda2/IDB=dc2f
Build S7_S7FFUP_K05.04.04.00_03.05.00.01;  2.11.2007 09:27:44
";""
"CRC=504c/IDB=bed9
Build S7_S7FFUP_K05.04.05.00_03.05.00.02;  2.07.2009 14:59:12
";"CRC=504c/IDB=bed9
Build S7_S7FFUP_K05.04.05.00_03.05.00.02;  2.07.2009 14:59:12
";"CRC=504c/IDB=bed9
Build S7_S7FFUP_K05.04.05.00_03.05.00.02;  2.07.2009 14:59:12
";""
"CRC=40ba/IDB=9e40
Build S7_S7FFUP_K05.04.04.00_03.05.00.01;  2.11.2007 09:27:00
";"CRC=40ba/IDB=9e40
Build S7_S7FFUP_K05.04.04.00_03.05.00.01;  2.11.2007 09:27:00
";"CRC=40ba/IDB=9e40
Build S7_S7FFUP_K05.04.04.00_03.05.00.01;  2.11.2007 09:27:00
";""
"CRC=e1df/IDB=ed43
Build S7_S7FFUP_K05.04.05.00_03.05.00.02;  2.07.2009 14:58:19
";"CRC=e1df/IDB=ed43
Build S7_S7FFUP_K05.04.05.00_03.05.00.02;  2.07.2009 14:58:19
";"CRC=e1df/IDB=ed43
Build S7_S7FFUP_K05.04.05.00_03.05.00.02;  2.07.2009 14:58:19
";""
"CRC=69af/IDB=3326
Build S7_S7FFUP_K05.04.05.00_03.05.00.02;  2.07.2009 14:58:22
";"CRC=69af/IDB=3326
Build S7_S7FFUP_K05.04.05.00_03.05.00.02;  2.07.2009 14:58:22
";"CRC=69af/IDB=3326
Build S7_S7FFUP_K05.04.05.00_03.05.00.02;  2.07.2009 14:58:22
";""
"CRC=9fb4/IDB=d360
Build S7_S7FFUP_K05.04.05.00_03.05.00.02;  2.07.2009 14:59:06
";"CRC=9fb4/IDB=d360
Build S7_S7FFUP_K05.04.05.00_03.05.00.02;  2.07.2009 14:59:06
";"CRC=9fb4/IDB=d360
Build S7_S7FFUP_K05.04.05.00_03.05.00.02;  2.07.2009 14:59:06
";""
"CRC=99ca/IDB=3612
Build S7_S7FFUP_K05.04.03.00_03.03.00.01; 31.01.2007 16:52:22
";"CRC=99ca/IDB=3612
Build S7_S7FFUP_K05.04.03.00_03.03.00.01; 31.01.2007 16:52:22
";"CRC=99ca/IDB=3612
Build S7_S7FFUP_K05.04.03.00_03.03.00.01; 31.01.2007 16:52:22
";""
"**********************************************************************
*                          FB DEV_TABLE                              *
*        PERMET DE REALISER LE DEVERMINAGE D'UNE TABLE               *
**********************************************************************

REFERENCE:  Juin 2008:      Création FB     Franck PIECQ

DESCRIPTION:  LA FB ""DEV_P1"" ASSURE EN MODE DEVERMINAGE :
************  - LA GESTION DES MEMOIRES SUPPORT ET MEMOIRES PIECES
              - LA SELECTION DE LA DIVERSITE UTILISEE
              - LA GESTION DE LA TEMPORISATION D'ATTENTE ENTRE DEUX CAISSES
                SIMULEES


FONCTIONNEMENT: Après avoir valider le mode déverminage,sélectionner une ou
toutes les diversités sur la page WinCC. Le FB crée les mémoires supports et
mémoires pièces (fonctionnement sans support) qui vont permettrent de simuler
la présence d'une caisse à travailler. Elle assure également la création du
mot diversité qui sera utilisé par le process pour l'envoi des codes cycles.
En fonction des diversités sélectionnées en page écran (une ou toutes) la FB
va enchaîner en boucle les diversités.

************

Interface d'entrée :
      Mdv     : Reçoit l'information de mémoire déverminage de la zone
      Inom    : Reçoit l'information de marche normale de la zone
      Imel    : Reçoit l'information de montée élévateur
      Nbdiv   : Nombre de diversité souhaité
      Temp    : Réglage de la temporisation de déverminage table

Interface de sortie :
      Sel_dev : Information de sélection déverminage
      Tdever  : Information de déverminage

Interface d'entrée/sortie :
      Sl_dev  : Sélection de la diversité en page écran
      Msup    : Mémoire support présent de la table
      Mpiec   : Mémoire présence pièce de la table
      Mpat    : Mémoire pièce à travailler
      Mpt     : Mémoire pièce travaillée
NB Reseaux BF 1er Version / Network Number in 1ft version : 12
Dernier ID mis en oeuvre / Last ID implemented : 1803_12
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : 1,....

";"**********************************************************************
*                          FB DEV_TABLE                              *
*        PERMET DE REALISER LE DEVERMINAGE D'UNE TABLE               *
**********************************************************************

REFERENCE:  Juin 2008:      Création FB     Franck PIECQ

DESCRIPTION:  LA FB ""DEV_P1"" ASSURE EN MODE DEVERMINAGE :
************  - LA GESTION DES MEMOIRES SUPPORT ET MEMOIRES PIECES
              - LA SELECTION DE LA DIVERSITE UTILISEE
              - LA GESTION DE LA TEMPORISATION D'ATTENTE ENTRE DEUX CAISSES
                SIMULEES


FONCTIONNEMENT: Après avoir valider le mode déverminage,sélectionner une ou
toutes les diversités sur la page WinCC. Le FB crée les mémoires supports et
mémoires pièces (fonctionnement sans support) qui vont permettrent de simuler
la présence d'une caisse à travailler. Elle assure également la création du
mot diversité qui sera utilisé par le process pour l'envoi des codes cycles.
En fonction des diversités sélectionnées en page écran (une ou toutes) la FB
va enchaîner en boucle les diversités.

************

Interface d'entrée :
      Mdv     : Reçoit l'information de mémoire déverminage de la zone
      Inom    : Reçoit l'information de marche normale de la zone
      Imel    : Reçoit l'information de montée élévateur
      Nbdiv   : Nombre de diversité souhaité
      Temp    : Réglage de la temporisation de déverminage table

Interface de sortie :
      Sel_dev : Information de sélection déverminage
      Tdever  : Information de déverminage

Interface d'entrée/sortie :
      Sl_dev  : Sélection de la diversité en page écran
      Msup    : Mémoire support présent de la table
      Mpiec   : Mémoire présence pièce de la table
      Mpat    : Mémoire pièce à travailler
      Mpt     : Mémoire pièce travaillée
NB Reseaux BF 1er Version / Network Number in 1ft version : 12
Dernier ID mis en oeuvre / Last ID implemented : 1803_12
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : 1,....

";"**********************************************************************
*                          FB DEV_TABLE                              *
*        PERMET DE REALISER LE DEVERMINAGE D'UNE TABLE               *
**********************************************************************

REFERENCE:  Juin 2008:      Création FB     Franck PIECQ

DESCRIPTION:  LA FB ""DEV_P1"" ASSURE EN MODE DEVERMINAGE :
************  - LA GESTION DES MEMOIRES SUPPORT ET MEMOIRES PIECES
              - LA SELECTION DE LA DIVERSITE UTILISEE
              - LA GESTION DE LA TEMPORISATION D'ATTENTE ENTRE DEUX CAISSES
                SIMULEES


FONCTIONNEMENT: Après avoir valider le mode déverminage,sélectionner une ou
toutes les diversités sur la page WinCC. Le FB crée les mémoires supports et
mémoires pièces (fonctionnement sans support) qui vont permettrent de simuler
la présence d'une caisse à travailler. Elle assure également la création du
mot diversité qui sera utilisé par le process pour l'envoi des codes cycles.
En fonction des diversités sélectionnées en page écran (une ou toutes) la FB
va enchaîner en boucle les diversités.

************

Interface d'entrée :
      Mdv     : Reçoit l'information de mémoire déverminage de la zone
      Inom    : Reçoit l'information de marche normale de la zone
      Imel    : Reçoit l'information de montée élévateur
      Nbdiv   : Nombre de diversité souhaité
      Temp    : Réglage de la temporisation de déverminage table

Interface de sortie :
      Sel_dev : Information de sélection déverminage
      Tdever  : Information de déverminage

Interface d'entrée/sortie :
      Sl_dev  : Sélection de la diversité en page écran
      Msup    : Mémoire support présent de la table
      Mpiec   : Mémoire présence pièce de la table
      Mpat    : Mémoire pièce à travailler
      Mpt     : Mémoire pièce travaillée
NB Reseaux BF 1er Version / Network Number in 1ft version : 12
Dernier ID mis en oeuvre / Last ID implemented : 1803_12
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : 1,....

";""
"**********************************************************************
*                             BF_MINOMI                              *
**********************************************************************

REFERENCE:
**********
Date de création : 05/2014 - Auteur : RENAULT
Voir en fin de commentaire les évolutions

DESCRIPTION: 
************ 
Cette BF_Minomi est associé a la BFS_Minomi

Interface d'entrée :
      MODE  : Mode d'utilisation (BA0 = depaletissation ; BA1 = paletissation)
      VAL   : Validation Opérateur
      MDV   : Mode déverminage
      CC    : Condition de comptage
      SA    : Validation fin de Travail
      ICVRb : Securité Arriere du Robot de prise
      ADP   : Info chariot vide envoyé par le robot
      IFCD  : Info Fin de Chariot par detection piece
      NP    : Nb de Piece Par Chariot
      NPPA  : Nb de Piece Pour Alarme
      ITL   : Info test Lampe
      X     : Bit X d'instance de la BFS_Minomi
 
Interface de sortie :
      NPR   : Demande de Travail
      AVC   : Autorisation verrouillage Chariot
      ICV   : Info Chariot Vide
      MDAC  : Memoire Demande Abandon Chariot
      ALA1  : Alarme Retombe Bouton Annulation Defaut de Securite
      ALA2  : Alarme Avant fin de chariot
      APE   : Arret fin chariot (vide)
      DEF   : Defaut Securité Minomi
      VV    : Verrine Verte (autorisation travail)
      VR    : Verrine Rouge (Interdiction travail ou Def si clignotant)
      VADFS : Voyant Bouton Annulation Defaut Secu
      Diag  : Structure Diag pour IHMP

INFORMATION DE FONCTIONNEMENT
*******************************
Cette BF gère le fonctionnement du Minomi : 
Les changements de Minomi, les alertes opérateurs et le compteur de pièce( 
possibilité de changer le nombre de pièce. 
Au chargement l'opérateur introduit le chariot et valide, le verrouillage 
chariot se ferme automatiquement. 
Quand le chariot est verrouillé, la verrine rouge est allumée fixe. 
Quand il y a un défaut sécurité la verrine rouge clignote.
Quand le chariot est vide ou s'il y a une demande de changement; la verrine 
verte est fixe (clignotement pour alerter avant la fin de chariot).

Modifications:
**************
01/07/2014 V1.0 Ajout info APE ""Arret fin chariot (vide)""
15/08/2014 V1.1 Ajout de la fonctionnalite paletissation
16/09/2014 V1.2 Ajout du defaut retombe bouton Annulation Defaut de securite";"**********************************************************************
*                             BF_MINOMI                              *
**********************************************************************

REFERENCE:
**********
Date de création : 05/2014 - Auteur : RENAULT
Voir en fin de commentaire les évolutions

DESCRIPTION: 
************ 
Cette BF_Minomi est associé a la BFS_Minomi

Interface d'entrée :
      MODE  : Mode d'utilisation (BA0 = depaletissation ; BA1 = paletissation)
      VAL   : Validation Opérateur
      MDV   : Mode déverminage
      CC    : Condition de comptage
      SA    : Validation fin de Travail
      ICVRb : Securité Arriere du Robot de prise
      ADP   : Info chariot vide envoyé par le robot
      IFCD  : Info Fin de Chariot par detection piece
      NP    : Nb de Piece Par Chariot
      NPPA  : Nb de Piece Pour Alarme
      ITL   : Info test Lampe
      X     : Bit X d'instance de la BFS_Minomi
 
Interface de sortie :
      NPR   : Demande de Travail
      AVC   : Autorisation verrouillage Chariot
      ICV   : Info Chariot Vide
      MDAC  : Memoire Demande Abandon Chariot
      ALA1  : Alarme Retombe Bouton Annulation Defaut de Securite
      ALA2  : Alarme Avant fin de chariot
      APE   : Arret fin chariot (vide)
      DEF   : Defaut Securité Minomi
      VV    : Verrine Verte (autorisation travail)
      VR    : Verrine Rouge (Interdiction travail ou Def si clignotant)
      VADFS : Voyant Bouton Annulation Defaut Secu
      Diag  : Structure Diag pour IHMP

INFORMATION DE FONCTIONNEMENT
*******************************
Cette BF gère le fonctionnement du Minomi : 
Les changements de Minomi, les alertes opérateurs et le compteur de pièce( 
possibilité de changer le nombre de pièce. 
Au chargement l'opérateur introduit le chariot et valide, le verrouillage 
chariot se ferme automatiquement. 
Quand le chariot est verrouillé, la verrine rouge est allumée fixe. 
Quand il y a un défaut sécurité la verrine rouge clignote.
Quand le chariot est vide ou s'il y a une demande de changement; la verrine 
verte est fixe (clignotement pour alerter avant la fin de chariot).

Modifications:
**************
01/07/2014 V1.0 Ajout info APE ""Arret fin chariot (vide)""
15/08/2014 V1.1 Ajout de la fonctionnalite paletissation
16/09/2014 V1.2 Ajout du defaut retombe bouton Annulation Defaut de securite";"**********************************************************************
*                             BF_MINOMI                              *
**********************************************************************

REFERENCE:
**********
Date de création : 05/2014 - Auteur : RENAULT
Voir en fin de commentaire les évolutions

DESCRIPTION: 
************ 
Cette BF_Minomi est associé a la BFS_Minomi

Interface d'entrée :
      MODE  : Mode d'utilisation (BA0 = depaletissation ; BA1 = paletissation)
      VAL   : Validation Opérateur
      MDV   : Mode déverminage
      CC    : Condition de comptage
      SA    : Validation fin de Travail
      ICVRb : Securité Arriere du Robot de prise
      ADP   : Info chariot vide envoyé par le robot
      IFCD  : Info Fin de Chariot par detection piece
      NP    : Nb de Piece Par Chariot
      NPPA  : Nb de Piece Pour Alarme
      ITL   : Info test Lampe
      X     : Bit X d'instance de la BFS_Minomi
 
Interface de sortie :
      NPR   : Demande de Travail
      AVC   : Autorisation verrouillage Chariot
      ICV   : Info Chariot Vide
      MDAC  : Memoire Demande Abandon Chariot
      ALA1  : Alarme Retombe Bouton Annulation Defaut de Securite
      ALA2  : Alarme Avant fin de chariot
      APE   : Arret fin chariot (vide)
      DEF   : Defaut Securité Minomi
      VV    : Verrine Verte (autorisation travail)
      VR    : Verrine Rouge (Interdiction travail ou Def si clignotant)
      VADFS : Voyant Bouton Annulation Defaut Secu
      Diag  : Structure Diag pour IHMP

INFORMATION DE FONCTIONNEMENT
*******************************
Cette BF gère le fonctionnement du Minomi : 
Les changements de Minomi, les alertes opérateurs et le compteur de pièce( 
possibilité de changer le nombre de pièce. 
Au chargement l'opérateur introduit le chariot et valide, le verrouillage 
chariot se ferme automatiquement. 
Quand le chariot est verrouillé, la verrine rouge est allumée fixe. 
Quand il y a un défaut sécurité la verrine rouge clignote.
Quand le chariot est vide ou s'il y a une demande de changement; la verrine 
verte est fixe (clignotement pour alerter avant la fin de chariot).

Modifications:
**************
01/07/2014 V1.0 Ajout info APE ""Arret fin chariot (vide)""
15/08/2014 V1.1 Ajout de la fonctionnalite paletissation
16/09/2014 V1.2 Ajout du defaut retombe bouton Annulation Defaut de securite";""
"**************************************************************************
*                            BF RB_NISSAN                                *
**************************************************************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 69
Dernier ID mis en oeuvre / Last ID implemented : 1650_69
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"**************************************************************************
*                            BF RB_NISSAN                                *
**************************************************************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 69
Dernier ID mis en oeuvre / Last ID implemented : 1650_69
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"**************************************************************************
*                            BF RB_NISSAN                                *
**************************************************************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 69
Dernier ID mis en oeuvre / Last ID implemented : 1650_69
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";""
"CRC=f0b9/IDB=4e03
Build S7_S7FFUP_K05.04.03.00_03.03.00.01; 31.01.2007 16:48:43
";"CRC=f0b9/IDB=4e03
Build S7_S7FFUP_K05.04.03.00_03.03.00.01; 31.01.2007 16:48:43
";"CRC=f0b9/IDB=4e03
Build S7_S7FFUP_K05.04.03.00_03.03.00.01; 31.01.2007 16:48:43
";""
"CRC=42f1/IDB=54e4
Build S7_S7FFUP_K05.04.03.00_03.03.00.01; 31.01.2007 16:48:50
";"CRC=42f1/IDB=54e4
Build S7_S7FFUP_K05.04.03.00_03.03.00.01; 31.01.2007 16:48:50
";"CRC=42f1/IDB=54e4
Build S7_S7FFUP_K05.04.03.00_03.03.00.01; 31.01.2007 16:48:50
";""
"CRC=8b12/IDB=f2de
Build S7_S7FFUP_K05.04.03.00_03.03.00.01; 31.01.2007 16:48:23
";"CRC=8b12/IDB=f2de
Build S7_S7FFUP_K05.04.03.00_03.03.00.01; 31.01.2007 16:48:23
";"CRC=8b12/IDB=f2de
Build S7_S7FFUP_K05.04.03.00_03.03.00.01; 31.01.2007 16:48:23
";""
"**********************************************************************
*                             BFS_BSEC1                               *
**********************************************************************
(in english further below)
DESCRIPTION: 
************ 
Le FB1710 ""BFS_BSEC1"" est un relais de securite logiciel programme en Step7 + 
Distributed Safety pour assurer la surete de fonctionnement d'une boucle de 
securite geree par automate Simatic Failsafe.
C'est une evolution de la BFS_BSEC pour le Scube Safety V2

Son role est 
""De piloter une sortie F-DO ou PME-F, sur laquelle est cablee en fonction 
du besoin process, un contacteur pour les energies de puissance 
securisees et/ou un relais pour les communs de commande 24V et/ou une 
electrovanne pour les energies de puissance pneumatiques. 
""De controler la coherence entre le pilotage et l'etat des retours
""De mettre a disposition du programme standard un commun de securite "" 
soft "" pour conditionner le pilotage des sorties automates des mouvements a la 
presence effective des communs de commande 24V et/ou des energies de puissance 
et aussi pour conditionner les communs en aval (effet cascade)
""D'avertir du mauvais fonctionnement de la boucle de securite (Alarme : 
pas de retour alors que la sortie est pilotee, Defaut : retour present alors 
que la sortie n'est pas pilotee)

Le FB prend en compte les informations necessaires a la securisation de la 
boucle de securite concernee.
Il renseigne sur l'etat de defaillance de la fonction de securite.

Les blocs associes pour le diagnostic via IHMP+ sont :
BF_IHMCR1 pour les fonctions AU, ES, ZF et toute autre utilisation du 
BFS_BSEC1 par exemple SOP 
Le bloc BFS_BSEC1 peut egalement etre utilise pour la gestion du RL (Relais de 
ligne) des fonctions variateurs Scube (Attention dans ce cas le diagnostic, 
pour 
IHMP+, est realise par la BF associee a la fonction variateur)


*************************English Information*******************************
Description
***********
The FB1710 ""BFS_BSEC1"" is a software safety relay in Step 7 + Distributed 
Safety to ensure the dependability of a safety loop managed by a Simatic 
Failsafe PLC.
It's an evolution of the BFS_BSEC with the Safety Scube V2.

It serves: 
""to control an F-DO or PME-F output, to which a contactor for the 
safe power supplies and/or an relay for the safe commons 24V and/or a solenoid 
valve for the safe power pneumatic fluid is/are wired according to process 
requirements.
""to check the consistency between the control and the status of the 
feedbacks
""to make a ""software"" safe common 24 V available to the standard program, to 
make the control of PLC movement outputs conditional on the effective presence 
of 24V control commons and/or power supplies and also to make the downstream 
commons 24 V conditional (daisy-chained effect)
""to give the alert in the event of incorrect operation of the safety loop 
(Alarm: no feedback although the output is controlled, Fault: feedback present 
although the output is not controlled)

The FB takes into account the Data required to secure the safety loop concerned.
It gives details on the failure status of the safety function and updates the 
data from lien_sec used in the standard program.

The associated blocks for the diagnostics via IHMP+ are:
BF_IHMCR1 for the functions AU, ES, ZF and any other use of BFS_BSEC1 for 
example SOP 
The block BFS_BSEC1 can also be used to manage the RL (Line relay)of the Scube 
drive functions (Attention in this case the diagnosis, for IHMP+, is carried 
out 
with the BF associated with the drive function. 
";"**********************************************************************
*                             BFS_BSEC1                               *
**********************************************************************
(in english further below)
DESCRIPTION: 
************ 
Le FB1710 ""BFS_BSEC1"" est un relais de securite logiciel programme en Step7 + 
Distributed Safety pour assurer la surete de fonctionnement d'une boucle de 
securite geree par automate Simatic Failsafe.
C'est une evolution de la BFS_BSEC pour le Scube Safety V2

Son role est 
""De piloter une sortie F-DO ou PME-F, sur laquelle est cablee en fonction 
du besoin process, un contacteur pour les energies de puissance 
securisees et/ou un relais pour les communs de commande 24V et/ou une 
electrovanne pour les energies de puissance pneumatiques. 
""De controler la coherence entre le pilotage et l'etat des retours
""De mettre a disposition du programme standard un commun de securite "" 
soft "" pour conditionner le pilotage des sorties automates des mouvements a la 
presence effective des communs de commande 24V et/ou des energies de puissance 
et aussi pour conditionner les communs en aval (effet cascade)
""D'avertir du mauvais fonctionnement de la boucle de securite (Alarme : 
pas de retour alors que la sortie est pilotee, Defaut : retour present alors 
que la sortie n'est pas pilotee)

Le FB prend en compte les informations necessaires a la securisation de la 
boucle de securite concernee.
Il renseigne sur l'etat de defaillance de la fonction de securite.

Les blocs associes pour le diagnostic via IHMP+ sont :
BF_IHMCR1 pour les fonctions AU, ES, ZF et toute autre utilisation du 
BFS_BSEC1 par exemple SOP 
Le bloc BFS_BSEC1 peut egalement etre utilise pour la gestion du RL (Relais de 
ligne) des fonctions variateurs Scube (Attention dans ce cas le diagnostic, 
pour 
IHMP+, est realise par la BF associee a la fonction variateur)


*************************English Information*******************************
Description
***********
The FB1710 ""BFS_BSEC1"" is a software safety relay in Step 7 + Distributed 
Safety to ensure the dependability of a safety loop managed by a Simatic 
Failsafe PLC.
It's an evolution of the BFS_BSEC with the Safety Scube V2.

It serves: 
""to control an F-DO or PME-F output, to which a contactor for the 
safe power supplies and/or an relay for the safe commons 24V and/or a solenoid 
valve for the safe power pneumatic fluid is/are wired according to process 
requirements.
""to check the consistency between the control and the status of the 
feedbacks
""to make a ""software"" safe common 24 V available to the standard program, to 
make the control of PLC movement outputs conditional on the effective presence 
of 24V control commons and/or power supplies and also to make the downstream 
commons 24 V conditional (daisy-chained effect)
""to give the alert in the event of incorrect operation of the safety loop 
(Alarm: no feedback although the output is controlled, Fault: feedback present 
although the output is not controlled)

The FB takes into account the Data required to secure the safety loop concerned.
It gives details on the failure status of the safety function and updates the 
data from lien_sec used in the standard program.

The associated blocks for the diagnostics via IHMP+ are:
BF_IHMCR1 for the functions AU, ES, ZF and any other use of BFS_BSEC1 for 
example SOP 
The block BFS_BSEC1 can also be used to manage the RL (Line relay)of the Scube 
drive functions (Attention in this case the diagnosis, for IHMP+, is carried 
out 
with the BF associated with the drive function. 
";"**********************************************************************
*                             BFS_BSEC1                               *
**********************************************************************
(in english further below)
DESCRIPTION: 
************ 
Le FB1710 ""BFS_BSEC1"" est un relais de securite logiciel programme en Step7 + 
Distributed Safety pour assurer la surete de fonctionnement d'une boucle de 
securite geree par automate Simatic Failsafe.
C'est une evolution de la BFS_BSEC pour le Scube Safety V2

Son role est 
""De piloter une sortie F-DO ou PME-F, sur laquelle est cablee en fonction 
du besoin process, un contacteur pour les energies de puissance 
securisees et/ou un relais pour les communs de commande 24V et/ou une 
electrovanne pour les energies de puissance pneumatiques. 
""De controler la coherence entre le pilotage et l'etat des retours
""De mettre a disposition du programme standard un commun de securite "" 
soft "" pour conditionner le pilotage des sorties automates des mouvements a la 
presence effective des communs de commande 24V et/ou des energies de puissance 
et aussi pour conditionner les communs en aval (effet cascade)
""D'avertir du mauvais fonctionnement de la boucle de securite (Alarme : 
pas de retour alors que la sortie est pilotee, Defaut : retour present alors 
que la sortie n'est pas pilotee)

Le FB prend en compte les informations necessaires a la securisation de la 
boucle de securite concernee.
Il renseigne sur l'etat de defaillance de la fonction de securite.

Les blocs associes pour le diagnostic via IHMP+ sont :
BF_IHMCR1 pour les fonctions AU, ES, ZF et toute autre utilisation du 
BFS_BSEC1 par exemple SOP 
Le bloc BFS_BSEC1 peut egalement etre utilise pour la gestion du RL (Relais de 
ligne) des fonctions variateurs Scube (Attention dans ce cas le diagnostic, 
pour 
IHMP+, est realise par la BF associee a la fonction variateur)


*************************English Information*******************************
Description
***********
The FB1710 ""BFS_BSEC1"" is a software safety relay in Step 7 + Distributed 
Safety to ensure the dependability of a safety loop managed by a Simatic 
Failsafe PLC.
It's an evolution of the BFS_BSEC with the Safety Scube V2.

It serves: 
""to control an F-DO or PME-F output, to which a contactor for the 
safe power supplies and/or an relay for the safe commons 24V and/or a solenoid 
valve for the safe power pneumatic fluid is/are wired according to process 
requirements.
""to check the consistency between the control and the status of the 
feedbacks
""to make a ""software"" safe common 24 V available to the standard program, to 
make the control of PLC movement outputs conditional on the effective presence 
of 24V control commons and/or power supplies and also to make the downstream 
commons 24 V conditional (daisy-chained effect)
""to give the alert in the event of incorrect operation of the safety loop 
(Alarm: no feedback although the output is controlled, Fault: feedback present 
although the output is not controlled)

The FB takes into account the Data required to secure the safety loop concerned.
It gives details on the failure status of the safety function and updates the 
data from lien_sec used in the standard program.

The associated blocks for the diagnostics via IHMP+ are:
BF_IHMCR1 for the functions AU, ES, ZF and any other use of BFS_BSEC1 for 
example SOP 
The block BFS_BSEC1 can also be used to manage the RL (Line relay)of the Scube 
drive functions (Attention in this case the diagnosis, for IHMP+, is carried 
out 
with the BF associated with the drive function. 
";""
"**********************************************************************
*                            BFS_BSECTR1                              *
**********************************************************************
(in english further below)
DESCRIPTION: 
************ 
Le FB1711 ""BFS_BSECTR1"" est un relais de securite logiciel temporise a la 
retombee programme en Step7 + Distributed Safety pour assurer la surete de 
fonctionnement d'une boucle de securite gere par automate Simatic Failsafe.
C'est une evolution de la BFS_BSECTR pour le Scube Safety V2

Son role est 
""De piloter une sortie F-DO ou PME-F temporise a la retombee, sur 
laquelle est cablee en fonction du besoin process, un contacteur
pour les energies de puissance securisees et/ou un relais pour 
les communs de commande 24V securises.
""De controler la coherence entre le pilotage et l'etat des retours
""De mettre a disposition du programme standard un commun de securite "" 
soft "" pour conditionner le pilotage des sorties automates des mouvements a la 
presence effective des communs de commande 24V et/ou des energies de puissance
""D'avertir du mauvais fonctionnement de la boucle de securite (Alarme : 
pas de retour alors que la sortie est pilotee, Defaut : retour present alors 
que la sortie n'est pas pilotee)

Le FB prend en compte les informations necessaires a la securisation de la 
boucle de securite concernee.

Il renseigne sur l'etat de defaillance de la fonction de securite. 

Les blocs associes pour le diagnostic via IHMP+ sont :
BF_IHMCR1 pour la fonction ESTR ou toutes les autres utilisation du 
BFS_BSECTR1

*************************English Information*******************************
Description
***********
The FB1711 ""BFS_BSECTR"" is a software safety relay with a delay when 
falling, programmed in Step 7 + Distributed Safety to ensure the dependability 
of a safety loop managed by a Simatic Failsafe PLC.
It's an evolution of the BFS_BSEC with the Safety Scube V2.

It serves: 
""to control an F-DO or PME-F output with a deactivation delay, to which a 
contactor for the safe power supplies and/or a relay for the safe commons 24V 
is/are wired according to process requirements.
""to check the consistency between the control and the status of the feedbacks
""to make a ""software"" safe common 24 V available to the standard program, to 
make the control of PLC movement outputs conditional on the effective presence 
of 24V control commons and/or power supplies. 
""to give the alert in the event of incorrect operation of the safety loop 
(Alarm: no feedback although the output is controlled, Fault: feedback present 
although the output is not controlled)

The FB takes account of the Data required to secure the safety loop concerned.
It gives details on the failure status of the safety function.

The associated blocks for the diagnostics via IHMP+ are:
BF_IHMCR1 for the ESTR function or all other uses of BFS_BSECTR1 
BF_FONC_VAR_S for the RL function of FONC_VAR";"**********************************************************************
*                            BFS_BSECTR1                              *
**********************************************************************
(in english further below)
DESCRIPTION: 
************ 
Le FB1711 ""BFS_BSECTR1"" est un relais de securite logiciel temporise a la 
retombee programme en Step7 + Distributed Safety pour assurer la surete de 
fonctionnement d'une boucle de securite gere par automate Simatic Failsafe.
C'est une evolution de la BFS_BSECTR pour le Scube Safety V2

Son role est 
""De piloter une sortie F-DO ou PME-F temporise a la retombee, sur 
laquelle est cablee en fonction du besoin process, un contacteur
pour les energies de puissance securisees et/ou un relais pour 
les communs de commande 24V securises.
""De controler la coherence entre le pilotage et l'etat des retours
""De mettre a disposition du programme standard un commun de securite "" 
soft "" pour conditionner le pilotage des sorties automates des mouvements a la 
presence effective des communs de commande 24V et/ou des energies de puissance
""D'avertir du mauvais fonctionnement de la boucle de securite (Alarme : 
pas de retour alors que la sortie est pilotee, Defaut : retour present alors 
que la sortie n'est pas pilotee)

Le FB prend en compte les informations necessaires a la securisation de la 
boucle de securite concernee.

Il renseigne sur l'etat de defaillance de la fonction de securite. 

Les blocs associes pour le diagnostic via IHMP+ sont :
BF_IHMCR1 pour la fonction ESTR ou toutes les autres utilisation du 
BFS_BSECTR1

*************************English Information*******************************
Description
***********
The FB1711 ""BFS_BSECTR"" is a software safety relay with a delay when 
falling, programmed in Step 7 + Distributed Safety to ensure the dependability 
of a safety loop managed by a Simatic Failsafe PLC.
It's an evolution of the BFS_BSEC with the Safety Scube V2.

It serves: 
""to control an F-DO or PME-F output with a deactivation delay, to which a 
contactor for the safe power supplies and/or a relay for the safe commons 24V 
is/are wired according to process requirements.
""to check the consistency between the control and the status of the feedbacks
""to make a ""software"" safe common 24 V available to the standard program, to 
make the control of PLC movement outputs conditional on the effective presence 
of 24V control commons and/or power supplies. 
""to give the alert in the event of incorrect operation of the safety loop 
(Alarm: no feedback although the output is controlled, Fault: feedback present 
although the output is not controlled)

The FB takes account of the Data required to secure the safety loop concerned.
It gives details on the failure status of the safety function.

The associated blocks for the diagnostics via IHMP+ are:
BF_IHMCR1 for the ESTR function or all other uses of BFS_BSECTR1 
BF_FONC_VAR_S for the RL function of FONC_VAR";"**********************************************************************
*                            BFS_BSECTR1                              *
**********************************************************************
(in english further below)
DESCRIPTION: 
************ 
Le FB1711 ""BFS_BSECTR1"" est un relais de securite logiciel temporise a la 
retombee programme en Step7 + Distributed Safety pour assurer la surete de 
fonctionnement d'une boucle de securite gere par automate Simatic Failsafe.
C'est une evolution de la BFS_BSECTR pour le Scube Safety V2

Son role est 
""De piloter une sortie F-DO ou PME-F temporise a la retombee, sur 
laquelle est cablee en fonction du besoin process, un contacteur
pour les energies de puissance securisees et/ou un relais pour 
les communs de commande 24V securises.
""De controler la coherence entre le pilotage et l'etat des retours
""De mettre a disposition du programme standard un commun de securite "" 
soft "" pour conditionner le pilotage des sorties automates des mouvements a la 
presence effective des communs de commande 24V et/ou des energies de puissance
""D'avertir du mauvais fonctionnement de la boucle de securite (Alarme : 
pas de retour alors que la sortie est pilotee, Defaut : retour present alors 
que la sortie n'est pas pilotee)

Le FB prend en compte les informations necessaires a la securisation de la 
boucle de securite concernee.

Il renseigne sur l'etat de defaillance de la fonction de securite. 

Les blocs associes pour le diagnostic via IHMP+ sont :
BF_IHMCR1 pour la fonction ESTR ou toutes les autres utilisation du 
BFS_BSECTR1

*************************English Information*******************************
Description
***********
The FB1711 ""BFS_BSECTR"" is a software safety relay with a delay when 
falling, programmed in Step 7 + Distributed Safety to ensure the dependability 
of a safety loop managed by a Simatic Failsafe PLC.
It's an evolution of the BFS_BSEC with the Safety Scube V2.

It serves: 
""to control an F-DO or PME-F output with a deactivation delay, to which a 
contactor for the safe power supplies and/or a relay for the safe commons 24V 
is/are wired according to process requirements.
""to check the consistency between the control and the status of the feedbacks
""to make a ""software"" safe common 24 V available to the standard program, to 
make the control of PLC movement outputs conditional on the effective presence 
of 24V control commons and/or power supplies. 
""to give the alert in the event of incorrect operation of the safety loop 
(Alarm: no feedback although the output is controlled, Fault: feedback present 
although the output is not controlled)

The FB takes account of the Data required to secure the safety loop concerned.
It gives details on the failure status of the safety function.

The associated blocks for the diagnostics via IHMP+ are:
BF_IHMCR1 for the ESTR function or all other uses of BFS_BSECTR1 
BF_FONC_VAR_S for the RL function of FONC_VAR";""
"**********************************************************************
*                             BFS_PORTE1                              *
**********************************************************************
(in english further below)
DESCRIPTION: 
************ 
Le FB1712 ""BFS_PORTE1"" est un relais de securite logiciel programme en Step7 + 
Distributed Safety.
C'est une evolution de la BFS_PORTE pour le Scube Safety V2

Ce FB assure la gestion des composants associes a une porte d'acces Zone.
Il fournit les conditions pour l'activation des boucles de securité ES et ZF.
Il controle le respect de la procedure d'intervention dans la zone.
Il controle le bon fonctionnement de la gache, desactivation de 
l'information cfp a chaque ouverture d'un des deux commutateurs SS ou SPES.

Le blocs associe pour le diagnostic via IHMP+ est:
BF_IHMPORTE1

*************************English Information*******************************
Description
***********
The FB1712 ""BFS_BSEC1"" is a software safety relay in Step 7 + Distributed 
Safety. 
It's an evolution of the BFS_PORTE with the Safety Scube V2.

This FB ensures the management of components combined with a access gate into 
an 
area.
It gives the conditions for the activation of safety loops ES and ZF. 
It checks the respect of the intervention procedure in the area.
It checks the correct working of the striker, deactivation of information cfp 
in every opening of one of both switches SS or SPES.

The associated block for the diagnostic via IHMP+ is:
BF_IHMPORTE1 ";"**********************************************************************
*                             BFS_PORTE1                              *
**********************************************************************
(in english further below)
DESCRIPTION: 
************ 
Le FB1712 ""BFS_PORTE1"" est un relais de securite logiciel programme en Step7 + 
Distributed Safety.
C'est une evolution de la BFS_PORTE pour le Scube Safety V2

Ce FB assure la gestion des composants associes a une porte d'acces Zone.
Il fournit les conditions pour l'activation des boucles de securité ES et ZF.
Il controle le respect de la procedure d'intervention dans la zone.
Il controle le bon fonctionnement de la gache, desactivation de 
l'information cfp a chaque ouverture d'un des deux commutateurs SS ou SPES.

Le blocs associe pour le diagnostic via IHMP+ est:
BF_IHMPORTE1

*************************English Information*******************************
Description
***********
The FB1712 ""BFS_BSEC1"" is a software safety relay in Step 7 + Distributed 
Safety. 
It's an evolution of the BFS_PORTE with the Safety Scube V2.

This FB ensures the management of components combined with a access gate into 
an 
area.
It gives the conditions for the activation of safety loops ES and ZF. 
It checks the respect of the intervention procedure in the area.
It checks the correct working of the striker, deactivation of information cfp 
in every opening of one of both switches SS or SPES.

The associated block for the diagnostic via IHMP+ is:
BF_IHMPORTE1 ";"**********************************************************************
*                             BFS_PORTE1                              *
**********************************************************************
(in english further below)
DESCRIPTION: 
************ 
Le FB1712 ""BFS_PORTE1"" est un relais de securite logiciel programme en Step7 + 
Distributed Safety.
C'est une evolution de la BFS_PORTE pour le Scube Safety V2

Ce FB assure la gestion des composants associes a une porte d'acces Zone.
Il fournit les conditions pour l'activation des boucles de securité ES et ZF.
Il controle le respect de la procedure d'intervention dans la zone.
Il controle le bon fonctionnement de la gache, desactivation de 
l'information cfp a chaque ouverture d'un des deux commutateurs SS ou SPES.

Le blocs associe pour le diagnostic via IHMP+ est:
BF_IHMPORTE1

*************************English Information*******************************
Description
***********
The FB1712 ""BFS_BSEC1"" is a software safety relay in Step 7 + Distributed 
Safety. 
It's an evolution of the BFS_PORTE with the Safety Scube V2.

This FB ensures the management of components combined with a access gate into 
an 
area.
It gives the conditions for the activation of safety loops ES and ZF. 
It checks the respect of the intervention procedure in the area.
It checks the correct working of the striker, deactivation of information cfp 
in every opening of one of both switches SS or SPES.

The associated block for the diagnostic via IHMP+ is:
BF_IHMPORTE1 ";""
"**********************************************************************
*                             BFS_AIR1                                *
**********************************************************************
(in english further below)
DESCRIPTION: 
************ 
Le FB1713 assure la gestion d'un panneau pneumatique pour une zone. Il peut 
piloter les electrovannes 7 bars de mise en pression progressive et de shunt de 
mise en pression progressive.
C'est une evolution de la BFS_BSECTR pour le Scube Safety V2
 
Attention ce pilotage peut egalement etre realise par la sortie securisee de la 
boucle ES.
Le FB genere des defauts en cas de dysfonctionnement (incoherence entre le 
pilotage des electrovannes et le controle de pression pneumatique).
Ce FB est prevu pour etre utilise avec un panneau classique, comportant les 
commandes d'une electrovanne de mise en pression progressive et une 
electrovanne de shunt de mise en pression progressive et un controle de 
pression.
Mais il peut egalement etre utilise pour un panneau comportant uniquement  les 
commandes d'une electrovanne de ligne 7 bars et d'un controle de pression. Dans 
ce cas, on utilisera la sortie EVMPP pour la commande de l'electrovanne.

Le bloc associe pour le diagnostic via IHMP+ est :
BF_IHMAIR1

*************************English Information*******************************
Description
***********
The FB1713 manages a zone's air panel. It can control the line solenoid valves 
(7 Bar) of gradual pressurising and gradual pressurising shunt.
It's an evolution of the BFS_AIR with the Safety Scube V2. 

Note that this control can also be performed by the In Service loop secured 
output.
The FB generates faults if a malfunction occurs (discrepancy between the 
solenoid valve controls and the air pressure check).
This FB is designed to be used with a standard panel, including a gradual 
pressurising solenoid valve, a gradual pressuring shunt solenoid valve and an 
air pressure check.
It can also be used for a panel that only has a line solenoid valve (7 bar) and 
an air pressure check. In this case, we use the EVMPP output for the solenoid 
valve control.

The associated block for the diagnostic via IHMP+ is:
BF_IHMAIR1
";"**********************************************************************
*                             BFS_AIR1                                *
**********************************************************************
(in english further below)
DESCRIPTION: 
************ 
Le FB1713 assure la gestion d'un panneau pneumatique pour une zone. Il peut 
piloter les electrovannes 7 bars de mise en pression progressive et de shunt de 
mise en pression progressive.
C'est une evolution de la BFS_BSECTR pour le Scube Safety V2
 
Attention ce pilotage peut egalement etre realise par la sortie securisee de la 
boucle ES.
Le FB genere des defauts en cas de dysfonctionnement (incoherence entre le 
pilotage des electrovannes et le controle de pression pneumatique).
Ce FB est prevu pour etre utilise avec un panneau classique, comportant les 
commandes d'une electrovanne de mise en pression progressive et une 
electrovanne de shunt de mise en pression progressive et un controle de 
pression.
Mais il peut egalement etre utilise pour un panneau comportant uniquement  les 
commandes d'une electrovanne de ligne 7 bars et d'un controle de pression. Dans 
ce cas, on utilisera la sortie EVMPP pour la commande de l'electrovanne.

Le bloc associe pour le diagnostic via IHMP+ est :
BF_IHMAIR1

*************************English Information*******************************
Description
***********
The FB1713 manages a zone's air panel. It can control the line solenoid valves 
(7 Bar) of gradual pressurising and gradual pressurising shunt.
It's an evolution of the BFS_AIR with the Safety Scube V2. 

Note that this control can also be performed by the In Service loop secured 
output.
The FB generates faults if a malfunction occurs (discrepancy between the 
solenoid valve controls and the air pressure check).
This FB is designed to be used with a standard panel, including a gradual 
pressurising solenoid valve, a gradual pressuring shunt solenoid valve and an 
air pressure check.
It can also be used for a panel that only has a line solenoid valve (7 bar) and 
an air pressure check. In this case, we use the EVMPP output for the solenoid 
valve control.

The associated block for the diagnostic via IHMP+ is:
BF_IHMAIR1
";"**********************************************************************
*                             BFS_AIR1                                *
**********************************************************************
(in english further below)
DESCRIPTION: 
************ 
Le FB1713 assure la gestion d'un panneau pneumatique pour une zone. Il peut 
piloter les electrovannes 7 bars de mise en pression progressive et de shunt de 
mise en pression progressive.
C'est une evolution de la BFS_BSECTR pour le Scube Safety V2
 
Attention ce pilotage peut egalement etre realise par la sortie securisee de la 
boucle ES.
Le FB genere des defauts en cas de dysfonctionnement (incoherence entre le 
pilotage des electrovannes et le controle de pression pneumatique).
Ce FB est prevu pour etre utilise avec un panneau classique, comportant les 
commandes d'une electrovanne de mise en pression progressive et une 
electrovanne de shunt de mise en pression progressive et un controle de 
pression.
Mais il peut egalement etre utilise pour un panneau comportant uniquement  les 
commandes d'une electrovanne de ligne 7 bars et d'un controle de pression. Dans 
ce cas, on utilisera la sortie EVMPP pour la commande de l'electrovanne.

Le bloc associe pour le diagnostic via IHMP+ est :
BF_IHMAIR1

*************************English Information*******************************
Description
***********
The FB1713 manages a zone's air panel. It can control the line solenoid valves 
(7 Bar) of gradual pressurising and gradual pressurising shunt.
It's an evolution of the BFS_AIR with the Safety Scube V2. 

Note that this control can also be performed by the In Service loop secured 
output.
The FB generates faults if a malfunction occurs (discrepancy between the 
solenoid valve controls and the air pressure check).
This FB is designed to be used with a standard panel, including a gradual 
pressurising solenoid valve, a gradual pressuring shunt solenoid valve and an 
air pressure check.
It can also be used for a panel that only has a line solenoid valve (7 bar) and 
an air pressure check. In this case, we use the EVMPP output for the solenoid 
valve control.

The associated block for the diagnostic via IHMP+ is:
BF_IHMAIR1
";""
"**********************************************************************
*                               BFS_CRM1                              *
**********************************************************************
(in english further below)
DESCRIPTION: 
************ 
Le FB1714 ""BFS_CRM1"" est un relais de securite logiciel programme en Step7 + 
Distributed Safety.
Il controle l'etat du relais de controle de masse .
C'est une evolution de la BFS_CRM pour le Scube Safety V2

Il est a appeler autant de fois qu'il y a d'alimentation 24V.
Le bloc associe pour le diagnostic via IHMP+ est :
BF_IHMCRM1

*************************English Information*******************************
Description
***********
The ""BFS_CRM1"" FB1714 is a software safety relay programmed in Step 7 + 
Distributed Safety.
It checks the status of the earthing check relay.
It's an evolution of the BFS_CRM with the Safety Scube V2.

It is to be integrated for each 24V control power supply.
The associated block for the diagnostic via IHMP+ is:
BF_IHMCRM1";"**********************************************************************
*                               BFS_CRM1                              *
**********************************************************************
(in english further below)
DESCRIPTION: 
************ 
Le FB1714 ""BFS_CRM1"" est un relais de securite logiciel programme en Step7 + 
Distributed Safety.
Il controle l'etat du relais de controle de masse .
C'est une evolution de la BFS_CRM pour le Scube Safety V2

Il est a appeler autant de fois qu'il y a d'alimentation 24V.
Le bloc associe pour le diagnostic via IHMP+ est :
BF_IHMCRM1

*************************English Information*******************************
Description
***********
The ""BFS_CRM1"" FB1714 is a software safety relay programmed in Step 7 + 
Distributed Safety.
It checks the status of the earthing check relay.
It's an evolution of the BFS_CRM with the Safety Scube V2.

It is to be integrated for each 24V control power supply.
The associated block for the diagnostic via IHMP+ is:
BF_IHMCRM1";"**********************************************************************
*                               BFS_CRM1                              *
**********************************************************************
(in english further below)
DESCRIPTION: 
************ 
Le FB1714 ""BFS_CRM1"" est un relais de securite logiciel programme en Step7 + 
Distributed Safety.
Il controle l'etat du relais de controle de masse .
C'est une evolution de la BFS_CRM pour le Scube Safety V2

Il est a appeler autant de fois qu'il y a d'alimentation 24V.
Le bloc associe pour le diagnostic via IHMP+ est :
BF_IHMCRM1

*************************English Information*******************************
Description
***********
The ""BFS_CRM1"" FB1714 is a software safety relay programmed in Step 7 + 
Distributed Safety.
It checks the status of the earthing check relay.
It's an evolution of the BFS_CRM with the Safety Scube V2.

It is to be integrated for each 24V control power supply.
The associated block for the diagnostic via IHMP+ is:
BF_IHMCRM1";""
"**********************************************************************
*                               BFS_CR1                               *
**********************************************************************
(in english further below)
DESCRIPTION: 
************ 
Le FB1715 ""BFS_CR1"" est un relais de securite logiciel programme en Step7 + 
Distributed Safety.
C'est une evolution de la BFS_CR pour le Scube Safety V2

Il verifie la coherence entre la commande d'un relais et son etat. 

Le bloc associe pour le diagnostic via IHMP+ est :
BF_IHMCR1

*************************English Information*******************************
Description
***********
The ""BFS_CR1"" FB1715 is a software safety relay programmed in Step 7 + 
Distributed Safety.
It's an evolution of the BFS_CR with the Safety Scube V2.

It checks the consistency between the relay control and its state.

The associated block for the diagnostic via IHMP+ is:
BF_IHMCR1";"**********************************************************************
*                               BFS_CR1                               *
**********************************************************************
(in english further below)
DESCRIPTION: 
************ 
Le FB1715 ""BFS_CR1"" est un relais de securite logiciel programme en Step7 + 
Distributed Safety.
C'est une evolution de la BFS_CR pour le Scube Safety V2

Il verifie la coherence entre la commande d'un relais et son etat. 

Le bloc associe pour le diagnostic via IHMP+ est :
BF_IHMCR1

*************************English Information*******************************
Description
***********
The ""BFS_CR1"" FB1715 is a software safety relay programmed in Step 7 + 
Distributed Safety.
It's an evolution of the BFS_CR with the Safety Scube V2.

It checks the consistency between the relay control and its state.

The associated block for the diagnostic via IHMP+ is:
BF_IHMCR1";"**********************************************************************
*                               BFS_CR1                               *
**********************************************************************
(in english further below)
DESCRIPTION: 
************ 
Le FB1715 ""BFS_CR1"" est un relais de securite logiciel programme en Step7 + 
Distributed Safety.
C'est une evolution de la BFS_CR pour le Scube Safety V2

Il verifie la coherence entre la commande d'un relais et son etat. 

Le bloc associe pour le diagnostic via IHMP+ est :
BF_IHMCR1

*************************English Information*******************************
Description
***********
The ""BFS_CR1"" FB1715 is a software safety relay programmed in Step 7 + 
Distributed Safety.
It's an evolution of the BFS_CR with the Safety Scube V2.

It checks the consistency between the relay control and its state.

The associated block for the diagnostic via IHMP+ is:
BF_IHMCR1";""
"**********************************************************************
*                               BFS_CAME_ROBOT1                       *
**********************************************************************
(in english further below)
DESCRIPTION: 
************ 
Le FB1716 ""BFS_CAME_ROBOT1""  est un relais de securite logiciel programme en 
Step7 + Distributed Safety.
C'est une evolution de la BFS_CAME_ROBOT pour le Scube Safety V2

Il controle le bon fonctionnement de la came robot (controle came a 0 et 
controle came a 1 dans un cycle piece).
Il est a integrer autant de fois qu'il y a de came robot.
Le bloc associe pour le diagnostic via IHMP+ est :
BF_IHMCAME_ROBOT1

*************************English Information*******************************
Description
***********
The ""BFS_CAME_ROBOT1"" FB1716 is a software safety relay in Step 7 + Distributed 
Safety.
It's an evolution of the CAME_ROBOT with the Safety Scube V2.  

It checks the correct operation of the Robot cam (cam check set to 0 and cam 
check set to 1 in a part cycle).
It should be integrated for each robot cam.
The associated block for the diagnostic via IHMP+ is:
BF_IHMCAME_ROBOT1";"**********************************************************************
*                               BFS_CAME_ROBOT1                       *
**********************************************************************
(in english further below)
DESCRIPTION: 
************ 
Le FB1716 ""BFS_CAME_ROBOT1""  est un relais de securite logiciel programme en 
Step7 + Distributed Safety.
C'est une evolution de la BFS_CAME_ROBOT pour le Scube Safety V2

Il controle le bon fonctionnement de la came robot (controle came a 0 et 
controle came a 1 dans un cycle piece).
Il est a integrer autant de fois qu'il y a de came robot.
Le bloc associe pour le diagnostic via IHMP+ est :
BF_IHMCAME_ROBOT1

*************************English Information*******************************
Description
***********
The ""BFS_CAME_ROBOT1"" FB1716 is a software safety relay in Step 7 + Distributed 
Safety.
It's an evolution of the CAME_ROBOT with the Safety Scube V2.  

It checks the correct operation of the Robot cam (cam check set to 0 and cam 
check set to 1 in a part cycle).
It should be integrated for each robot cam.
The associated block for the diagnostic via IHMP+ is:
BF_IHMCAME_ROBOT1";"**********************************************************************
*                               BFS_CAME_ROBOT1                       *
**********************************************************************
(in english further below)
DESCRIPTION: 
************ 
Le FB1716 ""BFS_CAME_ROBOT1""  est un relais de securite logiciel programme en 
Step7 + Distributed Safety.
C'est une evolution de la BFS_CAME_ROBOT pour le Scube Safety V2

Il controle le bon fonctionnement de la came robot (controle came a 0 et 
controle came a 1 dans un cycle piece).
Il est a integrer autant de fois qu'il y a de came robot.
Le bloc associe pour le diagnostic via IHMP+ est :
BF_IHMCAME_ROBOT1

*************************English Information*******************************
Description
***********
The ""BFS_CAME_ROBOT1"" FB1716 is a software safety relay in Step 7 + Distributed 
Safety.
It's an evolution of the CAME_ROBOT with the Safety Scube V2.  

It checks the correct operation of the Robot cam (cam check set to 0 and cam 
check set to 1 in a part cycle).
It should be integrated for each robot cam.
The associated block for the diagnostic via IHMP+ is:
BF_IHMCAME_ROBOT1";""
"**********************************************************************
*                             BFS_ROB_KUKA_PS                              *
**********************************************************************
(in english further below)
DESCRIPTION: 
************ 
Le FB1720 ""BFS_ROB_KUKA_PS"" est un relais de securite logiciel programme en 
Step7 + Distributed Safety pour gerer les echanges de securite d'un automate 
Simatic Failsafe vers un robot Kuka Profisafe.

Son role est de mettre les informations de securite a disposition de la trame 
Profisafe:
-information autorisant la mise sous puissance du robot, signal SHS1
-information assurant la securite des intervenants par rapport au robot, signal 
BS
-information assurant la securite des intervenants par rapport a l'outillage 
robot, signal US2
et de forcer a 1 les signaux NHE, SHS2 et SBH, non utilises dans le standard 
Renault
 
Pas de  bloc associe pour le diagnostic via IHMP+


*************************English Information*******************************
Description
***********
The FB1720 ""BFS_ROB_PS"" is a software safety relay in Step 7 + Distributed 
Safety to manage the safety exchanges from Simatic Failsafe PLC to a Profisafe 
Kuka robot.

It serves to put the safety exchanges coming facility to robot on the Profisafe 
frame:
-information allowing the electric power of robot, SHS1 signal
-information safeguarding the operator in relation to robot, BS signal
-information safeguarding operator in relation to robot tooling, US2 signal
and to force to 1 the NHE, SHS2 and SBH signals, no used in the Renault standard

No associated block for the diagnostics via IHMP+.

";"**********************************************************************
*                             BFS_ROB_KUKA_PS                              *
**********************************************************************
(in english further below)
DESCRIPTION: 
************ 
Le FB1720 ""BFS_ROB_KUKA_PS"" est un relais de securite logiciel programme en 
Step7 + Distributed Safety pour gerer les echanges de securite d'un automate 
Simatic Failsafe vers un robot Kuka Profisafe.

Son role est de mettre les informations de securite a disposition de la trame 
Profisafe:
-information autorisant la mise sous puissance du robot, signal SHS1
-information assurant la securite des intervenants par rapport au robot, signal 
BS
-information assurant la securite des intervenants par rapport a l'outillage 
robot, signal US2
et de forcer a 1 les signaux NHE, SHS2 et SBH, non utilises dans le standard 
Renault
 
Pas de  bloc associe pour le diagnostic via IHMP+


*************************English Information*******************************
Description
***********
The FB1720 ""BFS_ROB_PS"" is a software safety relay in Step 7 + Distributed 
Safety to manage the safety exchanges from Simatic Failsafe PLC to a Profisafe 
Kuka robot.

It serves to put the safety exchanges coming facility to robot on the Profisafe 
frame:
-information allowing the electric power of robot, SHS1 signal
-information safeguarding the operator in relation to robot, BS signal
-information safeguarding operator in relation to robot tooling, US2 signal
and to force to 1 the NHE, SHS2 and SBH signals, no used in the Renault standard

No associated block for the diagnostics via IHMP+.

";"**********************************************************************
*                             BFS_ROB_KUKA_PS                              *
**********************************************************************
(in english further below)
DESCRIPTION: 
************ 
Le FB1720 ""BFS_ROB_KUKA_PS"" est un relais de securite logiciel programme en 
Step7 + Distributed Safety pour gerer les echanges de securite d'un automate 
Simatic Failsafe vers un robot Kuka Profisafe.

Son role est de mettre les informations de securite a disposition de la trame 
Profisafe:
-information autorisant la mise sous puissance du robot, signal SHS1
-information assurant la securite des intervenants par rapport au robot, signal 
BS
-information assurant la securite des intervenants par rapport a l'outillage 
robot, signal US2
et de forcer a 1 les signaux NHE, SHS2 et SBH, non utilises dans le standard 
Renault
 
Pas de  bloc associe pour le diagnostic via IHMP+


*************************English Information*******************************
Description
***********
The FB1720 ""BFS_ROB_PS"" is a software safety relay in Step 7 + Distributed 
Safety to manage the safety exchanges from Simatic Failsafe PLC to a Profisafe 
Kuka robot.

It serves to put the safety exchanges coming facility to robot on the Profisafe 
frame:
-information allowing the electric power of robot, SHS1 signal
-information safeguarding the operator in relation to robot, BS signal
-information safeguarding operator in relation to robot tooling, US2 signal
and to force to 1 the NHE, SHS2 and SBH signals, no used in the Renault standard

No associated block for the diagnostics via IHMP+.

";""
"**********************************************************************
*                             BFS_Minomi                             *
**********************************************************************
(in english further below)
DESCRIPTION: 
************ 

*************************English Information*******************************
Description
***********";"**********************************************************************
*                             BFS_Minomi                             *
**********************************************************************
(in english further below)
DESCRIPTION: 
************ 

*************************English Information*******************************
Description
***********";"**********************************************************************
*                             BFS_Minomi                             *
**********************************************************************
(in english further below)
DESCRIPTION: 
************ 

*************************English Information*******************************
Description
***********";""
"******************************************************************************
*                                BF_PnPn_Mesg                                *
*           Echanges Inter-API par messagerie sur le reseau Profinet         *
*                     via une passerelle Profinet PNPN                       *
*                                                                            *
*    Exchanges Inter-PLC using Record Data over Profinet network             *
*                         via Profinet PNPN gateway                          *
******************************************************************************

Description:
------------
Ce FB permet de realiser des echanges inter-API par messagerie sur le reseau
Profinet, via une passerelle Profinet PNPN

Ces echanges concernent uniquement les informations hors traitement temps reel
De type "" diversite "" (temps d'actualisation des donnees pouvant aller jusqu'a
2 secondes)
Sont exclu les informations de securite et d'animation machine

Limite:
-------
- maxi 4096 octets, par module "" record data"" ("" RD_Write "" ou "" RD_Read "")
parametres sur la passerelle.
- il est possible d'utiliser jusqu'a 16 modules par passerelle.
- Ces echanges par messagerie ne sont possibles qu'a partir de la reference
6ES7158-3AD01-0XA0 de la passerelle (6ES7158-3AD00-0XA0 NON compatible)

Pre requis:
-----------
Dans le projet Step7 de chaque API utilisant ce type d'echanges.
Sous HW Config :
a) integrer la passerelle PNPN dans le reseau Profinet
b) ajouter les modules RD Read (lecture de donnees) et RD Write (ecriture des
donnees) par slot

Dependances:
------------
Ce bloc utilise:
      - Le SFB52 ""RDREC"" (lecture d'un enregistrement dans un composant))
      - Le SFB53 ""WRREC"" (ecriture d'un enregistrement dans un composant)
      - Le SFB 4 ""TON"" (temporisation)

Mise en oeuvre :
----------------
- Pour chaque module ""RD Read"" parametre pour la passerelle PN/PN -->
Ajouter une instance de la BF, en mode Lecture (parametre ""mode"" = 1)

- Pour chaque module ""RD Write"" parametre pour la passerelle PN/PN -->
Ajouter une instance de la BF en mode Ecriture (parametre ""mode"" = 2)

- Les donnees en lecture ou ecriture sont documentees dans le DB1852 "" PN_MESG ""
- L'entree RD_Addr : est documentee avec l'adresse du module ""RD Read"" ou ""RD
Write"" parametree dans HW Config (a lire directement dans HW Config)
Rappel : un module ""RD Read"" doit IMPERATIVEMENT etre parametre avec la meme
adresse de debut pour l'Adresse E (I) (entree) et l'Adresse S (Q) (sortie)

Defauts:
--------
Les valeurs de CodeDef, Addinf et Addinf2, sont remises a 0, a la retombee de la
Sortie Def (suite a valid=0)

         Hex Dec
CodeDef = 1 | 1  valeur du parametre ""Mode"" (IN) incorrect
             AddInf= Valeur documentee sur l'entree ""Mode""

         Hex Dec
CodeDef = 8 | 8 Defaut en mode Ecriture
             AddInf=  DF80B100 - Valeur du parametre ""Length"" superieur a 4096
                                 octets
             AddInf= C0893A00 - Parametre Z_Data : DB non charge dans l'API
             AddInf= C0892200 - Parametre Z_Data : DB existant mais trop petit
             AddInf= C080B100 - Parametre Z_Data : longueur de Z_Data trop
                                courte par rapport aux donnees a ecrire
             AddInf = autres valeurs = voir STATUS du SFB53

         Hex Dec
CodeDef =10 | 16 Passerelle non prete
             AddInf= 0 - Defaut Profinet pour la passerelle, cote reseau de cet
                         API
                         *nom d'IO device NOK
                         *ou, reseau Profinet debranche de la passerelle, ou en
                          amont
                       - Parametre RD_Addr (IN) mal renseigne

             AddInf= 2 - Defaut Profinet pour la passerelle, cote reseau de
                         l'API partenaire.
                         * nom d'IO device NOK
                         * ou, reseau debranche de la passerelle, ou en amont

             AddInf= autres valeurs = voir Mot de Status de la passerelle

         Hex Dec
CodeDef = 40 |64 TimeOUT : le partenaire n'a pas lu les donnees ecrites
              AddInf= valeur = Voir  Mot de Status de la passerelle
              - API partenaire en STOP
              - lecture non realisee par l'API partenaire

         Hex  Dec
CodeDef= 200 | 512 Defaut en mode lecture
             AddInf= C08A3A00 - Parametre Z_Data : DB non charge dans l'API
             AddInf= C08A2300 - Parametre Z_Data : DB existant mais trop petit
             AddInf= C080B100 - Parametre Z_Data : longueur de Z_Data trop
                                courte par rapport aux donnees a recevoir
            AddInf= autres valeurs == STATUS du SFB52

         Hex   Dec
CodeDef= 400 | 1024  TimeOUT durant le traitement du SFB RDREC
            AddInf= STATUS du SFB52

         Hex    Dec
CodeDef= 800 | 2048  TimeOut : le partenaire de l'echange n'a rien ecrit
                 Cause frequente
                - Stop API chez le partenaire
                - ecriture non validee dans l'API partenaire


-----------------------------ENGLISH INFORMATION-----------------------------
Description:
------------
This FB allows to realize exchanges Inter-PLC using Record Data over Profinet
network via Profinet PNPN gateway

These exchanges concern only the information out of real-time treatment
Example ""diversity part"" type (time of data updating can lenght up to 2
secondes).
The information of safety and order of the facility are excluded

Limit:
-------
- maxi of 4096 bytes , by module "" record data"" ("" RD_Write "" or "" RD_Read "")
used in the gateway.
- It is possible to use up to 16 modules by gateway.
- These exchanges by messaging system are possible only from the reference
6ES7158-3AD01-0XA0 of the gateway (6ES7158-3AD00-0XA0 not compatible)

Prerequisite:
----------
In the Step7 project for each PLC using this type of exchanges.
Under HW Config:
a) add the PNPN gateway in the Profinet network
b) add RD Read device (reading of data) and RD Write (writing of data)on the
slot of the gateway


Dependences:
------------
  This block uses:
      - The SFB52 "" RDREC "" (reading of a recording in a device)
      - The SFB53 "" WRREC "" (writing of a recording in a device)
      - The SFB 4 ""TON"" (Timer)

Implementation:
----------------
- For each "" RD Read ""module of the PN / PN gateway - >
Add an instance of the BF, in reading mode (parameter ""mode"" = 1)
- For each "" RD Write module of the PN / PN gateway - >
Add an instance of the BF, in Writing mode (parameter ""mode"" = 2)

- The read or wrote datas are from the DB1852 "" PN_MESG ""
- The RD_Addr input: must by parameterized with the address of the""RD Read"" or
""RD Write"" device used in HW Config (to be read directly in HW Config)
Reminder: a "" RD Read "" module must be parameterized with the same starting
address for the Address E (I) (Input) and the address S (Q) (output)

Faults:
-------
The values of CodeDef, Addinf and Addinf2, are reset, at the fallout of
""Def"" output (when ""valid"" goes to 0)

         Hex Dec
CodeDef = 1 | 1 value of the parameter ""Mode"" (IN) fault
             AddInf = Value ""Mode"" input

         Hex Dec
CodeDef = 8 ¦ 8 Writing mode fault
             AddInf = DF80B100 - Value of the"" Length"" higher than 4096 bytes
             AddInf = C0893A00 - Z_Data: DB unloads in the plc
             AddInf = C0892200 - Z_Data: DB existing but too small
             AddInf = C080B100 - Z_Data: length too short in regard to the data
                                 to write
             AddInf = Other values = see STATUS of the SFB53

         Hex Dec
CodeDef =10 | 16 Gateway not ready
             AddInf= 0 - Gateway Profinet fault in the network of this PLC
                                * IO device Name NOK
                                * Or, network unplugged on the gateway or on
                                    upstream device
                       - RD_Addr (IN) not documented
             AddInf= 2 - Gateway Profinet fault in the network of the other PLC
                                * IO device Name NOK
                                * Or, network unplugged on the gateway or on
                                   upstream device
              AddInf= Other values = see STATUS of the Gateway

         Hex Dec
CodeDef = 40 |64 TimeOUT fault: Partner hasn't read the writing datas
                AddInf= values = see STATUS of the Gateway

          Hex  Dec
CodeDef = 200 |512 Reading mode fault
             AddInf = C08A3A00 - Z_Data: DB unloads in the plc
             AddInf = C08A2300 - Z_Data: DB existing but too small
             AddInf = C080B100 - Z_Data: length too short in regard to the data
                                 to receive
             AddInf = Other values = see STATUS of the SFB52

         Hex   Dec
CodeDef= 400 | 1024  TimeOUT Fault During the treatment of SFB RDREC
AddInf= STATUS of SFB52

         Hex    Dec
CodeDef= 800 | 2048  TimeOut Fault : The partner of the exchange wrote nothing.
                 Frequent causes
                - PLC partner in stop
                - Writing not validated in the PLC partner

-----------------------------_ODIL_ID_-----------------------------

NB Reseaux BF 1er Version / Network Number in 1ft version : 22
Dernier ID mis en oeuvre / Last ID implemented : 1852_22
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....
";"******************************************************************************
*                                BF_PnPn_Mesg                                *
*           Echanges Inter-API par messagerie sur le reseau Profinet         *
*                     via une passerelle Profinet PNPN                       *
*                                                                            *
*    Exchanges Inter-PLC using Record Data over Profinet network             *
*                         via Profinet PNPN gateway                          *
******************************************************************************

Description:
------------
Ce FB permet de realiser des echanges inter-API par messagerie sur le reseau
Profinet, via une passerelle Profinet PNPN

Ces echanges concernent uniquement les informations hors traitement temps reel
De type "" diversite "" (temps d'actualisation des donnees pouvant aller jusqu'a
2 secondes)
Sont exclu les informations de securite et d'animation machine

Limite:
-------
- maxi 4096 octets, par module "" record data"" ("" RD_Write "" ou "" RD_Read "")
parametres sur la passerelle.
- il est possible d'utiliser jusqu'a 16 modules par passerelle.
- Ces echanges par messagerie ne sont possibles qu'a partir de la reference
6ES7158-3AD01-0XA0 de la passerelle (6ES7158-3AD00-0XA0 NON compatible)

Pre requis:
-----------
Dans le projet Step7 de chaque API utilisant ce type d'echanges.
Sous HW Config :
a) integrer la passerelle PNPN dans le reseau Profinet
b) ajouter les modules RD Read (lecture de donnees) et RD Write (ecriture des
donnees) par slot

Dependances:
------------
Ce bloc utilise:
      - Le SFB52 ""RDREC"" (lecture d'un enregistrement dans un composant))
      - Le SFB53 ""WRREC"" (ecriture d'un enregistrement dans un composant)
      - Le SFB 4 ""TON"" (temporisation)

Mise en oeuvre :
----------------
- Pour chaque module ""RD Read"" parametre pour la passerelle PN/PN -->
Ajouter une instance de la BF, en mode Lecture (parametre ""mode"" = 1)

- Pour chaque module ""RD Write"" parametre pour la passerelle PN/PN -->
Ajouter une instance de la BF en mode Ecriture (parametre ""mode"" = 2)

- Les donnees en lecture ou ecriture sont documentees dans le DB1852 "" PN_MESG ""
- L'entree RD_Addr : est documentee avec l'adresse du module ""RD Read"" ou ""RD
Write"" parametree dans HW Config (a lire directement dans HW Config)
Rappel : un module ""RD Read"" doit IMPERATIVEMENT etre parametre avec la meme
adresse de debut pour l'Adresse E (I) (entree) et l'Adresse S (Q) (sortie)

Defauts:
--------
Les valeurs de CodeDef, Addinf et Addinf2, sont remises a 0, a la retombee de la
Sortie Def (suite a valid=0)

         Hex Dec
CodeDef = 1 | 1  valeur du parametre ""Mode"" (IN) incorrect
             AddInf= Valeur documentee sur l'entree ""Mode""

         Hex Dec
CodeDef = 8 | 8 Defaut en mode Ecriture
             AddInf=  DF80B100 - Valeur du parametre ""Length"" superieur a 4096
                                 octets
             AddInf= C0893A00 - Parametre Z_Data : DB non charge dans l'API
             AddInf= C0892200 - Parametre Z_Data : DB existant mais trop petit
             AddInf= C080B100 - Parametre Z_Data : longueur de Z_Data trop
                                courte par rapport aux donnees a ecrire
             AddInf = autres valeurs = voir STATUS du SFB53

         Hex Dec
CodeDef =10 | 16 Passerelle non prete
             AddInf= 0 - Defaut Profinet pour la passerelle, cote reseau de cet
                         API
                         *nom d'IO device NOK
                         *ou, reseau Profinet debranche de la passerelle, ou en
                          amont
                       - Parametre RD_Addr (IN) mal renseigne

             AddInf= 2 - Defaut Profinet pour la passerelle, cote reseau de
                         l'API partenaire.
                         * nom d'IO device NOK
                         * ou, reseau debranche de la passerelle, ou en amont

             AddInf= autres valeurs = voir Mot de Status de la passerelle

         Hex Dec
CodeDef = 40 |64 TimeOUT : le partenaire n'a pas lu les donnees ecrites
              AddInf= valeur = Voir  Mot de Status de la passerelle
              - API partenaire en STOP
              - lecture non realisee par l'API partenaire

         Hex  Dec
CodeDef= 200 | 512 Defaut en mode lecture
             AddInf= C08A3A00 - Parametre Z_Data : DB non charge dans l'API
             AddInf= C08A2300 - Parametre Z_Data : DB existant mais trop petit
             AddInf= C080B100 - Parametre Z_Data : longueur de Z_Data trop
                                courte par rapport aux donnees a recevoir
            AddInf= autres valeurs == STATUS du SFB52

         Hex   Dec
CodeDef= 400 | 1024  TimeOUT durant le traitement du SFB RDREC
            AddInf= STATUS du SFB52

         Hex    Dec
CodeDef= 800 | 2048  TimeOut : le partenaire de l'echange n'a rien ecrit
                 Cause frequente
                - Stop API chez le partenaire
                - ecriture non validee dans l'API partenaire


-----------------------------ENGLISH INFORMATION-----------------------------
Description:
------------
This FB allows to realize exchanges Inter-PLC using Record Data over Profinet
network via Profinet PNPN gateway

These exchanges concern only the information out of real-time treatment
Example ""diversity part"" type (time of data updating can lenght up to 2
secondes).
The information of safety and order of the facility are excluded

Limit:
-------
- maxi of 4096 bytes , by module "" record data"" ("" RD_Write "" or "" RD_Read "")
used in the gateway.
- It is possible to use up to 16 modules by gateway.
- These exchanges by messaging system are possible only from the reference
6ES7158-3AD01-0XA0 of the gateway (6ES7158-3AD00-0XA0 not compatible)

Prerequisite:
----------
In the Step7 project for each PLC using this type of exchanges.
Under HW Config:
a) add the PNPN gateway in the Profinet network
b) add RD Read device (reading of data) and RD Write (writing of data)on the
slot of the gateway


Dependences:
------------
  This block uses:
      - The SFB52 "" RDREC "" (reading of a recording in a device)
      - The SFB53 "" WRREC "" (writing of a recording in a device)
      - The SFB 4 ""TON"" (Timer)

Implementation:
----------------
- For each "" RD Read ""module of the PN / PN gateway - >
Add an instance of the BF, in reading mode (parameter ""mode"" = 1)
- For each "" RD Write module of the PN / PN gateway - >
Add an instance of the BF, in Writing mode (parameter ""mode"" = 2)

- The read or wrote datas are from the DB1852 "" PN_MESG ""
- The RD_Addr input: must by parameterized with the address of the""RD Read"" or
""RD Write"" device used in HW Config (to be read directly in HW Config)
Reminder: a "" RD Read "" module must be parameterized with the same starting
address for the Address E (I) (Input) and the address S (Q) (output)

Faults:
-------
The values of CodeDef, Addinf and Addinf2, are reset, at the fallout of
""Def"" output (when ""valid"" goes to 0)

         Hex Dec
CodeDef = 1 | 1 value of the parameter ""Mode"" (IN) fault
             AddInf = Value ""Mode"" input

         Hex Dec
CodeDef = 8 ¦ 8 Writing mode fault
             AddInf = DF80B100 - Value of the"" Length"" higher than 4096 bytes
             AddInf = C0893A00 - Z_Data: DB unloads in the plc
             AddInf = C0892200 - Z_Data: DB existing but too small
             AddInf = C080B100 - Z_Data: length too short in regard to the data
                                 to write
             AddInf = Other values = see STATUS of the SFB53

         Hex Dec
CodeDef =10 | 16 Gateway not ready
             AddInf= 0 - Gateway Profinet fault in the network of this PLC
                                * IO device Name NOK
                                * Or, network unplugged on the gateway or on
                                    upstream device
                       - RD_Addr (IN) not documented
             AddInf= 2 - Gateway Profinet fault in the network of the other PLC
                                * IO device Name NOK
                                * Or, network unplugged on the gateway or on
                                   upstream device
              AddInf= Other values = see STATUS of the Gateway

         Hex Dec
CodeDef = 40 |64 TimeOUT fault: Partner hasn't read the writing datas
                AddInf= values = see STATUS of the Gateway

          Hex  Dec
CodeDef = 200 |512 Reading mode fault
             AddInf = C08A3A00 - Z_Data: DB unloads in the plc
             AddInf = C08A2300 - Z_Data: DB existing but too small
             AddInf = C080B100 - Z_Data: length too short in regard to the data
                                 to receive
             AddInf = Other values = see STATUS of the SFB52

         Hex   Dec
CodeDef= 400 | 1024  TimeOUT Fault During the treatment of SFB RDREC
AddInf= STATUS of SFB52

         Hex    Dec
CodeDef= 800 | 2048  TimeOut Fault : The partner of the exchange wrote nothing.
                 Frequent causes
                - PLC partner in stop
                - Writing not validated in the PLC partner

-----------------------------_ODIL_ID_-----------------------------

NB Reseaux BF 1er Version / Network Number in 1ft version : 22
Dernier ID mis en oeuvre / Last ID implemented : 1852_22
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....
";"******************************************************************************
*                                BF_PnPn_Mesg                                *
*           Echanges Inter-API par messagerie sur le reseau Profinet         *
*                     via une passerelle Profinet PNPN                       *
*                                                                            *
*    Exchanges Inter-PLC using Record Data over Profinet network             *
*                         via Profinet PNPN gateway                          *
******************************************************************************

Description:
------------
Ce FB permet de realiser des echanges inter-API par messagerie sur le reseau
Profinet, via une passerelle Profinet PNPN

Ces echanges concernent uniquement les informations hors traitement temps reel
De type "" diversite "" (temps d'actualisation des donnees pouvant aller jusqu'a
2 secondes)
Sont exclu les informations de securite et d'animation machine

Limite:
-------
- maxi 4096 octets, par module "" record data"" ("" RD_Write "" ou "" RD_Read "")
parametres sur la passerelle.
- il est possible d'utiliser jusqu'a 16 modules par passerelle.
- Ces echanges par messagerie ne sont possibles qu'a partir de la reference
6ES7158-3AD01-0XA0 de la passerelle (6ES7158-3AD00-0XA0 NON compatible)

Pre requis:
-----------
Dans le projet Step7 de chaque API utilisant ce type d'echanges.
Sous HW Config :
a) integrer la passerelle PNPN dans le reseau Profinet
b) ajouter les modules RD Read (lecture de donnees) et RD Write (ecriture des
donnees) par slot

Dependances:
------------
Ce bloc utilise:
      - Le SFB52 ""RDREC"" (lecture d'un enregistrement dans un composant))
      - Le SFB53 ""WRREC"" (ecriture d'un enregistrement dans un composant)
      - Le SFB 4 ""TON"" (temporisation)

Mise en oeuvre :
----------------
- Pour chaque module ""RD Read"" parametre pour la passerelle PN/PN -->
Ajouter une instance de la BF, en mode Lecture (parametre ""mode"" = 1)

- Pour chaque module ""RD Write"" parametre pour la passerelle PN/PN -->
Ajouter une instance de la BF en mode Ecriture (parametre ""mode"" = 2)

- Les donnees en lecture ou ecriture sont documentees dans le DB1852 "" PN_MESG ""
- L'entree RD_Addr : est documentee avec l'adresse du module ""RD Read"" ou ""RD
Write"" parametree dans HW Config (a lire directement dans HW Config)
Rappel : un module ""RD Read"" doit IMPERATIVEMENT etre parametre avec la meme
adresse de debut pour l'Adresse E (I) (entree) et l'Adresse S (Q) (sortie)

Defauts:
--------
Les valeurs de CodeDef, Addinf et Addinf2, sont remises a 0, a la retombee de la
Sortie Def (suite a valid=0)

         Hex Dec
CodeDef = 1 | 1  valeur du parametre ""Mode"" (IN) incorrect
             AddInf= Valeur documentee sur l'entree ""Mode""

         Hex Dec
CodeDef = 8 | 8 Defaut en mode Ecriture
             AddInf=  DF80B100 - Valeur du parametre ""Length"" superieur a 4096
                                 octets
             AddInf= C0893A00 - Parametre Z_Data : DB non charge dans l'API
             AddInf= C0892200 - Parametre Z_Data : DB existant mais trop petit
             AddInf= C080B100 - Parametre Z_Data : longueur de Z_Data trop
                                courte par rapport aux donnees a ecrire
             AddInf = autres valeurs = voir STATUS du SFB53

         Hex Dec
CodeDef =10 | 16 Passerelle non prete
             AddInf= 0 - Defaut Profinet pour la passerelle, cote reseau de cet
                         API
                         *nom d'IO device NOK
                         *ou, reseau Profinet debranche de la passerelle, ou en
                          amont
                       - Parametre RD_Addr (IN) mal renseigne

             AddInf= 2 - Defaut Profinet pour la passerelle, cote reseau de
                         l'API partenaire.
                         * nom d'IO device NOK
                         * ou, reseau debranche de la passerelle, ou en amont

             AddInf= autres valeurs = voir Mot de Status de la passerelle

         Hex Dec
CodeDef = 40 |64 TimeOUT : le partenaire n'a pas lu les donnees ecrites
              AddInf= valeur = Voir  Mot de Status de la passerelle
              - API partenaire en STOP
              - lecture non realisee par l'API partenaire

         Hex  Dec
CodeDef= 200 | 512 Defaut en mode lecture
             AddInf= C08A3A00 - Parametre Z_Data : DB non charge dans l'API
             AddInf= C08A2300 - Parametre Z_Data : DB existant mais trop petit
             AddInf= C080B100 - Parametre Z_Data : longueur de Z_Data trop
                                courte par rapport aux donnees a recevoir
            AddInf= autres valeurs == STATUS du SFB52

         Hex   Dec
CodeDef= 400 | 1024  TimeOUT durant le traitement du SFB RDREC
            AddInf= STATUS du SFB52

         Hex    Dec
CodeDef= 800 | 2048  TimeOut : le partenaire de l'echange n'a rien ecrit
                 Cause frequente
                - Stop API chez le partenaire
                - ecriture non validee dans l'API partenaire


-----------------------------ENGLISH INFORMATION-----------------------------
Description:
------------
This FB allows to realize exchanges Inter-PLC using Record Data over Profinet
network via Profinet PNPN gateway

These exchanges concern only the information out of real-time treatment
Example ""diversity part"" type (time of data updating can lenght up to 2
secondes).
The information of safety and order of the facility are excluded

Limit:
-------
- maxi of 4096 bytes , by module "" record data"" ("" RD_Write "" or "" RD_Read "")
used in the gateway.
- It is possible to use up to 16 modules by gateway.
- These exchanges by messaging system are possible only from the reference
6ES7158-3AD01-0XA0 of the gateway (6ES7158-3AD00-0XA0 not compatible)

Prerequisite:
----------
In the Step7 project for each PLC using this type of exchanges.
Under HW Config:
a) add the PNPN gateway in the Profinet network
b) add RD Read device (reading of data) and RD Write (writing of data)on the
slot of the gateway


Dependences:
------------
  This block uses:
      - The SFB52 "" RDREC "" (reading of a recording in a device)
      - The SFB53 "" WRREC "" (writing of a recording in a device)
      - The SFB 4 ""TON"" (Timer)

Implementation:
----------------
- For each "" RD Read ""module of the PN / PN gateway - >
Add an instance of the BF, in reading mode (parameter ""mode"" = 1)
- For each "" RD Write module of the PN / PN gateway - >
Add an instance of the BF, in Writing mode (parameter ""mode"" = 2)

- The read or wrote datas are from the DB1852 "" PN_MESG ""
- The RD_Addr input: must by parameterized with the address of the""RD Read"" or
""RD Write"" device used in HW Config (to be read directly in HW Config)
Reminder: a "" RD Read "" module must be parameterized with the same starting
address for the Address E (I) (Input) and the address S (Q) (output)

Faults:
-------
The values of CodeDef, Addinf and Addinf2, are reset, at the fallout of
""Def"" output (when ""valid"" goes to 0)

         Hex Dec
CodeDef = 1 | 1 value of the parameter ""Mode"" (IN) fault
             AddInf = Value ""Mode"" input

         Hex Dec
CodeDef = 8 ¦ 8 Writing mode fault
             AddInf = DF80B100 - Value of the"" Length"" higher than 4096 bytes
             AddInf = C0893A00 - Z_Data: DB unloads in the plc
             AddInf = C0892200 - Z_Data: DB existing but too small
             AddInf = C080B100 - Z_Data: length too short in regard to the data
                                 to write
             AddInf = Other values = see STATUS of the SFB53

         Hex Dec
CodeDef =10 | 16 Gateway not ready
             AddInf= 0 - Gateway Profinet fault in the network of this PLC
                                * IO device Name NOK
                                * Or, network unplugged on the gateway or on
                                    upstream device
                       - RD_Addr (IN) not documented
             AddInf= 2 - Gateway Profinet fault in the network of the other PLC
                                * IO device Name NOK
                                * Or, network unplugged on the gateway or on
                                   upstream device
              AddInf= Other values = see STATUS of the Gateway

         Hex Dec
CodeDef = 40 |64 TimeOUT fault: Partner hasn't read the writing datas
                AddInf= values = see STATUS of the Gateway

          Hex  Dec
CodeDef = 200 |512 Reading mode fault
             AddInf = C08A3A00 - Z_Data: DB unloads in the plc
             AddInf = C08A2300 - Z_Data: DB existing but too small
             AddInf = C080B100 - Z_Data: length too short in regard to the data
                                 to receive
             AddInf = Other values = see STATUS of the SFB52

         Hex   Dec
CodeDef= 400 | 1024  TimeOUT Fault During the treatment of SFB RDREC
AddInf= STATUS of SFB52

         Hex    Dec
CodeDef= 800 | 2048  TimeOut Fault : The partner of the exchange wrote nothing.
                 Frequent causes
                - PLC partner in stop
                - Writing not validated in the PLC partner

-----------------------------_ODIL_ID_-----------------------------

NB Reseaux BF 1er Version / Network Number in 1ft version : 22
Dernier ID mis en oeuvre / Last ID implemented : 1852_22
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....
";""
"***************************************************************************
*                           FB ""G120DS_V2""                                  *
*   ASSURE le PILOTAGE des FONCTIONS VARIATEUR de Manutention Standard    *
*      INSURE the ORDER of the DRIVE FUNCTIONS of Standard Handling       *
***************************************************************************
ATTENTION La BF necessite au minimum:
- une version de starter V4.1.2
- l'utilisation des scripts variateur en V2
- Une CPU 319F en version 3.2 mini et Step7 manager en version 5.5
- une mise en oeuvre des BFS de type Safety_V2 (BFS_BSECTR1, BFS_CR1)

WARNING this BF requires a minimal of
- starter in V4.1.2
- the use of drive scripts in V2
- an CPU 319F in minimal version 3.2 of firmeware and Stepè manager in 5.5
version
- the implementation and using of Safety_V2 BFS type (BFS_BSECTR1, BFS_CR1)

( In English further below)
DESCRIPTION:
************
   - gestion de la fonction variateur G120D RENAULT
   - gere 1 axe asservi avec les fonctionnements suivant :
       Mode 0 = Frequence fixe et commande TOR par bus
       Mode 1 = Consigne de frequence et commande TOR par bus
       Mode 2 = Frequence fixe, commande TOR par bus et pre coupure dans le
       variateur
  - gere un deuxieme axe en option en pilotage TOR :
   Le coffret variateur G120D permet de raccorder 2 detecteurs de positions.
   Il y jusqu'a 4 ordres de mouvements possibles suivant les contraintes
mecaniques de l'installation.

MISE EN OEUVRE :
***************
Pour plus de details voir la documentation Word

 - configuration logiciel minimum :
STEP 7 V5.5
S7 Distributed SAFETY V5.4 SP3
SIMATIC DRIVE ES BASIC V5.4 SP2
STARTER V4.1.2
SIMATIC WINCC FLEXIBLE 2005 SP1 HF7

- Scripts moteur pour STARTER :
   Mode 0 =  script 0_V2
   Mode 1 =  script 1_V2
   Mode 2 standard = script 2_V2

Pour plus de renseignement voir votre charger d'affaire automatisme

 - Relais de ligne :
  ce BF doit etre Associe au bloc SAFETY BFS_BSECTR1 ou BFS BSEC1 et BFS_CR1
  pour assurer la gestion des relais de lignes :
  RLV ( Relais de ligne Variateur) AXE1
  RL (Relais de ligne) AXE2

 - Selection des vitesses :
Cette fonction n'est valable que pour les MODES 0 et 2 de l'Axe1.
Les entrees Pilotage BIT1VIT et BIT2VIT permettent de selectionner jusqu'a 3
Vitesses sur le variateur pour l'axe 1
L'utilisation des deux bool a Zero n'est pas preconisee.

                              *Pilotage.BIT2VIT  * Pilotage.BIT1VIT
****************************************************************************
Vistesse 2 (exemple Grande vitesse)   *1        *   1
****************************************************************************
Vitesse  1 (exemple petite Vitesse)   *1        *   0
****************************************************************************
Vitesse pour Mouvement en Mode Manuel *0        *   1


CODES des DEFAUTS:
***********
   Valeur associee a la sortie diag.codedef :
1 = Defaut Frequence mini maxi
2 =  Defaut RLV
4  = Defaut Frein
8 = Defaut RL
16 = Defaut relais thermique
32 = Defaut de parametrage temps de retombee trop long
64 = Défaut pilotage variateur
256 = Alarme RLV
512 = Alarme RL
1024 = Defaut entrainement
2048 = Defaut disjoncteur
4096 = Option selection Amont /Aval Rearment
8192 = Defaut Variateur Indisponible
16384 = Frequence Hors plage


************************** ENGLISH INFORMATION  ****************************

DESCRIPTION :
**************
- Management and Order of the RENAULT Drive G120D  function
- Manages 1 axis controlled with the following functionings :
       Mode 0 = fixed Frequency and command (orders) TOR by bus
       Mode 1 = Setting of frequency and command (order) TOR by bus
       Mode 2 = fixed Frequency, command (order) TOR by bus and Pre-cutout in

    Drive (Variator)
- Manage a second axis with TOR command in option.
- G120D drive box allows to link 2 sensors of positions
- It to has 4 orders of possible movements following the mechanical stresses of
the installation.

OPERATING :
************
For more details see the Word Documentation
- Minimum software configuration:
STEP 7 V5.5
S7 Distributed SAFETY V5.4 SP3
SIMATIC DRIVE ES BASIC V5.4 SP2
STARTER V4.1.2
SIMATIC WINCC FLEXIBLE 2005 SP1 HF7

- Motor scripts for STARTER :
   Mode 0 =  script 0_V2
   Mode 1 =  script 1_V2
   Mode 2 standard = script 2_V2

For more information contact your Automatism Business charging (CAMI RENAULT)

- Lines relays
This Bf must be associated to the safety BF , BFS_BSECTR1 or BFS_BSEC1 and
BFS_CR1 to insure the management and order off the lines relays :
RLV ( Drive line relay) Axis 1
RL (Line relay) Axis 2

- Speeds Selection :
This function can be used only for Axis 1 in MODE 0 or MODE 2
Pilotage.BIT1VIT and BIT2VIT input allow to select up to 3 speeds on the Drive
for the axis 1
The use both bool in Zero is  no recommended

                                *Pilotage.BIT2VIT  * Pilotage.BIT1VIT
****************************************************************************
Speed 2 ( High speed example)   *1                 *   1
****************************************************************************
Spped 1  ( Low speed example)   *1                 *   0
****************************************************************************
Speed for Manual movements      *0                 *   1

FAULT CODE :
*************
Values of Diag.codedef output :

1 = Min./max. Frequency Fault
2 = Line relay Drive fault
4 = Brake fault
8 = Line relay fault
16 = Thermal relay fault
32 = Fall time too long setting fault
64 = Drive Order running Fault
256 = Drive Line relay alarm
512 = RL (line relay) alarm
1024 = Drive fault
2048 = Circuit-breaker fault
4096 = Option Selection upstream /downstream Reset
8192 = Drive Unavailable Fault
16384 = Frequency Outside Range

************************** _ODIL_ID_ ****************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 60
Dernier ID mis en oeuvre / Last ID implemented : 1853_60
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"***************************************************************************
*                           FB ""G120DS_V2""                                  *
*   ASSURE le PILOTAGE des FONCTIONS VARIATEUR de Manutention Standard    *
*      INSURE the ORDER of the DRIVE FUNCTIONS of Standard Handling       *
***************************************************************************
ATTENTION La BF necessite au minimum:
- une version de starter V4.1.2
- l'utilisation des scripts variateur en V2
- Une CPU 319F en version 3.2 mini et Step7 manager en version 5.5
- une mise en oeuvre des BFS de type Safety_V2 (BFS_BSECTR1, BFS_CR1)

WARNING this BF requires a minimal of
- starter in V4.1.2
- the use of drive scripts in V2
- an CPU 319F in minimal version 3.2 of firmeware and Stepè manager in 5.5
version
- the implementation and using of Safety_V2 BFS type (BFS_BSECTR1, BFS_CR1)

( In English further below)
DESCRIPTION:
************
   - gestion de la fonction variateur G120D RENAULT
   - gere 1 axe asservi avec les fonctionnements suivant :
       Mode 0 = Frequence fixe et commande TOR par bus
       Mode 1 = Consigne de frequence et commande TOR par bus
       Mode 2 = Frequence fixe, commande TOR par bus et pre coupure dans le
       variateur
  - gere un deuxieme axe en option en pilotage TOR :
   Le coffret variateur G120D permet de raccorder 2 detecteurs de positions.
   Il y jusqu'a 4 ordres de mouvements possibles suivant les contraintes
mecaniques de l'installation.

MISE EN OEUVRE :
***************
Pour plus de details voir la documentation Word

 - configuration logiciel minimum :
STEP 7 V5.5
S7 Distributed SAFETY V5.4 SP3
SIMATIC DRIVE ES BASIC V5.4 SP2
STARTER V4.1.2
SIMATIC WINCC FLEXIBLE 2005 SP1 HF7

- Scripts moteur pour STARTER :
   Mode 0 =  script 0_V2
   Mode 1 =  script 1_V2
   Mode 2 standard = script 2_V2

Pour plus de renseignement voir votre charger d'affaire automatisme

 - Relais de ligne :
  ce BF doit etre Associe au bloc SAFETY BFS_BSECTR1 ou BFS BSEC1 et BFS_CR1
  pour assurer la gestion des relais de lignes :
  RLV ( Relais de ligne Variateur) AXE1
  RL (Relais de ligne) AXE2

 - Selection des vitesses :
Cette fonction n'est valable que pour les MODES 0 et 2 de l'Axe1.
Les entrees Pilotage BIT1VIT et BIT2VIT permettent de selectionner jusqu'a 3
Vitesses sur le variateur pour l'axe 1
L'utilisation des deux bool a Zero n'est pas preconisee.

                              *Pilotage.BIT2VIT  * Pilotage.BIT1VIT
****************************************************************************
Vistesse 2 (exemple Grande vitesse)   *1        *   1
****************************************************************************
Vitesse  1 (exemple petite Vitesse)   *1        *   0
****************************************************************************
Vitesse pour Mouvement en Mode Manuel *0        *   1


CODES des DEFAUTS:
***********
   Valeur associee a la sortie diag.codedef :
1 = Defaut Frequence mini maxi
2 =  Defaut RLV
4  = Defaut Frein
8 = Defaut RL
16 = Defaut relais thermique
32 = Defaut de parametrage temps de retombee trop long
64 = Défaut pilotage variateur
256 = Alarme RLV
512 = Alarme RL
1024 = Defaut entrainement
2048 = Defaut disjoncteur
4096 = Option selection Amont /Aval Rearment
8192 = Defaut Variateur Indisponible
16384 = Frequence Hors plage


************************** ENGLISH INFORMATION  ****************************

DESCRIPTION :
**************
- Management and Order of the RENAULT Drive G120D  function
- Manages 1 axis controlled with the following functionings :
       Mode 0 = fixed Frequency and command (orders) TOR by bus
       Mode 1 = Setting of frequency and command (order) TOR by bus
       Mode 2 = fixed Frequency, command (order) TOR by bus and Pre-cutout in

    Drive (Variator)
- Manage a second axis with TOR command in option.
- G120D drive box allows to link 2 sensors of positions
- It to has 4 orders of possible movements following the mechanical stresses of
the installation.

OPERATING :
************
For more details see the Word Documentation
- Minimum software configuration:
STEP 7 V5.5
S7 Distributed SAFETY V5.4 SP3
SIMATIC DRIVE ES BASIC V5.4 SP2
STARTER V4.1.2
SIMATIC WINCC FLEXIBLE 2005 SP1 HF7

- Motor scripts for STARTER :
   Mode 0 =  script 0_V2
   Mode 1 =  script 1_V2
   Mode 2 standard = script 2_V2

For more information contact your Automatism Business charging (CAMI RENAULT)

- Lines relays
This Bf must be associated to the safety BF , BFS_BSECTR1 or BFS_BSEC1 and
BFS_CR1 to insure the management and order off the lines relays :
RLV ( Drive line relay) Axis 1
RL (Line relay) Axis 2

- Speeds Selection :
This function can be used only for Axis 1 in MODE 0 or MODE 2
Pilotage.BIT1VIT and BIT2VIT input allow to select up to 3 speeds on the Drive
for the axis 1
The use both bool in Zero is  no recommended

                                *Pilotage.BIT2VIT  * Pilotage.BIT1VIT
****************************************************************************
Speed 2 ( High speed example)   *1                 *   1
****************************************************************************
Spped 1  ( Low speed example)   *1                 *   0
****************************************************************************
Speed for Manual movements      *0                 *   1

FAULT CODE :
*************
Values of Diag.codedef output :

1 = Min./max. Frequency Fault
2 = Line relay Drive fault
4 = Brake fault
8 = Line relay fault
16 = Thermal relay fault
32 = Fall time too long setting fault
64 = Drive Order running Fault
256 = Drive Line relay alarm
512 = RL (line relay) alarm
1024 = Drive fault
2048 = Circuit-breaker fault
4096 = Option Selection upstream /downstream Reset
8192 = Drive Unavailable Fault
16384 = Frequency Outside Range

************************** _ODIL_ID_ ****************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 60
Dernier ID mis en oeuvre / Last ID implemented : 1853_60
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"***************************************************************************
*                           FB ""G120DS_V2""                                  *
*   ASSURE le PILOTAGE des FONCTIONS VARIATEUR de Manutention Standard    *
*      INSURE the ORDER of the DRIVE FUNCTIONS of Standard Handling       *
***************************************************************************
ATTENTION La BF necessite au minimum:
- une version de starter V4.1.2
- l'utilisation des scripts variateur en V2
- Une CPU 319F en version 3.2 mini et Step7 manager en version 5.5
- une mise en oeuvre des BFS de type Safety_V2 (BFS_BSECTR1, BFS_CR1)

WARNING this BF requires a minimal of
- starter in V4.1.2
- the use of drive scripts in V2
- an CPU 319F in minimal version 3.2 of firmeware and Stepè manager in 5.5
version
- the implementation and using of Safety_V2 BFS type (BFS_BSECTR1, BFS_CR1)

( In English further below)
DESCRIPTION:
************
   - gestion de la fonction variateur G120D RENAULT
   - gere 1 axe asservi avec les fonctionnements suivant :
       Mode 0 = Frequence fixe et commande TOR par bus
       Mode 1 = Consigne de frequence et commande TOR par bus
       Mode 2 = Frequence fixe, commande TOR par bus et pre coupure dans le
       variateur
  - gere un deuxieme axe en option en pilotage TOR :
   Le coffret variateur G120D permet de raccorder 2 detecteurs de positions.
   Il y jusqu'a 4 ordres de mouvements possibles suivant les contraintes
mecaniques de l'installation.

MISE EN OEUVRE :
***************
Pour plus de details voir la documentation Word

 - configuration logiciel minimum :
STEP 7 V5.5
S7 Distributed SAFETY V5.4 SP3
SIMATIC DRIVE ES BASIC V5.4 SP2
STARTER V4.1.2
SIMATIC WINCC FLEXIBLE 2005 SP1 HF7

- Scripts moteur pour STARTER :
   Mode 0 =  script 0_V2
   Mode 1 =  script 1_V2
   Mode 2 standard = script 2_V2

Pour plus de renseignement voir votre charger d'affaire automatisme

 - Relais de ligne :
  ce BF doit etre Associe au bloc SAFETY BFS_BSECTR1 ou BFS BSEC1 et BFS_CR1
  pour assurer la gestion des relais de lignes :
  RLV ( Relais de ligne Variateur) AXE1
  RL (Relais de ligne) AXE2

 - Selection des vitesses :
Cette fonction n'est valable que pour les MODES 0 et 2 de l'Axe1.
Les entrees Pilotage BIT1VIT et BIT2VIT permettent de selectionner jusqu'a 3
Vitesses sur le variateur pour l'axe 1
L'utilisation des deux bool a Zero n'est pas preconisee.

                              *Pilotage.BIT2VIT  * Pilotage.BIT1VIT
****************************************************************************
Vistesse 2 (exemple Grande vitesse)   *1        *   1
****************************************************************************
Vitesse  1 (exemple petite Vitesse)   *1        *   0
****************************************************************************
Vitesse pour Mouvement en Mode Manuel *0        *   1


CODES des DEFAUTS:
***********
   Valeur associee a la sortie diag.codedef :
1 = Defaut Frequence mini maxi
2 =  Defaut RLV
4  = Defaut Frein
8 = Defaut RL
16 = Defaut relais thermique
32 = Defaut de parametrage temps de retombee trop long
64 = Défaut pilotage variateur
256 = Alarme RLV
512 = Alarme RL
1024 = Defaut entrainement
2048 = Defaut disjoncteur
4096 = Option selection Amont /Aval Rearment
8192 = Defaut Variateur Indisponible
16384 = Frequence Hors plage


************************** ENGLISH INFORMATION  ****************************

DESCRIPTION :
**************
- Management and Order of the RENAULT Drive G120D  function
- Manages 1 axis controlled with the following functionings :
       Mode 0 = fixed Frequency and command (orders) TOR by bus
       Mode 1 = Setting of frequency and command (order) TOR by bus
       Mode 2 = fixed Frequency, command (order) TOR by bus and Pre-cutout in

    Drive (Variator)
- Manage a second axis with TOR command in option.
- G120D drive box allows to link 2 sensors of positions
- It to has 4 orders of possible movements following the mechanical stresses of
the installation.

OPERATING :
************
For more details see the Word Documentation
- Minimum software configuration:
STEP 7 V5.5
S7 Distributed SAFETY V5.4 SP3
SIMATIC DRIVE ES BASIC V5.4 SP2
STARTER V4.1.2
SIMATIC WINCC FLEXIBLE 2005 SP1 HF7

- Motor scripts for STARTER :
   Mode 0 =  script 0_V2
   Mode 1 =  script 1_V2
   Mode 2 standard = script 2_V2

For more information contact your Automatism Business charging (CAMI RENAULT)

- Lines relays
This Bf must be associated to the safety BF , BFS_BSECTR1 or BFS_BSEC1 and
BFS_CR1 to insure the management and order off the lines relays :
RLV ( Drive line relay) Axis 1
RL (Line relay) Axis 2

- Speeds Selection :
This function can be used only for Axis 1 in MODE 0 or MODE 2
Pilotage.BIT1VIT and BIT2VIT input allow to select up to 3 speeds on the Drive
for the axis 1
The use both bool in Zero is  no recommended

                                *Pilotage.BIT2VIT  * Pilotage.BIT1VIT
****************************************************************************
Speed 2 ( High speed example)   *1                 *   1
****************************************************************************
Spped 1  ( Low speed example)   *1                 *   0
****************************************************************************
Speed for Manual movements      *0                 *   1

FAULT CODE :
*************
Values of Diag.codedef output :

1 = Min./max. Frequency Fault
2 = Line relay Drive fault
4 = Brake fault
8 = Line relay fault
16 = Thermal relay fault
32 = Fall time too long setting fault
64 = Drive Order running Fault
256 = Drive Line relay alarm
512 = RL (line relay) alarm
1024 = Drive fault
2048 = Circuit-breaker fault
4096 = Option Selection upstream /downstream Reset
8192 = Drive Unavailable Fault
16384 = Frequency Outside Range

************************** _ODIL_ID_ ****************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 60
Dernier ID mis en oeuvre / Last ID implemented : 1853_60
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";""
"********************************************************************************
*                                 BF_G120_S                                    *
*   ASSURE le PILOTAGE des FONCTIONS VARIATEUR G120 de Manutention Standard    *
* MAKE the control and command of the G120 DRIVE FUNCTIONS of Standard Handling*
*******************************************************************************
( In English further below)

DESCRIPTION:
************
Ce FB est associe au FB BFS_BSECTR qui pilote le RLV du variateur
Le FB assure :
Le pilotage du variateur
Le diagnostic de la fonction
Le diagnostic de la partie Fail Safe du programme
Le diagnostic du RLV

MISE EN OEUVRE :
****************
Le forcage frein est uniquement autorise que sur les axes horizontaux
1) IN :
------
In_fonc = aux entree TOR de la fonction G120
F_DBrlv_No = au numero du DB d'instance du bloc appelant le BFS_BSECTR qui

       pilote le RLV
FDBrlv_offset = l'adresse en octet de la fonction BSECTR dans le DB instance
Safety.
Tps_dece = Temps de deceleration reel du variateur :
            (Valeur P1121 du Var * Frequence) / 100
Pilotage = peut etre assure soit:
- Par le programme d'animation
- Par des pages ecrans Wincc Uniquement pour la maintenance.
- Par la page ecran de pilotage manuel operateur.
Au niveau mise en oeuvre sur un MOP il faut obligatoirement interdire le
pilotage simultane des ecrans Wincc maintenance et des ecrans de pilotage
manuel
operateur (depuis un SOP distant).
Sur un LOP se probleme n'existe pas vue qu'il ne peut y avoir qu'une seule page
ecrans active sur l'afficheur de la zone en meme temps

2) OUT :
-------
F_AR = utilise pour une coupure immediate du RLV.
Elle est a raccorder sur la patte Cci (Condition de coupure immediate) du
BFS_BSECTR qui pilote le RLV.
Attention, on ne peut utiliser qu'un memento.
La perte de F_AR necessite un rearmement de la fonction de securite.


CODE de DEFAUT :
****************
Valeur de diag.codedef
2 =  Defaut RLV
4 =  Defaut Frein
32 = Defaut parametrage temps de retombee trop long
256 = Alarme RLV
1024 = Defaut variateur
4096 = Attente de rearmement zone aval/Amont
8192 = Variateur indisponible ( variateur en mode local maintenance)

************************** ENGLISH INFORMATION  ****************************

DESCRIPTION :
**************
This FB is associated to BFS_BSECTR FB which controls the Drive line relay.
The FB ensures:
  - Control of the Drive
  - Diagnosis of the function
  - Diagnosis of the Fail Safe part of the program
  - Diagnosis of the DLR ( Drive line relay, RLV in french)
OPERATING :
***********
Brake forcing is only authorized on horizontal axis.
1)FB IN :
---------
In_fonc = digital PLC input of the G120 function
F_DBrlv_No = Safety instance DB Number which calls the BF_BSECTR  for the DLR
function.
F_DBrlv_Offset = Byte adress of BF_BSECTR in safety DB instance.
TPS_dece = Real deceleration time of drive
           value = (Drive P1121 parameter value * Frequency)/ 100
Pilotage = can be executed by :
- PLC programme
- Maintenance screen with wincc
- Manual operator control screen
When implemented on an MOP the simultaneous control of Wincc maintenance
screens
and manual operator control screens from a remote SOP MUST be forbidden.
This problem does not exist on an LOP because only one screen page may be
activated on the zone display unit at any one time.

2) FB OUT :
----------
F_AR = Used for DLR immadiate cut off
It is connected on the Cci (Immediate cutoff condition) pin of the BFS_BSECTR
which controls the DLR.
Caution, only one memento can be used.
The loss of F_AR requires control on of the safety function.

CODE FAULT :
************
Diag.codedef values :
2 = Drive Line relay  (RLV in French DLR in English) fault
4 = Brake fault
32 =  Configuration fault safety time too long
256 = Drive Line relay (RLV) Alarm
1024 = Drive fault
4096 = waiting for Upstream / downstream control on
8192 = Drive unavailable (Drive in maintenance local mode)
*********************************ODIL_ID*************************************
NB Reseaux BF 1er Version / Network Number in 1ft version : 31
Dernier ID mis en oeuvre / Last ID implemented : 1854_31
Liste des ID supprimes(Num de reseau)/ID deleted list (only network number): SO
****************************************************************************
";"********************************************************************************
*                                 BF_G120_S                                    *
*   ASSURE le PILOTAGE des FONCTIONS VARIATEUR G120 de Manutention Standard    *
* MAKE the control and command of the G120 DRIVE FUNCTIONS of Standard Handling*
*******************************************************************************
( In English further below)

DESCRIPTION:
************
Ce FB est associe au FB BFS_BSECTR qui pilote le RLV du variateur
Le FB assure :
Le pilotage du variateur
Le diagnostic de la fonction
Le diagnostic de la partie Fail Safe du programme
Le diagnostic du RLV

MISE EN OEUVRE :
****************
Le forcage frein est uniquement autorise que sur les axes horizontaux
1) IN :
------
In_fonc = aux entree TOR de la fonction G120
F_DBrlv_No = au numero du DB d'instance du bloc appelant le BFS_BSECTR qui

       pilote le RLV
FDBrlv_offset = l'adresse en octet de la fonction BSECTR dans le DB instance
Safety.
Tps_dece = Temps de deceleration reel du variateur :
            (Valeur P1121 du Var * Frequence) / 100
Pilotage = peut etre assure soit:
- Par le programme d'animation
- Par des pages ecrans Wincc Uniquement pour la maintenance.
- Par la page ecran de pilotage manuel operateur.
Au niveau mise en oeuvre sur un MOP il faut obligatoirement interdire le
pilotage simultane des ecrans Wincc maintenance et des ecrans de pilotage
manuel
operateur (depuis un SOP distant).
Sur un LOP se probleme n'existe pas vue qu'il ne peut y avoir qu'une seule page
ecrans active sur l'afficheur de la zone en meme temps

2) OUT :
-------
F_AR = utilise pour une coupure immediate du RLV.
Elle est a raccorder sur la patte Cci (Condition de coupure immediate) du
BFS_BSECTR qui pilote le RLV.
Attention, on ne peut utiliser qu'un memento.
La perte de F_AR necessite un rearmement de la fonction de securite.


CODE de DEFAUT :
****************
Valeur de diag.codedef
2 =  Defaut RLV
4 =  Defaut Frein
32 = Defaut parametrage temps de retombee trop long
256 = Alarme RLV
1024 = Defaut variateur
4096 = Attente de rearmement zone aval/Amont
8192 = Variateur indisponible ( variateur en mode local maintenance)

************************** ENGLISH INFORMATION  ****************************

DESCRIPTION :
**************
This FB is associated to BFS_BSECTR FB which controls the Drive line relay.
The FB ensures:
  - Control of the Drive
  - Diagnosis of the function
  - Diagnosis of the Fail Safe part of the program
  - Diagnosis of the DLR ( Drive line relay, RLV in french)
OPERATING :
***********
Brake forcing is only authorized on horizontal axis.
1)FB IN :
---------
In_fonc = digital PLC input of the G120 function
F_DBrlv_No = Safety instance DB Number which calls the BF_BSECTR  for the DLR
function.
F_DBrlv_Offset = Byte adress of BF_BSECTR in safety DB instance.
TPS_dece = Real deceleration time of drive
           value = (Drive P1121 parameter value * Frequency)/ 100
Pilotage = can be executed by :
- PLC programme
- Maintenance screen with wincc
- Manual operator control screen
When implemented on an MOP the simultaneous control of Wincc maintenance
screens
and manual operator control screens from a remote SOP MUST be forbidden.
This problem does not exist on an LOP because only one screen page may be
activated on the zone display unit at any one time.

2) FB OUT :
----------
F_AR = Used for DLR immadiate cut off
It is connected on the Cci (Immediate cutoff condition) pin of the BFS_BSECTR
which controls the DLR.
Caution, only one memento can be used.
The loss of F_AR requires control on of the safety function.

CODE FAULT :
************
Diag.codedef values :
2 = Drive Line relay  (RLV in French DLR in English) fault
4 = Brake fault
32 =  Configuration fault safety time too long
256 = Drive Line relay (RLV) Alarm
1024 = Drive fault
4096 = waiting for Upstream / downstream control on
8192 = Drive unavailable (Drive in maintenance local mode)
*********************************ODIL_ID*************************************
NB Reseaux BF 1er Version / Network Number in 1ft version : 31
Dernier ID mis en oeuvre / Last ID implemented : 1854_31
Liste des ID supprimes(Num de reseau)/ID deleted list (only network number): SO
****************************************************************************
";"********************************************************************************
*                                 BF_G120_S                                    *
*   ASSURE le PILOTAGE des FONCTIONS VARIATEUR G120 de Manutention Standard    *
* MAKE the control and command of the G120 DRIVE FUNCTIONS of Standard Handling*
*******************************************************************************
( In English further below)

DESCRIPTION:
************
Ce FB est associe au FB BFS_BSECTR qui pilote le RLV du variateur
Le FB assure :
Le pilotage du variateur
Le diagnostic de la fonction
Le diagnostic de la partie Fail Safe du programme
Le diagnostic du RLV

MISE EN OEUVRE :
****************
Le forcage frein est uniquement autorise que sur les axes horizontaux
1) IN :
------
In_fonc = aux entree TOR de la fonction G120
F_DBrlv_No = au numero du DB d'instance du bloc appelant le BFS_BSECTR qui

       pilote le RLV
FDBrlv_offset = l'adresse en octet de la fonction BSECTR dans le DB instance
Safety.
Tps_dece = Temps de deceleration reel du variateur :
            (Valeur P1121 du Var * Frequence) / 100
Pilotage = peut etre assure soit:
- Par le programme d'animation
- Par des pages ecrans Wincc Uniquement pour la maintenance.
- Par la page ecran de pilotage manuel operateur.
Au niveau mise en oeuvre sur un MOP il faut obligatoirement interdire le
pilotage simultane des ecrans Wincc maintenance et des ecrans de pilotage
manuel
operateur (depuis un SOP distant).
Sur un LOP se probleme n'existe pas vue qu'il ne peut y avoir qu'une seule page
ecrans active sur l'afficheur de la zone en meme temps

2) OUT :
-------
F_AR = utilise pour une coupure immediate du RLV.
Elle est a raccorder sur la patte Cci (Condition de coupure immediate) du
BFS_BSECTR qui pilote le RLV.
Attention, on ne peut utiliser qu'un memento.
La perte de F_AR necessite un rearmement de la fonction de securite.


CODE de DEFAUT :
****************
Valeur de diag.codedef
2 =  Defaut RLV
4 =  Defaut Frein
32 = Defaut parametrage temps de retombee trop long
256 = Alarme RLV
1024 = Defaut variateur
4096 = Attente de rearmement zone aval/Amont
8192 = Variateur indisponible ( variateur en mode local maintenance)

************************** ENGLISH INFORMATION  ****************************

DESCRIPTION :
**************
This FB is associated to BFS_BSECTR FB which controls the Drive line relay.
The FB ensures:
  - Control of the Drive
  - Diagnosis of the function
  - Diagnosis of the Fail Safe part of the program
  - Diagnosis of the DLR ( Drive line relay, RLV in french)
OPERATING :
***********
Brake forcing is only authorized on horizontal axis.
1)FB IN :
---------
In_fonc = digital PLC input of the G120 function
F_DBrlv_No = Safety instance DB Number which calls the BF_BSECTR  for the DLR
function.
F_DBrlv_Offset = Byte adress of BF_BSECTR in safety DB instance.
TPS_dece = Real deceleration time of drive
           value = (Drive P1121 parameter value * Frequency)/ 100
Pilotage = can be executed by :
- PLC programme
- Maintenance screen with wincc
- Manual operator control screen
When implemented on an MOP the simultaneous control of Wincc maintenance
screens
and manual operator control screens from a remote SOP MUST be forbidden.
This problem does not exist on an LOP because only one screen page may be
activated on the zone display unit at any one time.

2) FB OUT :
----------
F_AR = Used for DLR immadiate cut off
It is connected on the Cci (Immediate cutoff condition) pin of the BFS_BSECTR
which controls the DLR.
Caution, only one memento can be used.
The loss of F_AR requires control on of the safety function.

CODE FAULT :
************
Diag.codedef values :
2 = Drive Line relay  (RLV in French DLR in English) fault
4 = Brake fault
32 =  Configuration fault safety time too long
256 = Drive Line relay (RLV) Alarm
1024 = Drive fault
4096 = waiting for Upstream / downstream control on
8192 = Drive unavailable (Drive in maintenance local mode)
*********************************ODIL_ID*************************************
NB Reseaux BF 1er Version / Network Number in 1ft version : 31
Dernier ID mis en oeuvre / Last ID implemented : 1854_31
Liste des ID supprimes(Num de reseau)/ID deleted list (only network number): SO
****************************************************************************
";""
"********************************************************************************
*                             FB ""CARACT_SIEBERT""                              *
*                    Gestion message pour afficheur siebert                    *
*                      Management message display siebert                      *
********************************************************************************
(In english further below)

DESCRIPTION :
*************
Ce Bloc Fonctionnel permet de gérer la construction des chaines de 13
caractères pour afficheur siebert.
Il permet, pour chaque ligne d'un afficheur, de :
   - rechercher le message à afficher dans un DB à partir d'un code diversité
   - concaténer le message avec un numéro d'ordre

MISE EN OEUVRE :
****************
INTERFACE ENTRÉE :
MODE      : Sélection du mode de fonctionnement
PAF_OF    : Numéro d'ordre pièce à faire (ligne 1)
PS_OF     : Numéro d'ordre pièce suivante (ligne 2)
M1PAF_CD  : Code diversité pièce à faire (ligne 1)
M1PS_CD   : Code diversité pièce suivante (ligne 2)
M1MsgX    : Tableau de message (DB AFF)
M2MsgL1   : Message ligne 1 (pour concaténation simple)
M2MsgL2   : Message ligne 2 (pour concaténation simple)
MsgLx     : Tableau des messages envoyé à la BF Afficheur Siebert

INTERFACE SORTIE :
MajAff    : Test Lampe en cours sur l'afficheur
Def       : Défaut afficheur
Diag      : Structure de diagnostique
  Def     : Défaut
  Ala     : Alarme
  Numlist : Numéro de liste IHMP
  CodeDef : Code de défaut
  IhmInfo : Code de défaut secondaire


FONCTIONNEMENT :
****************
MODE 1 : Recherche à partir d'un code diversité (avec concaténation)
Ce mode de fonctionnement permet de rechercher une chaine de caractère
présente dans un DB (M1MsgX) puis de la concaténer avec un numéro d'ordre
(PAF_OF ou PS_OF).
La recherche puis la concaténation des messages, se fait à partir du code
diversité (M1PAF_CD ou M1PS_CD).

La constitution du message ligne 1 (pièce à faire) se fait à partir des :
  - code diversité pièce à faire (M1PAF_CD)
  - numéro d'ordre pièce à faire (PAF_OF)
  - tableaux des messages (M1MsgX)

La constitution du message ligne 2 (pièce suivante) se fait à partir des :
  - code diversité pièce suivante (M1PS_CD)
  - numéro d'ordre pièce suivante (PS_OF)
  - tableaux des messages (M1MsgX)

Mode 2 : Recherche à partir d'un code diversité (sans concaténation)
Ce mode de fonctionnement permet de rechercher une chaine de caractère
présente dans un DB (M1MsgX) à partir d'un code diversité (M1PAF_CD ou M1PS_CD).
Pour ce mode de fonctionnement les entrées PAF_OF et PS_OF sont à documenter.
La recherche d'une chaine de caractère dans le DB se faisant uniquement sur
changement d'état de ces deux entrées.

La constitution du message ligne 1 (pièce à faire) se fait à partir des :
  - code diversité pièce à faire (M1PAF_CD)
  - numéro d'ordre pièce à faire (PAF_OF)
  - tableaux des messages (M1MsgX)

La constitution du message ligne 2 (pièce suivante) se fait à partir des :
  - code diversité pièce suivante (M1PS_CD)
  - numéro d'ordre pièce suivante (PS_OF)
  - tableaux des messages (M1MsgX)

Mode 3 : Concaténation des entrées M2MsgL1 et M2MsgL2 (sans recherche)
Ce mode de fonctionnement permet de concaténer une chaine de caractère présente
en entrée de FB (M2MsgL1 ou M2MsgL2) puis de la concaténer avec un numéro
d'ordre (PAF_OF ou PS_OF).
Pour ce mode de fonctionnement les codes diversités et de DB stockant les
chaines de caractère ne sont pas utilisés.

La constitution du message ligne 1 (pièce à faire) se fait à partir des :
  - message ligne 1 (M2MsgL1)
  - numéro d'ordre pièce à faire (PAF_OF)

La constitution du message ligne 2 (pièce suivante) se fait à partir des :
  - message ligne 2 (M2MsgL2)
  - numéro d'ordre pièce suivante (PS_OF)

CODES D'ERREUR :
****************
CodeDef  IhmInfo  Commentaires
  01       --     Défaut de paramétrage
           01     Entrée ""mode"" : valeur incorrect
           02     Entrée ""M1MsgX"" : type de donnée incorrecte
           03     Entrée ""M1MsgX"" : zone de donnée  incorrecte

  02       --     Défaut message ligne 1
           11     Code diversité ligne 1 invalide
           12     Incohérence code div ligne 1 et tableau msg
           13     Numéro d'ordre ligne 1 invalide
           14     Entrée ""M2MsgL1"" : type de donnée incorrecte
           15     Entrée ""M2MsgL1"" : dimension incorrecte
           16     Entrée ""M2MsgL1"" : valeur courante invalide
           17     Erreur de paramétrage ""MsgLx"" (ligne 1)

  04       --     Défaut message ligne 2
           21     Code diversité ligne 2 invalide
           22     Incohérence code div ligne 2 et tableau msg
           23     Numéro d'ordre ligne 2 invalide
           24     Entrée ""M2MsgL2"" : type de donnée incorrecte
           25     Entrée ""M2MsgL2"" : dimension incorrecte
           26     Entrée ""M2MsgL2"" : valeur courante invalide
           27     Erreur de paramétrage ""MsgLx"" (ligne 2)

*************************** ENGLISH INFORMATION ****************************
DESCRIPTION :
*************

This block allows to manage the build of the chain of 13 characters for
the Siebert display device.
For each line of the device :
- find the message to display from a diversity code in a DB
- Concatened the message with a order number


IMPLEMENTATION :
****************
IN interface :
MODE      : Mode to select
PAF_OF    : Part to do Order Number (line 1)
PS_OF     : Next Part Order Number (line 2)
M1PAF_CD  : Diversity Code of part to do (line 1)
M1PS_CD   : Diversity Code of next part (line 2)
M1MsgX    : Message table (DB AFF)
M2MsgL1   : Message line 1 (for concatenation )
M2MsgL2   : Message line 2 (for concatenation )
MsgLx     : Table of message sent to the BF Afficheur Siebert

OUT interface :
MajAff    : Lampe check in progress on the display device
Def       : Fault
Diag      : diagnosis structure
  Def     : Fault
  Ala     : Alarm
  Numlist : IHMP list number
  CodeDef : Fault code
  IhmInfo : secondary fault code


PROCESS :
**********
MODE 1 : search from diversity code (With concatenation)
This mode allows to find a Character
presente in DB (M1MsgX) then to concatenate it with a Ordre number
(PAF_OF ou PS_OF).
this process is do from the diversity code (M1PAF_CD or M1PS_CD).

The build of the message on line 1 (Part to do) is made from :
  - Part diversity code to do (M1PAF_CD)
  - Part Order number to do (PAF_OF)
  - messages table (M1MsgX)

The build of the message on line 2 (Next Part) is made from :
  - Next Part diversity code (M1PS_CD)
  - Next Part Order number (PS_OF)
  - messages table (M1MsgX)

Mode 2 : earch from diversity code (Without concatenation)
This mode allows to find a Character
presente in DB (M1MsgX) Fron a diversity code (M1PAF_CD or M1PS_CD).
For this mode the PAF_OF and PS_OF input miust be documented
The Character chain finding in tha DB could be do only on the staus change of
the two imput

The build of the message on line 1 (Part to do) is made from :
  - Part diversity code to do (M1PAF_CD)
  - Part Order number to do (PAF_OF)
  - messages table (M1MsgX)

The build of the message on line 2 (Next Part) is made from :
  - Next Part diversity code (M1PS_CD)
  - Next Part Order number (PS_OF)
  - messages table (M1MsgX)


Mode 3 : Concatenation of M2MsgL1 and M2MsgL2 (Without search)
This mode allows to concatenate a character chain present in input of FB
(M2MsgL1 ou M2MsgL2)
with the order number (PAF_OF ou PS_OF).
For the =is mode the diversity code and DB or not used.

The build of the message on line 1 (Part to do) is made from :
  - message line 1 (M2MsgL1)
  - Part Order number to do (PAF_OF)

The build of the message on line 2 (Next Part) is made from :
  - message line 2 (M2MsgL2)
  - Next Part Order number (PS_OF)

Fault Code :
****************
CodeDef  IhmInfo  Comments
  01       --     Setting fault
           01     Input ""mode"" : invalid value
           02     Input ""M1MsgX"" : invalid type of data
           03     Input ""M1MsgX"" : invalid data zone

  02       --     message line 1 fault
           11     Invalid diversity line 1
           12     Incoherence diversity code line 1 and msg table
           13     Invalide Order number line 1
           14     Input ""M2MsgL1"" : invalid type of data
           15     Input ""M2MsgL1"" : Invalid size
           16     Input ""M2MsgL1"" : invalid value
           17     setting fault ""MsgLx"" (line 1)

  04       --     Dmessage line 2 fault
           21     Invalid diversity line 2
           22     Incoherence diversity code line 2 and msg table
           23     Invalide Order number line 2
           24     Input ""M2MsgL2"" : invalid type of data
           25     Input ""M2MsgL2"" : Invalid size
           26     Input ""M2MsgL2"" : invalid value
           27     setting fault ""MsgLx"" (line 2)


****************************************************************************
NB Reseaux BF 1er Version / Network Number in 1ft version : 6
Dernier ID mis en oeuvre / Last ID implemented : 1856_5
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : 1856_6
";"********************************************************************************
*                             FB ""CARACT_SIEBERT""                              *
*                    Gestion message pour afficheur siebert                    *
*                      Management message display siebert                      *
********************************************************************************
(In english further below)

DESCRIPTION :
*************
Ce Bloc Fonctionnel permet de gérer la construction des chaines de 13
caractères pour afficheur siebert.
Il permet, pour chaque ligne d'un afficheur, de :
   - rechercher le message à afficher dans un DB à partir d'un code diversité
   - concaténer le message avec un numéro d'ordre

MISE EN OEUVRE :
****************
INTERFACE ENTRÉE :
MODE      : Sélection du mode de fonctionnement
PAF_OF    : Numéro d'ordre pièce à faire (ligne 1)
PS_OF     : Numéro d'ordre pièce suivante (ligne 2)
M1PAF_CD  : Code diversité pièce à faire (ligne 1)
M1PS_CD   : Code diversité pièce suivante (ligne 2)
M1MsgX    : Tableau de message (DB AFF)
M2MsgL1   : Message ligne 1 (pour concaténation simple)
M2MsgL2   : Message ligne 2 (pour concaténation simple)
MsgLx     : Tableau des messages envoyé à la BF Afficheur Siebert

INTERFACE SORTIE :
MajAff    : Test Lampe en cours sur l'afficheur
Def       : Défaut afficheur
Diag      : Structure de diagnostique
  Def     : Défaut
  Ala     : Alarme
  Numlist : Numéro de liste IHMP
  CodeDef : Code de défaut
  IhmInfo : Code de défaut secondaire


FONCTIONNEMENT :
****************
MODE 1 : Recherche à partir d'un code diversité (avec concaténation)
Ce mode de fonctionnement permet de rechercher une chaine de caractère
présente dans un DB (M1MsgX) puis de la concaténer avec un numéro d'ordre
(PAF_OF ou PS_OF).
La recherche puis la concaténation des messages, se fait à partir du code
diversité (M1PAF_CD ou M1PS_CD).

La constitution du message ligne 1 (pièce à faire) se fait à partir des :
  - code diversité pièce à faire (M1PAF_CD)
  - numéro d'ordre pièce à faire (PAF_OF)
  - tableaux des messages (M1MsgX)

La constitution du message ligne 2 (pièce suivante) se fait à partir des :
  - code diversité pièce suivante (M1PS_CD)
  - numéro d'ordre pièce suivante (PS_OF)
  - tableaux des messages (M1MsgX)

Mode 2 : Recherche à partir d'un code diversité (sans concaténation)
Ce mode de fonctionnement permet de rechercher une chaine de caractère
présente dans un DB (M1MsgX) à partir d'un code diversité (M1PAF_CD ou M1PS_CD).
Pour ce mode de fonctionnement les entrées PAF_OF et PS_OF sont à documenter.
La recherche d'une chaine de caractère dans le DB se faisant uniquement sur
changement d'état de ces deux entrées.

La constitution du message ligne 1 (pièce à faire) se fait à partir des :
  - code diversité pièce à faire (M1PAF_CD)
  - numéro d'ordre pièce à faire (PAF_OF)
  - tableaux des messages (M1MsgX)

La constitution du message ligne 2 (pièce suivante) se fait à partir des :
  - code diversité pièce suivante (M1PS_CD)
  - numéro d'ordre pièce suivante (PS_OF)
  - tableaux des messages (M1MsgX)

Mode 3 : Concaténation des entrées M2MsgL1 et M2MsgL2 (sans recherche)
Ce mode de fonctionnement permet de concaténer une chaine de caractère présente
en entrée de FB (M2MsgL1 ou M2MsgL2) puis de la concaténer avec un numéro
d'ordre (PAF_OF ou PS_OF).
Pour ce mode de fonctionnement les codes diversités et de DB stockant les
chaines de caractère ne sont pas utilisés.

La constitution du message ligne 1 (pièce à faire) se fait à partir des :
  - message ligne 1 (M2MsgL1)
  - numéro d'ordre pièce à faire (PAF_OF)

La constitution du message ligne 2 (pièce suivante) se fait à partir des :
  - message ligne 2 (M2MsgL2)
  - numéro d'ordre pièce suivante (PS_OF)

CODES D'ERREUR :
****************
CodeDef  IhmInfo  Commentaires
  01       --     Défaut de paramétrage
           01     Entrée ""mode"" : valeur incorrect
           02     Entrée ""M1MsgX"" : type de donnée incorrecte
           03     Entrée ""M1MsgX"" : zone de donnée  incorrecte

  02       --     Défaut message ligne 1
           11     Code diversité ligne 1 invalide
           12     Incohérence code div ligne 1 et tableau msg
           13     Numéro d'ordre ligne 1 invalide
           14     Entrée ""M2MsgL1"" : type de donnée incorrecte
           15     Entrée ""M2MsgL1"" : dimension incorrecte
           16     Entrée ""M2MsgL1"" : valeur courante invalide
           17     Erreur de paramétrage ""MsgLx"" (ligne 1)

  04       --     Défaut message ligne 2
           21     Code diversité ligne 2 invalide
           22     Incohérence code div ligne 2 et tableau msg
           23     Numéro d'ordre ligne 2 invalide
           24     Entrée ""M2MsgL2"" : type de donnée incorrecte
           25     Entrée ""M2MsgL2"" : dimension incorrecte
           26     Entrée ""M2MsgL2"" : valeur courante invalide
           27     Erreur de paramétrage ""MsgLx"" (ligne 2)

*************************** ENGLISH INFORMATION ****************************
DESCRIPTION :
*************

This block allows to manage the build of the chain of 13 characters for
the Siebert display device.
For each line of the device :
- find the message to display from a diversity code in a DB
- Concatened the message with a order number


IMPLEMENTATION :
****************
IN interface :
MODE      : Mode to select
PAF_OF    : Part to do Order Number (line 1)
PS_OF     : Next Part Order Number (line 2)
M1PAF_CD  : Diversity Code of part to do (line 1)
M1PS_CD   : Diversity Code of next part (line 2)
M1MsgX    : Message table (DB AFF)
M2MsgL1   : Message line 1 (for concatenation )
M2MsgL2   : Message line 2 (for concatenation )
MsgLx     : Table of message sent to the BF Afficheur Siebert

OUT interface :
MajAff    : Lampe check in progress on the display device
Def       : Fault
Diag      : diagnosis structure
  Def     : Fault
  Ala     : Alarm
  Numlist : IHMP list number
  CodeDef : Fault code
  IhmInfo : secondary fault code


PROCESS :
**********
MODE 1 : search from diversity code (With concatenation)
This mode allows to find a Character
presente in DB (M1MsgX) then to concatenate it with a Ordre number
(PAF_OF ou PS_OF).
this process is do from the diversity code (M1PAF_CD or M1PS_CD).

The build of the message on line 1 (Part to do) is made from :
  - Part diversity code to do (M1PAF_CD)
  - Part Order number to do (PAF_OF)
  - messages table (M1MsgX)

The build of the message on line 2 (Next Part) is made from :
  - Next Part diversity code (M1PS_CD)
  - Next Part Order number (PS_OF)
  - messages table (M1MsgX)

Mode 2 : earch from diversity code (Without concatenation)
This mode allows to find a Character
presente in DB (M1MsgX) Fron a diversity code (M1PAF_CD or M1PS_CD).
For this mode the PAF_OF and PS_OF input miust be documented
The Character chain finding in tha DB could be do only on the staus change of
the two imput

The build of the message on line 1 (Part to do) is made from :
  - Part diversity code to do (M1PAF_CD)
  - Part Order number to do (PAF_OF)
  - messages table (M1MsgX)

The build of the message on line 2 (Next Part) is made from :
  - Next Part diversity code (M1PS_CD)
  - Next Part Order number (PS_OF)
  - messages table (M1MsgX)


Mode 3 : Concatenation of M2MsgL1 and M2MsgL2 (Without search)
This mode allows to concatenate a character chain present in input of FB
(M2MsgL1 ou M2MsgL2)
with the order number (PAF_OF ou PS_OF).
For the =is mode the diversity code and DB or not used.

The build of the message on line 1 (Part to do) is made from :
  - message line 1 (M2MsgL1)
  - Part Order number to do (PAF_OF)

The build of the message on line 2 (Next Part) is made from :
  - message line 2 (M2MsgL2)
  - Next Part Order number (PS_OF)

Fault Code :
****************
CodeDef  IhmInfo  Comments
  01       --     Setting fault
           01     Input ""mode"" : invalid value
           02     Input ""M1MsgX"" : invalid type of data
           03     Input ""M1MsgX"" : invalid data zone

  02       --     message line 1 fault
           11     Invalid diversity line 1
           12     Incoherence diversity code line 1 and msg table
           13     Invalide Order number line 1
           14     Input ""M2MsgL1"" : invalid type of data
           15     Input ""M2MsgL1"" : Invalid size
           16     Input ""M2MsgL1"" : invalid value
           17     setting fault ""MsgLx"" (line 1)

  04       --     Dmessage line 2 fault
           21     Invalid diversity line 2
           22     Incoherence diversity code line 2 and msg table
           23     Invalide Order number line 2
           24     Input ""M2MsgL2"" : invalid type of data
           25     Input ""M2MsgL2"" : Invalid size
           26     Input ""M2MsgL2"" : invalid value
           27     setting fault ""MsgLx"" (line 2)


****************************************************************************
NB Reseaux BF 1er Version / Network Number in 1ft version : 6
Dernier ID mis en oeuvre / Last ID implemented : 1856_5
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : 1856_6
";"********************************************************************************
*                             FB ""CARACT_SIEBERT""                              *
*                    Gestion message pour afficheur siebert                    *
*                      Management message display siebert                      *
********************************************************************************
(In english further below)

DESCRIPTION :
*************
Ce Bloc Fonctionnel permet de gérer la construction des chaines de 13
caractères pour afficheur siebert.
Il permet, pour chaque ligne d'un afficheur, de :
   - rechercher le message à afficher dans un DB à partir d'un code diversité
   - concaténer le message avec un numéro d'ordre

MISE EN OEUVRE :
****************
INTERFACE ENTRÉE :
MODE      : Sélection du mode de fonctionnement
PAF_OF    : Numéro d'ordre pièce à faire (ligne 1)
PS_OF     : Numéro d'ordre pièce suivante (ligne 2)
M1PAF_CD  : Code diversité pièce à faire (ligne 1)
M1PS_CD   : Code diversité pièce suivante (ligne 2)
M1MsgX    : Tableau de message (DB AFF)
M2MsgL1   : Message ligne 1 (pour concaténation simple)
M2MsgL2   : Message ligne 2 (pour concaténation simple)
MsgLx     : Tableau des messages envoyé à la BF Afficheur Siebert

INTERFACE SORTIE :
MajAff    : Test Lampe en cours sur l'afficheur
Def       : Défaut afficheur
Diag      : Structure de diagnostique
  Def     : Défaut
  Ala     : Alarme
  Numlist : Numéro de liste IHMP
  CodeDef : Code de défaut
  IhmInfo : Code de défaut secondaire


FONCTIONNEMENT :
****************
MODE 1 : Recherche à partir d'un code diversité (avec concaténation)
Ce mode de fonctionnement permet de rechercher une chaine de caractère
présente dans un DB (M1MsgX) puis de la concaténer avec un numéro d'ordre
(PAF_OF ou PS_OF).
La recherche puis la concaténation des messages, se fait à partir du code
diversité (M1PAF_CD ou M1PS_CD).

La constitution du message ligne 1 (pièce à faire) se fait à partir des :
  - code diversité pièce à faire (M1PAF_CD)
  - numéro d'ordre pièce à faire (PAF_OF)
  - tableaux des messages (M1MsgX)

La constitution du message ligne 2 (pièce suivante) se fait à partir des :
  - code diversité pièce suivante (M1PS_CD)
  - numéro d'ordre pièce suivante (PS_OF)
  - tableaux des messages (M1MsgX)

Mode 2 : Recherche à partir d'un code diversité (sans concaténation)
Ce mode de fonctionnement permet de rechercher une chaine de caractère
présente dans un DB (M1MsgX) à partir d'un code diversité (M1PAF_CD ou M1PS_CD).
Pour ce mode de fonctionnement les entrées PAF_OF et PS_OF sont à documenter.
La recherche d'une chaine de caractère dans le DB se faisant uniquement sur
changement d'état de ces deux entrées.

La constitution du message ligne 1 (pièce à faire) se fait à partir des :
  - code diversité pièce à faire (M1PAF_CD)
  - numéro d'ordre pièce à faire (PAF_OF)
  - tableaux des messages (M1MsgX)

La constitution du message ligne 2 (pièce suivante) se fait à partir des :
  - code diversité pièce suivante (M1PS_CD)
  - numéro d'ordre pièce suivante (PS_OF)
  - tableaux des messages (M1MsgX)

Mode 3 : Concaténation des entrées M2MsgL1 et M2MsgL2 (sans recherche)
Ce mode de fonctionnement permet de concaténer une chaine de caractère présente
en entrée de FB (M2MsgL1 ou M2MsgL2) puis de la concaténer avec un numéro
d'ordre (PAF_OF ou PS_OF).
Pour ce mode de fonctionnement les codes diversités et de DB stockant les
chaines de caractère ne sont pas utilisés.

La constitution du message ligne 1 (pièce à faire) se fait à partir des :
  - message ligne 1 (M2MsgL1)
  - numéro d'ordre pièce à faire (PAF_OF)

La constitution du message ligne 2 (pièce suivante) se fait à partir des :
  - message ligne 2 (M2MsgL2)
  - numéro d'ordre pièce suivante (PS_OF)

CODES D'ERREUR :
****************
CodeDef  IhmInfo  Commentaires
  01       --     Défaut de paramétrage
           01     Entrée ""mode"" : valeur incorrect
           02     Entrée ""M1MsgX"" : type de donnée incorrecte
           03     Entrée ""M1MsgX"" : zone de donnée  incorrecte

  02       --     Défaut message ligne 1
           11     Code diversité ligne 1 invalide
           12     Incohérence code div ligne 1 et tableau msg
           13     Numéro d'ordre ligne 1 invalide
           14     Entrée ""M2MsgL1"" : type de donnée incorrecte
           15     Entrée ""M2MsgL1"" : dimension incorrecte
           16     Entrée ""M2MsgL1"" : valeur courante invalide
           17     Erreur de paramétrage ""MsgLx"" (ligne 1)

  04       --     Défaut message ligne 2
           21     Code diversité ligne 2 invalide
           22     Incohérence code div ligne 2 et tableau msg
           23     Numéro d'ordre ligne 2 invalide
           24     Entrée ""M2MsgL2"" : type de donnée incorrecte
           25     Entrée ""M2MsgL2"" : dimension incorrecte
           26     Entrée ""M2MsgL2"" : valeur courante invalide
           27     Erreur de paramétrage ""MsgLx"" (ligne 2)

*************************** ENGLISH INFORMATION ****************************
DESCRIPTION :
*************

This block allows to manage the build of the chain of 13 characters for
the Siebert display device.
For each line of the device :
- find the message to display from a diversity code in a DB
- Concatened the message with a order number


IMPLEMENTATION :
****************
IN interface :
MODE      : Mode to select
PAF_OF    : Part to do Order Number (line 1)
PS_OF     : Next Part Order Number (line 2)
M1PAF_CD  : Diversity Code of part to do (line 1)
M1PS_CD   : Diversity Code of next part (line 2)
M1MsgX    : Message table (DB AFF)
M2MsgL1   : Message line 1 (for concatenation )
M2MsgL2   : Message line 2 (for concatenation )
MsgLx     : Table of message sent to the BF Afficheur Siebert

OUT interface :
MajAff    : Lampe check in progress on the display device
Def       : Fault
Diag      : diagnosis structure
  Def     : Fault
  Ala     : Alarm
  Numlist : IHMP list number
  CodeDef : Fault code
  IhmInfo : secondary fault code


PROCESS :
**********
MODE 1 : search from diversity code (With concatenation)
This mode allows to find a Character
presente in DB (M1MsgX) then to concatenate it with a Ordre number
(PAF_OF ou PS_OF).
this process is do from the diversity code (M1PAF_CD or M1PS_CD).

The build of the message on line 1 (Part to do) is made from :
  - Part diversity code to do (M1PAF_CD)
  - Part Order number to do (PAF_OF)
  - messages table (M1MsgX)

The build of the message on line 2 (Next Part) is made from :
  - Next Part diversity code (M1PS_CD)
  - Next Part Order number (PS_OF)
  - messages table (M1MsgX)

Mode 2 : earch from diversity code (Without concatenation)
This mode allows to find a Character
presente in DB (M1MsgX) Fron a diversity code (M1PAF_CD or M1PS_CD).
For this mode the PAF_OF and PS_OF input miust be documented
The Character chain finding in tha DB could be do only on the staus change of
the two imput

The build of the message on line 1 (Part to do) is made from :
  - Part diversity code to do (M1PAF_CD)
  - Part Order number to do (PAF_OF)
  - messages table (M1MsgX)

The build of the message on line 2 (Next Part) is made from :
  - Next Part diversity code (M1PS_CD)
  - Next Part Order number (PS_OF)
  - messages table (M1MsgX)


Mode 3 : Concatenation of M2MsgL1 and M2MsgL2 (Without search)
This mode allows to concatenate a character chain present in input of FB
(M2MsgL1 ou M2MsgL2)
with the order number (PAF_OF ou PS_OF).
For the =is mode the diversity code and DB or not used.

The build of the message on line 1 (Part to do) is made from :
  - message line 1 (M2MsgL1)
  - Part Order number to do (PAF_OF)

The build of the message on line 2 (Next Part) is made from :
  - message line 2 (M2MsgL2)
  - Next Part Order number (PS_OF)

Fault Code :
****************
CodeDef  IhmInfo  Comments
  01       --     Setting fault
           01     Input ""mode"" : invalid value
           02     Input ""M1MsgX"" : invalid type of data
           03     Input ""M1MsgX"" : invalid data zone

  02       --     message line 1 fault
           11     Invalid diversity line 1
           12     Incoherence diversity code line 1 and msg table
           13     Invalide Order number line 1
           14     Input ""M2MsgL1"" : invalid type of data
           15     Input ""M2MsgL1"" : Invalid size
           16     Input ""M2MsgL1"" : invalid value
           17     setting fault ""MsgLx"" (line 1)

  04       --     Dmessage line 2 fault
           21     Invalid diversity line 2
           22     Incoherence diversity code line 2 and msg table
           23     Invalide Order number line 2
           24     Input ""M2MsgL2"" : invalid type of data
           25     Input ""M2MsgL2"" : Invalid size
           26     Input ""M2MsgL2"" : invalid value
           27     setting fault ""MsgLx"" (line 2)


****************************************************************************
NB Reseaux BF 1er Version / Network Number in 1ft version : 6
Dernier ID mis en oeuvre / Last ID implemented : 1856_5
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : 1856_6
";""
"***************************************************************************
*                              FB ""RECALAGE2""                             *
*           BF associee au point de gestion de flux ""Recalage""            *
*       FB associated to ""recycling point"" of shop floor control          *
***************************************************************************
(In english further below)

DESCRIPTION:
************
Permet de gerer l'ensemble du processus de recalage aux points dedies
des unites de la base roulante. Elle n'est pas utilisable pour la
gestion du flux des palettes et donc pour tout perimetre flexible.
Elle prend en charge les taches suivantes :
Sur proposition du calculateur :
- Lecture de la table d'echange Siptol.
- Generation des mots d'echanges necessaires au processus de recalage.
Pour le processus de recalage :
- Analyse de la concordance / discordance aux differents postes du PGF.
- Prise des decisions de recalage en fonction des demandes operateur.
- Envoi des decisions prises aux postes pour declenchement des cycles robots.
- Analyse des actions executees pour evacuation des pieces (convoyeur ou tiroir
d'entrees sorties)
En reponse au calculateur :
- Renseignement de l'etat dialogue.
- Renseignement de l'etat flux.
- Basculement des mots de validation.

MISE EN OEUVRE :
***************
Pour plus de detail voir la documentation et les outils d'aide programme.
La BF_Recalage communique avec plusieurs Sous ensembles et des DB Globaux
La personnalisation des informations pour l'analyse et certains liens IHMP sont
a realiser dans un FB specifique

A) DB globaux associes :
**********************
Pour permettre l'utilisation de la fonction recalages les DB globaux suivants
doivent etres utilises :
- DB ''SIPx'' contenant le formatage des noms symbolique des variables en
liaison avec SIPTOL :
- DB ''Pile'' contenant les informations d'analyses pour l'IHMP
Ces DB de base sont donnes dans le fichier zip (bibliotheque S7) accompagnant
le
BF

A.1) DB SIPx
Dans la structure programme Les Blocs DB89 a DB80 sont reserves a cette effet.
(Numerotation decroissante a respecter)

Le Nom symbolique des DB est SIP<x> avec x = 1 pour le premier coupleur de
communication.
Maxi 8 suivant le type d'automate.

Chaque liaison avec SIPTOL utilise pour le recalage 2 trames d'echanges :
La premiere comporte les informations relatives a la piece a produire.
La deuxieme comporte les informations d'analyse pour le recalage (pieces a
faire
et pieces passees)
Chaque trame est associee a une structure comportant les noms symboliques des
variables a respecter pour eviter de briser les liens automatiques entre les
ecrans IHMP et le programme API.

Le nom symbolique des Trames est le suivant :
1er Struct "" piece a produire "" = <NomSE> (nom du sous ensemble de recalage)
2eme Struct "" analyse pour le recalage = <NomSE>ana

A.2) DB PILE:
Ce DB sert a memoriser les differentes donnees issues des BF_Fifo dans le
programme.
Dans la structure programme le DB90 est reserve a cet effet.
Pour le recalage les informations contenues dans les piles, correspondent aux
differentes pieces passees et a faire pour permettre leur visualisation sur
L'IHMP.

En aucun cas les noms symboliques associes aux variables ne doivent etre
modifies pour garantir les liens avec l'IHMP.

La pile pieces a faire : est construire avec les informations issues de la
tables piece du montage N-5 (maxi) par rapport au point de recalage.
Les donnees sont sauvegardes dans une struct "" NonSE_plus "" comportant pour
chaque posage intermediaire un structure comportant les informations.

La pile pieces passees : correspond aux informations issues du DB contenant les
donnees pour ecriture sur etiquette dynamique des 2 dernieres pieces ecrites
apres le point de recalage.
Les donnees sont sauvegardes dans une struct "" NonSE_moins "" comportant pour
chaque piece un structure comportant les informations.

Le nom symbolique des struct est le suivant :
1er Struct "" pieces a Faire "" = <NomSE>_plus (nom du sous ensemble de recalage)
Exemple : O4_plus
2eme Struct "" pieces passees = <NomSE>_moins (nom du sous ensemble de recalage)
Exemple : O4_moins

La Struct "" piece a Faire "" doit etre adaptee par rapport au nombre de poste
precedant le point de recalage en supprimant les sous structure inutiles


B) Liens avec IHMP :
********************
Les liens avec IHMP sont faits via la BF_Recalage et via un DB d'instance
comportant la personnalisation du code par rapport a l'installation.

B.1) Liens BF_Recalage :
Le nom d'instance de la BF doit suivre la regle suivante : <NOMSE>Recal

B.2) Liens FB personnalisation
Le Non d'instance du FB doit suivre la regle Suivante : Zx<NOMSE>IHM
<NOMSE> = nom du sous ensemble de recalage
x = Numero de la zone

CODE DE DEFAUT :
***************
Non utilise

******************************* ENGLISH INFORMATION ***********************
DESCRIPTION
***********
Allow management of whole recycling point of a unit, except for pallet
management.
it takes into account:
* Following calculator request:
- reading exchange table from Siptol;
- generating exchanges word used during recycling management.
* For recycling management:
- analysing matching/mismatching at each stage of the flow point;
- associating proper action to operator request, for example sending cycle code
to robots
- analysing occured actions to eject parts (rack or part eject stage)
* for contesting to calculator:
- set dialogue status;
- set flow status
- toggle validation words

OPERATING:
************
For further details refer to documentation and Program help tools (OAP)
The BF_Recalage exchange data with several Sub-assembly and Global DB blocks
The customization of data for analysis and links with  IHMP must be done in a
specific FB

A) Associated global DB:
**********************
for Recycling function the following global DB must be used :
- DB "" SIPx "" containing the symbolic names of variables exchanging with SIPTOL:
- DB ""Pile"" containing information of analysis for the IHMP
These DB are given in the file zip (library S7) joined with the BF

A 1) SIPx  db
In the Renault program structure, DB89 to DB80 blocks are reserved for this use.
(Decreasing numbering to be respected)

The symbolic Name of the DB is SIPx with x = 1 for the first card of
communication.
Maxi 8 according to the type of PLC.

Each connection with SIPTOL uses 2 frames of exchanges for the recycling
function:
The first contains the information of the part to be made.
The second contains the information of analysis for the recycling (Part to be
made and past parts)
Each frame is associated with a structure containing the symbolic names of
variables.
These names must be respected to avoid the loss of automatic links between IHMP
screens and PLC program.

The symbolic names of frames are:
1st Struct, Part to be produced = < NomSE > (name of recycling sub assembly)
2nd Struct, Recycling analyse = < NomSE > ana

A 2) PILE db:
This DB is used to memorize the data coming from BF_Fifo.
In the Renault program structure, the DB90 is reserved for that purpose.
For the recycling, the information contained in data stack, corresponds to the
past and to be made part to allow their visualization on IHMP.

The symbolic names associated with variables MUST NOT be modified to ensure the
links with the IHMP.

The Part to make stack: is built with the part information of sub-assembly N-5
(maxi) in accordance with the recycling point.
The data are saved in <sub-assembly name>_plus struct which contains the
information for every intermediate working point.

The past parts stack corresponds to the information coming from the DB
containing the data for writing in tag of the last 2 parts written after the
recycling point.
The data are saved in a <Sub-assembly name>_moins struct which contains, for
each part, one data structure.

The symbolic names of structs are:
1st Struct, Part to do = <Sub-assembly name>_plus (name of recycling sub
assembly)
Example: O4_plus
2nd Struct, Parts past = <Sub-assembly name>_moins (name of recycling sub
assembly)
Example: O4_moins

The Part to make Struct must be adapted in accordance with the number of stage
that are located before the point of recycling by deleting the useless sub-
struct


B) Links with IHMP:
********************
The links with IHMP are done by the BF_Recalage and one instance DB how
containing the customization of the code in accordance to the installation.

B.1) BF_Recalage Links:
The instance name of the BF has to follow the following rule:
< Sub-assembly name > Recal

B.2) FB of customization Links:
The instance name of the FB has to follow the following rule:
Zx < Recycling Sub-assembly name>IHM
X = Zone Number of the facility

FAULT CODE:
************
Not used

********************************_ODIL_ID_**************************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 180
Dernier ID mis en oeuvre / Last ID implemented : 1857_180
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"***************************************************************************
*                              FB ""RECALAGE2""                             *
*           BF associee au point de gestion de flux ""Recalage""            *
*       FB associated to ""recycling point"" of shop floor control          *
***************************************************************************
(In english further below)

DESCRIPTION:
************
Permet de gerer l'ensemble du processus de recalage aux points dedies
des unites de la base roulante. Elle n'est pas utilisable pour la
gestion du flux des palettes et donc pour tout perimetre flexible.
Elle prend en charge les taches suivantes :
Sur proposition du calculateur :
- Lecture de la table d'echange Siptol.
- Generation des mots d'echanges necessaires au processus de recalage.
Pour le processus de recalage :
- Analyse de la concordance / discordance aux differents postes du PGF.
- Prise des decisions de recalage en fonction des demandes operateur.
- Envoi des decisions prises aux postes pour declenchement des cycles robots.
- Analyse des actions executees pour evacuation des pieces (convoyeur ou tiroir
d'entrees sorties)
En reponse au calculateur :
- Renseignement de l'etat dialogue.
- Renseignement de l'etat flux.
- Basculement des mots de validation.

MISE EN OEUVRE :
***************
Pour plus de detail voir la documentation et les outils d'aide programme.
La BF_Recalage communique avec plusieurs Sous ensembles et des DB Globaux
La personnalisation des informations pour l'analyse et certains liens IHMP sont
a realiser dans un FB specifique

A) DB globaux associes :
**********************
Pour permettre l'utilisation de la fonction recalages les DB globaux suivants
doivent etres utilises :
- DB ''SIPx'' contenant le formatage des noms symbolique des variables en
liaison avec SIPTOL :
- DB ''Pile'' contenant les informations d'analyses pour l'IHMP
Ces DB de base sont donnes dans le fichier zip (bibliotheque S7) accompagnant
le
BF

A.1) DB SIPx
Dans la structure programme Les Blocs DB89 a DB80 sont reserves a cette effet.
(Numerotation decroissante a respecter)

Le Nom symbolique des DB est SIP<x> avec x = 1 pour le premier coupleur de
communication.
Maxi 8 suivant le type d'automate.

Chaque liaison avec SIPTOL utilise pour le recalage 2 trames d'echanges :
La premiere comporte les informations relatives a la piece a produire.
La deuxieme comporte les informations d'analyse pour le recalage (pieces a
faire
et pieces passees)
Chaque trame est associee a une structure comportant les noms symboliques des
variables a respecter pour eviter de briser les liens automatiques entre les
ecrans IHMP et le programme API.

Le nom symbolique des Trames est le suivant :
1er Struct "" piece a produire "" = <NomSE> (nom du sous ensemble de recalage)
2eme Struct "" analyse pour le recalage = <NomSE>ana

A.2) DB PILE:
Ce DB sert a memoriser les differentes donnees issues des BF_Fifo dans le
programme.
Dans la structure programme le DB90 est reserve a cet effet.
Pour le recalage les informations contenues dans les piles, correspondent aux
differentes pieces passees et a faire pour permettre leur visualisation sur
L'IHMP.

En aucun cas les noms symboliques associes aux variables ne doivent etre
modifies pour garantir les liens avec l'IHMP.

La pile pieces a faire : est construire avec les informations issues de la
tables piece du montage N-5 (maxi) par rapport au point de recalage.
Les donnees sont sauvegardes dans une struct "" NonSE_plus "" comportant pour
chaque posage intermediaire un structure comportant les informations.

La pile pieces passees : correspond aux informations issues du DB contenant les
donnees pour ecriture sur etiquette dynamique des 2 dernieres pieces ecrites
apres le point de recalage.
Les donnees sont sauvegardes dans une struct "" NonSE_moins "" comportant pour
chaque piece un structure comportant les informations.

Le nom symbolique des struct est le suivant :
1er Struct "" pieces a Faire "" = <NomSE>_plus (nom du sous ensemble de recalage)
Exemple : O4_plus
2eme Struct "" pieces passees = <NomSE>_moins (nom du sous ensemble de recalage)
Exemple : O4_moins

La Struct "" piece a Faire "" doit etre adaptee par rapport au nombre de poste
precedant le point de recalage en supprimant les sous structure inutiles


B) Liens avec IHMP :
********************
Les liens avec IHMP sont faits via la BF_Recalage et via un DB d'instance
comportant la personnalisation du code par rapport a l'installation.

B.1) Liens BF_Recalage :
Le nom d'instance de la BF doit suivre la regle suivante : <NOMSE>Recal

B.2) Liens FB personnalisation
Le Non d'instance du FB doit suivre la regle Suivante : Zx<NOMSE>IHM
<NOMSE> = nom du sous ensemble de recalage
x = Numero de la zone

CODE DE DEFAUT :
***************
Non utilise

******************************* ENGLISH INFORMATION ***********************
DESCRIPTION
***********
Allow management of whole recycling point of a unit, except for pallet
management.
it takes into account:
* Following calculator request:
- reading exchange table from Siptol;
- generating exchanges word used during recycling management.
* For recycling management:
- analysing matching/mismatching at each stage of the flow point;
- associating proper action to operator request, for example sending cycle code
to robots
- analysing occured actions to eject parts (rack or part eject stage)
* for contesting to calculator:
- set dialogue status;
- set flow status
- toggle validation words

OPERATING:
************
For further details refer to documentation and Program help tools (OAP)
The BF_Recalage exchange data with several Sub-assembly and Global DB blocks
The customization of data for analysis and links with  IHMP must be done in a
specific FB

A) Associated global DB:
**********************
for Recycling function the following global DB must be used :
- DB "" SIPx "" containing the symbolic names of variables exchanging with SIPTOL:
- DB ""Pile"" containing information of analysis for the IHMP
These DB are given in the file zip (library S7) joined with the BF

A 1) SIPx  db
In the Renault program structure, DB89 to DB80 blocks are reserved for this use.
(Decreasing numbering to be respected)

The symbolic Name of the DB is SIPx with x = 1 for the first card of
communication.
Maxi 8 according to the type of PLC.

Each connection with SIPTOL uses 2 frames of exchanges for the recycling
function:
The first contains the information of the part to be made.
The second contains the information of analysis for the recycling (Part to be
made and past parts)
Each frame is associated with a structure containing the symbolic names of
variables.
These names must be respected to avoid the loss of automatic links between IHMP
screens and PLC program.

The symbolic names of frames are:
1st Struct, Part to be produced = < NomSE > (name of recycling sub assembly)
2nd Struct, Recycling analyse = < NomSE > ana

A 2) PILE db:
This DB is used to memorize the data coming from BF_Fifo.
In the Renault program structure, the DB90 is reserved for that purpose.
For the recycling, the information contained in data stack, corresponds to the
past and to be made part to allow their visualization on IHMP.

The symbolic names associated with variables MUST NOT be modified to ensure the
links with the IHMP.

The Part to make stack: is built with the part information of sub-assembly N-5
(maxi) in accordance with the recycling point.
The data are saved in <sub-assembly name>_plus struct which contains the
information for every intermediate working point.

The past parts stack corresponds to the information coming from the DB
containing the data for writing in tag of the last 2 parts written after the
recycling point.
The data are saved in a <Sub-assembly name>_moins struct which contains, for
each part, one data structure.

The symbolic names of structs are:
1st Struct, Part to do = <Sub-assembly name>_plus (name of recycling sub
assembly)
Example: O4_plus
2nd Struct, Parts past = <Sub-assembly name>_moins (name of recycling sub
assembly)
Example: O4_moins

The Part to make Struct must be adapted in accordance with the number of stage
that are located before the point of recycling by deleting the useless sub-
struct


B) Links with IHMP:
********************
The links with IHMP are done by the BF_Recalage and one instance DB how
containing the customization of the code in accordance to the installation.

B.1) BF_Recalage Links:
The instance name of the BF has to follow the following rule:
< Sub-assembly name > Recal

B.2) FB of customization Links:
The instance name of the FB has to follow the following rule:
Zx < Recycling Sub-assembly name>IHM
X = Zone Number of the facility

FAULT CODE:
************
Not used

********************************_ODIL_ID_**************************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 180
Dernier ID mis en oeuvre / Last ID implemented : 1857_180
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"***************************************************************************
*                              FB ""RECALAGE2""                             *
*           BF associee au point de gestion de flux ""Recalage""            *
*       FB associated to ""recycling point"" of shop floor control          *
***************************************************************************
(In english further below)

DESCRIPTION:
************
Permet de gerer l'ensemble du processus de recalage aux points dedies
des unites de la base roulante. Elle n'est pas utilisable pour la
gestion du flux des palettes et donc pour tout perimetre flexible.
Elle prend en charge les taches suivantes :
Sur proposition du calculateur :
- Lecture de la table d'echange Siptol.
- Generation des mots d'echanges necessaires au processus de recalage.
Pour le processus de recalage :
- Analyse de la concordance / discordance aux differents postes du PGF.
- Prise des decisions de recalage en fonction des demandes operateur.
- Envoi des decisions prises aux postes pour declenchement des cycles robots.
- Analyse des actions executees pour evacuation des pieces (convoyeur ou tiroir
d'entrees sorties)
En reponse au calculateur :
- Renseignement de l'etat dialogue.
- Renseignement de l'etat flux.
- Basculement des mots de validation.

MISE EN OEUVRE :
***************
Pour plus de detail voir la documentation et les outils d'aide programme.
La BF_Recalage communique avec plusieurs Sous ensembles et des DB Globaux
La personnalisation des informations pour l'analyse et certains liens IHMP sont
a realiser dans un FB specifique

A) DB globaux associes :
**********************
Pour permettre l'utilisation de la fonction recalages les DB globaux suivants
doivent etres utilises :
- DB ''SIPx'' contenant le formatage des noms symbolique des variables en
liaison avec SIPTOL :
- DB ''Pile'' contenant les informations d'analyses pour l'IHMP
Ces DB de base sont donnes dans le fichier zip (bibliotheque S7) accompagnant
le
BF

A.1) DB SIPx
Dans la structure programme Les Blocs DB89 a DB80 sont reserves a cette effet.
(Numerotation decroissante a respecter)

Le Nom symbolique des DB est SIP<x> avec x = 1 pour le premier coupleur de
communication.
Maxi 8 suivant le type d'automate.

Chaque liaison avec SIPTOL utilise pour le recalage 2 trames d'echanges :
La premiere comporte les informations relatives a la piece a produire.
La deuxieme comporte les informations d'analyse pour le recalage (pieces a
faire
et pieces passees)
Chaque trame est associee a une structure comportant les noms symboliques des
variables a respecter pour eviter de briser les liens automatiques entre les
ecrans IHMP et le programme API.

Le nom symbolique des Trames est le suivant :
1er Struct "" piece a produire "" = <NomSE> (nom du sous ensemble de recalage)
2eme Struct "" analyse pour le recalage = <NomSE>ana

A.2) DB PILE:
Ce DB sert a memoriser les differentes donnees issues des BF_Fifo dans le
programme.
Dans la structure programme le DB90 est reserve a cet effet.
Pour le recalage les informations contenues dans les piles, correspondent aux
differentes pieces passees et a faire pour permettre leur visualisation sur
L'IHMP.

En aucun cas les noms symboliques associes aux variables ne doivent etre
modifies pour garantir les liens avec l'IHMP.

La pile pieces a faire : est construire avec les informations issues de la
tables piece du montage N-5 (maxi) par rapport au point de recalage.
Les donnees sont sauvegardes dans une struct "" NonSE_plus "" comportant pour
chaque posage intermediaire un structure comportant les informations.

La pile pieces passees : correspond aux informations issues du DB contenant les
donnees pour ecriture sur etiquette dynamique des 2 dernieres pieces ecrites
apres le point de recalage.
Les donnees sont sauvegardes dans une struct "" NonSE_moins "" comportant pour
chaque piece un structure comportant les informations.

Le nom symbolique des struct est le suivant :
1er Struct "" pieces a Faire "" = <NomSE>_plus (nom du sous ensemble de recalage)
Exemple : O4_plus
2eme Struct "" pieces passees = <NomSE>_moins (nom du sous ensemble de recalage)
Exemple : O4_moins

La Struct "" piece a Faire "" doit etre adaptee par rapport au nombre de poste
precedant le point de recalage en supprimant les sous structure inutiles


B) Liens avec IHMP :
********************
Les liens avec IHMP sont faits via la BF_Recalage et via un DB d'instance
comportant la personnalisation du code par rapport a l'installation.

B.1) Liens BF_Recalage :
Le nom d'instance de la BF doit suivre la regle suivante : <NOMSE>Recal

B.2) Liens FB personnalisation
Le Non d'instance du FB doit suivre la regle Suivante : Zx<NOMSE>IHM
<NOMSE> = nom du sous ensemble de recalage
x = Numero de la zone

CODE DE DEFAUT :
***************
Non utilise

******************************* ENGLISH INFORMATION ***********************
DESCRIPTION
***********
Allow management of whole recycling point of a unit, except for pallet
management.
it takes into account:
* Following calculator request:
- reading exchange table from Siptol;
- generating exchanges word used during recycling management.
* For recycling management:
- analysing matching/mismatching at each stage of the flow point;
- associating proper action to operator request, for example sending cycle code
to robots
- analysing occured actions to eject parts (rack or part eject stage)
* for contesting to calculator:
- set dialogue status;
- set flow status
- toggle validation words

OPERATING:
************
For further details refer to documentation and Program help tools (OAP)
The BF_Recalage exchange data with several Sub-assembly and Global DB blocks
The customization of data for analysis and links with  IHMP must be done in a
specific FB

A) Associated global DB:
**********************
for Recycling function the following global DB must be used :
- DB "" SIPx "" containing the symbolic names of variables exchanging with SIPTOL:
- DB ""Pile"" containing information of analysis for the IHMP
These DB are given in the file zip (library S7) joined with the BF

A 1) SIPx  db
In the Renault program structure, DB89 to DB80 blocks are reserved for this use.
(Decreasing numbering to be respected)

The symbolic Name of the DB is SIPx with x = 1 for the first card of
communication.
Maxi 8 according to the type of PLC.

Each connection with SIPTOL uses 2 frames of exchanges for the recycling
function:
The first contains the information of the part to be made.
The second contains the information of analysis for the recycling (Part to be
made and past parts)
Each frame is associated with a structure containing the symbolic names of
variables.
These names must be respected to avoid the loss of automatic links between IHMP
screens and PLC program.

The symbolic names of frames are:
1st Struct, Part to be produced = < NomSE > (name of recycling sub assembly)
2nd Struct, Recycling analyse = < NomSE > ana

A 2) PILE db:
This DB is used to memorize the data coming from BF_Fifo.
In the Renault program structure, the DB90 is reserved for that purpose.
For the recycling, the information contained in data stack, corresponds to the
past and to be made part to allow their visualization on IHMP.

The symbolic names associated with variables MUST NOT be modified to ensure the
links with the IHMP.

The Part to make stack: is built with the part information of sub-assembly N-5
(maxi) in accordance with the recycling point.
The data are saved in <sub-assembly name>_plus struct which contains the
information for every intermediate working point.

The past parts stack corresponds to the information coming from the DB
containing the data for writing in tag of the last 2 parts written after the
recycling point.
The data are saved in a <Sub-assembly name>_moins struct which contains, for
each part, one data structure.

The symbolic names of structs are:
1st Struct, Part to do = <Sub-assembly name>_plus (name of recycling sub
assembly)
Example: O4_plus
2nd Struct, Parts past = <Sub-assembly name>_moins (name of recycling sub
assembly)
Example: O4_moins

The Part to make Struct must be adapted in accordance with the number of stage
that are located before the point of recycling by deleting the useless sub-
struct


B) Links with IHMP:
********************
The links with IHMP are done by the BF_Recalage and one instance DB how
containing the customization of the code in accordance to the installation.

B.1) BF_Recalage Links:
The instance name of the BF has to follow the following rule:
< Sub-assembly name > Recal

B.2) FB of customization Links:
The instance name of the FB has to follow the following rule:
Zx < Recycling Sub-assembly name>IHM
X = Zone Number of the facility

FAULT CODE:
************
Not used

********************************_ODIL_ID_**************************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 180
Dernier ID mis en oeuvre / Last ID implemented : 1857_180
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";""
"********************************************************************************
*                                FB ""LANCEMENT""                                *
*                    Gestion d'un point de lancement siptol                    *
*                       Management siptol launching point                      *
********************************************************************************
(In english further below)
DESCRIPTION
***********

Ce FB permet de gérer le dialogue d'un point de lancement siptol.
Il prend en charge la fabrication avec ou hors siptol.
Plusieurs blocs d'échanges sont accéptés.

Pour la description detaillee du Bloc Fonctionnel, voir le guide GE03_J2_011.

MISE EN OEUVRE :
****************
MODE : Mode de fonctionnement
       1 = Lancement pièce avec contrôle de la diversité
       2 = Lancement pièce sans contrôle de la diversité
       3 = Lancement palette avec contrôle de la diversité
       4 = Lancement palette sans contrôle de la diversité





CODES D'ERREUR :
****************
x0-1 : Invalid ""LTyp"" Value
x0-2 : Invalid ""TABTyp"" Value
x0-3 : Unexpected Data Type (TAB_ECH)
x0-4 : Unexpected Data Area (TAB_ECH)
x0-5 : Area Too Small (TAB_ECH)
x0-6 : Unexpected Data Type (TAB_ACQ)
x0-7 : Unexpected Data Area (TAB_CQ)
x0-8 : Area Too Small (TAB_ACQ)

x1-1 : Unexpected ""ValCal"" / ""ValApi""
x1-2 : Null ""ValCal"" & ""ValApi""

x2-1 : Unexpected Data Type (TAB_MAP)
x2-2 : Unexpected Data Area (TAB_MAP)
x2-3 : Area Too Small (TAB_MAP)
x2-4 : Unexpected Data Type (TAB_MAPEx)
x2-5 : Unexpected Data Area (TAB_MAPEx)
x2-6 : Area Too Small (TAB_MAPEx)
x2-7 : Null ""TAB_MAP"" & ""TAB_MAPEx""

x3-1 : Invalid ""TAB_MAP"" Values
x3-2 : Invalid ""TAB_MAPEx"" Values

x4-1 : Unexpected Data Type (""IPF"")
x4-2 : Unexpected Data Area (""IPF"")
x4-3 : Odd Data length (""IPF"")
x4-4 : Unexpected Data Type (""XIPP"")
x4-5 : Unexpected Data Area (""XIPP"")
x4-6 : Odd Data length (""XIPP"")
x4-7 : Different Length (""IPF"" & ""XIPP"")

x5-1 : Copy from ""TAB_ECH"" to ""TAB_ACQ""
x5-2 : Copy from ""TAB_MAP"" to ""TAB_ACQ"" (First Part)
x5-3 : Copy from ""TAB_MAP"" to ""TAB_ACQ"" (Second Part)
x5-4 : Copy from ""TAB_MAPEx"" to ""TAB_ACQ""
x5-5 : Copy from ""Pilot.IhmSelDP"" to ""TAB_ACQ""
x5-6 : Copy from ""Pilot.IhmSelAO"" to ""TAB_ACQ""

******************************* ENGLISH INFORMATION ****************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 16
Dernier ID mis en oeuvre / Last ID implemented : 1858_16
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....
";"********************************************************************************
*                                FB ""LANCEMENT""                                *
*                    Gestion d'un point de lancement siptol                    *
*                       Management siptol launching point                      *
********************************************************************************
(In english further below)
DESCRIPTION
***********

Ce FB permet de gérer le dialogue d'un point de lancement siptol.
Il prend en charge la fabrication avec ou hors siptol.
Plusieurs blocs d'échanges sont accéptés.

Pour la description detaillee du Bloc Fonctionnel, voir le guide GE03_J2_011.

MISE EN OEUVRE :
****************
MODE : Mode de fonctionnement
       1 = Lancement pièce avec contrôle de la diversité
       2 = Lancement pièce sans contrôle de la diversité
       3 = Lancement palette avec contrôle de la diversité
       4 = Lancement palette sans contrôle de la diversité





CODES D'ERREUR :
****************
x0-1 : Invalid ""LTyp"" Value
x0-2 : Invalid ""TABTyp"" Value
x0-3 : Unexpected Data Type (TAB_ECH)
x0-4 : Unexpected Data Area (TAB_ECH)
x0-5 : Area Too Small (TAB_ECH)
x0-6 : Unexpected Data Type (TAB_ACQ)
x0-7 : Unexpected Data Area (TAB_CQ)
x0-8 : Area Too Small (TAB_ACQ)

x1-1 : Unexpected ""ValCal"" / ""ValApi""
x1-2 : Null ""ValCal"" & ""ValApi""

x2-1 : Unexpected Data Type (TAB_MAP)
x2-2 : Unexpected Data Area (TAB_MAP)
x2-3 : Area Too Small (TAB_MAP)
x2-4 : Unexpected Data Type (TAB_MAPEx)
x2-5 : Unexpected Data Area (TAB_MAPEx)
x2-6 : Area Too Small (TAB_MAPEx)
x2-7 : Null ""TAB_MAP"" & ""TAB_MAPEx""

x3-1 : Invalid ""TAB_MAP"" Values
x3-2 : Invalid ""TAB_MAPEx"" Values

x4-1 : Unexpected Data Type (""IPF"")
x4-2 : Unexpected Data Area (""IPF"")
x4-3 : Odd Data length (""IPF"")
x4-4 : Unexpected Data Type (""XIPP"")
x4-5 : Unexpected Data Area (""XIPP"")
x4-6 : Odd Data length (""XIPP"")
x4-7 : Different Length (""IPF"" & ""XIPP"")

x5-1 : Copy from ""TAB_ECH"" to ""TAB_ACQ""
x5-2 : Copy from ""TAB_MAP"" to ""TAB_ACQ"" (First Part)
x5-3 : Copy from ""TAB_MAP"" to ""TAB_ACQ"" (Second Part)
x5-4 : Copy from ""TAB_MAPEx"" to ""TAB_ACQ""
x5-5 : Copy from ""Pilot.IhmSelDP"" to ""TAB_ACQ""
x5-6 : Copy from ""Pilot.IhmSelAO"" to ""TAB_ACQ""

******************************* ENGLISH INFORMATION ****************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 16
Dernier ID mis en oeuvre / Last ID implemented : 1858_16
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....
";"********************************************************************************
*                                FB ""LANCEMENT""                                *
*                    Gestion d'un point de lancement siptol                    *
*                       Management siptol launching point                      *
********************************************************************************
(In english further below)
DESCRIPTION
***********

Ce FB permet de gérer le dialogue d'un point de lancement siptol.
Il prend en charge la fabrication avec ou hors siptol.
Plusieurs blocs d'échanges sont accéptés.

Pour la description detaillee du Bloc Fonctionnel, voir le guide GE03_J2_011.

MISE EN OEUVRE :
****************
MODE : Mode de fonctionnement
       1 = Lancement pièce avec contrôle de la diversité
       2 = Lancement pièce sans contrôle de la diversité
       3 = Lancement palette avec contrôle de la diversité
       4 = Lancement palette sans contrôle de la diversité





CODES D'ERREUR :
****************
x0-1 : Invalid ""LTyp"" Value
x0-2 : Invalid ""TABTyp"" Value
x0-3 : Unexpected Data Type (TAB_ECH)
x0-4 : Unexpected Data Area (TAB_ECH)
x0-5 : Area Too Small (TAB_ECH)
x0-6 : Unexpected Data Type (TAB_ACQ)
x0-7 : Unexpected Data Area (TAB_CQ)
x0-8 : Area Too Small (TAB_ACQ)

x1-1 : Unexpected ""ValCal"" / ""ValApi""
x1-2 : Null ""ValCal"" & ""ValApi""

x2-1 : Unexpected Data Type (TAB_MAP)
x2-2 : Unexpected Data Area (TAB_MAP)
x2-3 : Area Too Small (TAB_MAP)
x2-4 : Unexpected Data Type (TAB_MAPEx)
x2-5 : Unexpected Data Area (TAB_MAPEx)
x2-6 : Area Too Small (TAB_MAPEx)
x2-7 : Null ""TAB_MAP"" & ""TAB_MAPEx""

x3-1 : Invalid ""TAB_MAP"" Values
x3-2 : Invalid ""TAB_MAPEx"" Values

x4-1 : Unexpected Data Type (""IPF"")
x4-2 : Unexpected Data Area (""IPF"")
x4-3 : Odd Data length (""IPF"")
x4-4 : Unexpected Data Type (""XIPP"")
x4-5 : Unexpected Data Area (""XIPP"")
x4-6 : Odd Data length (""XIPP"")
x4-7 : Different Length (""IPF"" & ""XIPP"")

x5-1 : Copy from ""TAB_ECH"" to ""TAB_ACQ""
x5-2 : Copy from ""TAB_MAP"" to ""TAB_ACQ"" (First Part)
x5-3 : Copy from ""TAB_MAP"" to ""TAB_ACQ"" (Second Part)
x5-4 : Copy from ""TAB_MAPEx"" to ""TAB_ACQ""
x5-5 : Copy from ""Pilot.IhmSelDP"" to ""TAB_ACQ""
x5-6 : Copy from ""Pilot.IhmSelAO"" to ""TAB_ACQ""

******************************* ENGLISH INFORMATION ****************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 16
Dernier ID mis en oeuvre / Last ID implemented : 1858_16
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....
";""
"-------------------------------------------------------------------------------
-                             BF_AFF SIEBERT (2*13)                           -
-                 Affichage de deux lignes de 13 Caracteres                   -
-                   Display 2 lines of 13 characters each                     -
-------------------------------------------------------------------------------
(English version further below)

Description:
------------
Ce Bloc Fonctionnel gere un afficheur Siebert 2*13 Caracteres + 1 Voyant

Il envoie vers l'afficheur les messages MsgLx[1], MsgLx[2], les
attributs clignotants et le pilotage du voyant sur le front montant de ""MajAff""
et toutes les cinq secondes.

Attention:
----------
Ce bloc fonctionnel ne fonctionne que sur les CPU 319 PN.
Pour plus de detail voir la documentation du BF.

MISE EN OEUVRE
---------------
1) Parametres d'entree:
--------------------
          ID: ID de la liaison (compris entre 1 et 4095)
              Le meme ID doit être parametre pour tous les afficheurs.

          IP: Adresse IP de l'afficheur
              La documentation de l'adresse IP est realisee en list en amont
              du FB. L'instruction suivante doit etre mise en uvre :
              L B#(xxx,xx,xxx,xx)  / xxx,xx,xxx,xx = adresse IP de l'afficheur
              T #<Nom SE>AFF_AN.IP / = Nom d'appel en multi instance du BF

      MajAff: Mise a jour de l'affichage (sur front montant)

         ITL: Pour eviter une surcharge de l'alimentation 24V il est recommande
              de cascader le test lampe des afficheurs Siebert
              Dans ce cas l'entree ITL est documentee pour :
              - 1er afficheur par l'information test lampe de l'ilot
                ''IG''.Itlg (Sortie de la BF_Ilot)
              - 2eme afficheur par le front descendant de la sortie TLEC du
                premier afficheur
              - 3eme afficheur par le font descendant de la sortie TLEC du
                deuxieme afficheur
              etcjusqu'au dernier afficheur

       MsgLx: Tableau des messages a afficher sur les ligne 1 et 2

2) Parametres de sortie:
   ---------------------
        TLEC:  Test Lampe en Cours
               Vous pouvez :
               - Soit attribuer un variable pour chaque sortie TLEC dans le DB
                global de zone correspondant (Z$G)
               - Soit faire un adressage direct en utilisant pour le
                front descendant la sortie TLEC avec l'adressage Suivant :

<NOM DB d'instance du sous ensemble contenant la BF>.<Nom d'appel
multi-instance de la BF>.TLEC


Code de Defauts:
----------------
Le dernier defaut est maintenu tant qu'une transaction correcte n'a pas ete
effectuee.
Valeur de diag.codedef
 0: Pas de defaut
 1: Une erreur est survenue lors de l'appel au FC 'AG_SEND'
    AddInfo contient le code d'erreur retourne par la fonction

Dependances:
-----------
   Ce bloc utilise:
      - Le FB 1685 ""TCON"" (FB 65 de la Bibliotheque Standard - Blocs de
Communication)
      - Le FB 1681 ""TUSEND"" (FB 67 de la Bibliotheque Standard - Blocs de
Communication)

-----------------------ENGLISH INFORMATION-------------------------------------
Description:
------------
This function bloc manages a Siebert display of 2 lines of 13 characters each +
1 lamp

The Function Block sends the string message MsgLx[1] and MsgLx[2], the Blinking
line attribute and lamp state to the display on the rising edge of ""MajAff"" and
every 5 seconds.

Warning:
--------
This function Block is suitable for CPU 319 PN only.
See the documentation for more details

OPERATING :
----------
1) Input parameters:
-----------------
          ID: Link ID (From 1 up to 4095)
              The ID must be the same for each of the Displays
          IP: Display IP adress
              The IP address is completed as a list code upstream from the FB
              The following instruction must be implemented :
              L B#(xxx,xx,xxx,xx)/ xxx,xx,xxx,xx = the display unit IP address
              T#<Sub assembly Name>AFF_AN.IP /= Multi instance call name

      MajAff: Update Display (On the Rising Edge)

         ITL: Lamp test
              To prevent overloading of the 24V power supply we recommend
              daisy-chaining the Siebert display unit lamp tests:
              In this case, the ITL input is completed for:
              The first display unit by the island lamp test data (''IG''.Itlg)
              The second display unit by the falling edge of the first display
              unit's TLEC output
              The third display unit by the falling edge of the second display
              unit's TLEC output
              And so onup to the last display unit

       MsgLx:  Message to be displayed on line 1

2) Output parameters:
  ------------------
        TLEC: Lamp test in progress
             You can:
             - Either allocates a variable for each TLEC output in the global
               DB for the corresponding zone (Z$G)
             - Or perform direct addressing using the TLEC output with the
               following addressing for the falling edge:
<Instance DB NAME of the sub-assembly containing the FB>.<FB multi-instance
call name>.TLEC

Fault CODE:
-----------
The last fault is held on as long as exchange is not correct.
Diag.codedef values :
 0: No fault
 1: A fault occurred at call of FC ""AG_SEND""
    FC return fault code in

Dependancies:
-------------
   This FB uses:
      - The FB 1685 ""TCON"" (FB 65 from the Standard Library  -
Communication Blocks)
      - The FB 1681 ""TUSEND"" (FB 67 from the Standard Library  - Communication
Blocks)

***************************** _ODIL_ID_ ************************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 4
Dernier ID mis en oeuvre / Last ID implemented : 1860_4
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....
";"-------------------------------------------------------------------------------
-                             BF_AFF SIEBERT (2*13)                           -
-                 Affichage de deux lignes de 13 Caracteres                   -
-                   Display 2 lines of 13 characters each                     -
-------------------------------------------------------------------------------
(English version further below)

Description:
------------
Ce Bloc Fonctionnel gere un afficheur Siebert 2*13 Caracteres + 1 Voyant

Il envoie vers l'afficheur les messages MsgLx[1], MsgLx[2], les
attributs clignotants et le pilotage du voyant sur le front montant de ""MajAff""
et toutes les cinq secondes.

Attention:
----------
Ce bloc fonctionnel ne fonctionne que sur les CPU 319 PN.
Pour plus de detail voir la documentation du BF.

MISE EN OEUVRE
---------------
1) Parametres d'entree:
--------------------
          ID: ID de la liaison (compris entre 1 et 4095)
              Le meme ID doit être parametre pour tous les afficheurs.

          IP: Adresse IP de l'afficheur
              La documentation de l'adresse IP est realisee en list en amont
              du FB. L'instruction suivante doit etre mise en uvre :
              L B#(xxx,xx,xxx,xx)  / xxx,xx,xxx,xx = adresse IP de l'afficheur
              T #<Nom SE>AFF_AN.IP / = Nom d'appel en multi instance du BF

      MajAff: Mise a jour de l'affichage (sur front montant)

         ITL: Pour eviter une surcharge de l'alimentation 24V il est recommande
              de cascader le test lampe des afficheurs Siebert
              Dans ce cas l'entree ITL est documentee pour :
              - 1er afficheur par l'information test lampe de l'ilot
                ''IG''.Itlg (Sortie de la BF_Ilot)
              - 2eme afficheur par le front descendant de la sortie TLEC du
                premier afficheur
              - 3eme afficheur par le font descendant de la sortie TLEC du
                deuxieme afficheur
              etcjusqu'au dernier afficheur

       MsgLx: Tableau des messages a afficher sur les ligne 1 et 2

2) Parametres de sortie:
   ---------------------
        TLEC:  Test Lampe en Cours
               Vous pouvez :
               - Soit attribuer un variable pour chaque sortie TLEC dans le DB
                global de zone correspondant (Z$G)
               - Soit faire un adressage direct en utilisant pour le
                front descendant la sortie TLEC avec l'adressage Suivant :

<NOM DB d'instance du sous ensemble contenant la BF>.<Nom d'appel
multi-instance de la BF>.TLEC


Code de Defauts:
----------------
Le dernier defaut est maintenu tant qu'une transaction correcte n'a pas ete
effectuee.
Valeur de diag.codedef
 0: Pas de defaut
 1: Une erreur est survenue lors de l'appel au FC 'AG_SEND'
    AddInfo contient le code d'erreur retourne par la fonction

Dependances:
-----------
   Ce bloc utilise:
      - Le FB 1685 ""TCON"" (FB 65 de la Bibliotheque Standard - Blocs de
Communication)
      - Le FB 1681 ""TUSEND"" (FB 67 de la Bibliotheque Standard - Blocs de
Communication)

-----------------------ENGLISH INFORMATION-------------------------------------
Description:
------------
This function bloc manages a Siebert display of 2 lines of 13 characters each +
1 lamp

The Function Block sends the string message MsgLx[1] and MsgLx[2], the Blinking
line attribute and lamp state to the display on the rising edge of ""MajAff"" and
every 5 seconds.

Warning:
--------
This function Block is suitable for CPU 319 PN only.
See the documentation for more details

OPERATING :
----------
1) Input parameters:
-----------------
          ID: Link ID (From 1 up to 4095)
              The ID must be the same for each of the Displays
          IP: Display IP adress
              The IP address is completed as a list code upstream from the FB
              The following instruction must be implemented :
              L B#(xxx,xx,xxx,xx)/ xxx,xx,xxx,xx = the display unit IP address
              T#<Sub assembly Name>AFF_AN.IP /= Multi instance call name

      MajAff: Update Display (On the Rising Edge)

         ITL: Lamp test
              To prevent overloading of the 24V power supply we recommend
              daisy-chaining the Siebert display unit lamp tests:
              In this case, the ITL input is completed for:
              The first display unit by the island lamp test data (''IG''.Itlg)
              The second display unit by the falling edge of the first display
              unit's TLEC output
              The third display unit by the falling edge of the second display
              unit's TLEC output
              And so onup to the last display unit

       MsgLx:  Message to be displayed on line 1

2) Output parameters:
  ------------------
        TLEC: Lamp test in progress
             You can:
             - Either allocates a variable for each TLEC output in the global
               DB for the corresponding zone (Z$G)
             - Or perform direct addressing using the TLEC output with the
               following addressing for the falling edge:
<Instance DB NAME of the sub-assembly containing the FB>.<FB multi-instance
call name>.TLEC

Fault CODE:
-----------
The last fault is held on as long as exchange is not correct.
Diag.codedef values :
 0: No fault
 1: A fault occurred at call of FC ""AG_SEND""
    FC return fault code in

Dependancies:
-------------
   This FB uses:
      - The FB 1685 ""TCON"" (FB 65 from the Standard Library  -
Communication Blocks)
      - The FB 1681 ""TUSEND"" (FB 67 from the Standard Library  - Communication
Blocks)

***************************** _ODIL_ID_ ************************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 4
Dernier ID mis en oeuvre / Last ID implemented : 1860_4
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....
";"-------------------------------------------------------------------------------
-                             BF_AFF SIEBERT (2*13)                           -
-                 Affichage de deux lignes de 13 Caracteres                   -
-                   Display 2 lines of 13 characters each                     -
-------------------------------------------------------------------------------
(English version further below)

Description:
------------
Ce Bloc Fonctionnel gere un afficheur Siebert 2*13 Caracteres + 1 Voyant

Il envoie vers l'afficheur les messages MsgLx[1], MsgLx[2], les
attributs clignotants et le pilotage du voyant sur le front montant de ""MajAff""
et toutes les cinq secondes.

Attention:
----------
Ce bloc fonctionnel ne fonctionne que sur les CPU 319 PN.
Pour plus de detail voir la documentation du BF.

MISE EN OEUVRE
---------------
1) Parametres d'entree:
--------------------
          ID: ID de la liaison (compris entre 1 et 4095)
              Le meme ID doit être parametre pour tous les afficheurs.

          IP: Adresse IP de l'afficheur
              La documentation de l'adresse IP est realisee en list en amont
              du FB. L'instruction suivante doit etre mise en uvre :
              L B#(xxx,xx,xxx,xx)  / xxx,xx,xxx,xx = adresse IP de l'afficheur
              T #<Nom SE>AFF_AN.IP / = Nom d'appel en multi instance du BF

      MajAff: Mise a jour de l'affichage (sur front montant)

         ITL: Pour eviter une surcharge de l'alimentation 24V il est recommande
              de cascader le test lampe des afficheurs Siebert
              Dans ce cas l'entree ITL est documentee pour :
              - 1er afficheur par l'information test lampe de l'ilot
                ''IG''.Itlg (Sortie de la BF_Ilot)
              - 2eme afficheur par le front descendant de la sortie TLEC du
                premier afficheur
              - 3eme afficheur par le font descendant de la sortie TLEC du
                deuxieme afficheur
              etcjusqu'au dernier afficheur

       MsgLx: Tableau des messages a afficher sur les ligne 1 et 2

2) Parametres de sortie:
   ---------------------
        TLEC:  Test Lampe en Cours
               Vous pouvez :
               - Soit attribuer un variable pour chaque sortie TLEC dans le DB
                global de zone correspondant (Z$G)
               - Soit faire un adressage direct en utilisant pour le
                front descendant la sortie TLEC avec l'adressage Suivant :

<NOM DB d'instance du sous ensemble contenant la BF>.<Nom d'appel
multi-instance de la BF>.TLEC


Code de Defauts:
----------------
Le dernier defaut est maintenu tant qu'une transaction correcte n'a pas ete
effectuee.
Valeur de diag.codedef
 0: Pas de defaut
 1: Une erreur est survenue lors de l'appel au FC 'AG_SEND'
    AddInfo contient le code d'erreur retourne par la fonction

Dependances:
-----------
   Ce bloc utilise:
      - Le FB 1685 ""TCON"" (FB 65 de la Bibliotheque Standard - Blocs de
Communication)
      - Le FB 1681 ""TUSEND"" (FB 67 de la Bibliotheque Standard - Blocs de
Communication)

-----------------------ENGLISH INFORMATION-------------------------------------
Description:
------------
This function bloc manages a Siebert display of 2 lines of 13 characters each +
1 lamp

The Function Block sends the string message MsgLx[1] and MsgLx[2], the Blinking
line attribute and lamp state to the display on the rising edge of ""MajAff"" and
every 5 seconds.

Warning:
--------
This function Block is suitable for CPU 319 PN only.
See the documentation for more details

OPERATING :
----------
1) Input parameters:
-----------------
          ID: Link ID (From 1 up to 4095)
              The ID must be the same for each of the Displays
          IP: Display IP adress
              The IP address is completed as a list code upstream from the FB
              The following instruction must be implemented :
              L B#(xxx,xx,xxx,xx)/ xxx,xx,xxx,xx = the display unit IP address
              T#<Sub assembly Name>AFF_AN.IP /= Multi instance call name

      MajAff: Update Display (On the Rising Edge)

         ITL: Lamp test
              To prevent overloading of the 24V power supply we recommend
              daisy-chaining the Siebert display unit lamp tests:
              In this case, the ITL input is completed for:
              The first display unit by the island lamp test data (''IG''.Itlg)
              The second display unit by the falling edge of the first display
              unit's TLEC output
              The third display unit by the falling edge of the second display
              unit's TLEC output
              And so onup to the last display unit

       MsgLx:  Message to be displayed on line 1

2) Output parameters:
  ------------------
        TLEC: Lamp test in progress
             You can:
             - Either allocates a variable for each TLEC output in the global
               DB for the corresponding zone (Z$G)
             - Or perform direct addressing using the TLEC output with the
               following addressing for the falling edge:
<Instance DB NAME of the sub-assembly containing the FB>.<FB multi-instance
call name>.TLEC

Fault CODE:
-----------
The last fault is held on as long as exchange is not correct.
Diag.codedef values :
 0: No fault
 1: A fault occurred at call of FC ""AG_SEND""
    FC return fault code in

Dependancies:
-------------
   This FB uses:
      - The FB 1685 ""TCON"" (FB 65 from the Standard Library  -
Communication Blocks)
      - The FB 1681 ""TUSEND"" (FB 67 from the Standard Library  - Communication
Blocks)

***************************** _ODIL_ID_ ************************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 4
Dernier ID mis en oeuvre / Last ID implemented : 1860_4
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....
";""
"**********************************************************************
*                           BF_WELDING_BOX                           *
*                        WELDING BOX CONTROL                         *
*     GESTION DES COFFRETS DE SELECTION DES PARAMETRES SOUDURE       *
**********************************************************************
(in english further below)
DESCRIPTION :
*************
Le FB1868 ""BF_WELDING_BOX"" assure le pilotage des coffrets de sélection des
paramètres sur les séquenceurs de soudure (coffrets appelé Welding Box). Ce BF
peut gérer deux coffrets welding box installés sur un poste de travail.

MISE EN OEUVRE :
****************
Nom de la BF : P0WBX, où P0 est le nom du poste et X est le numéro de la BF sur
le poste : exemple A0WB1.
L'entrée CODE_WB est à renseigner avec la variable du même nom, contenu dans le
DB Talo si l'îlot travail sur un principe de code process. Dans les îlots hors
Siptol ou sans principe de code process, on utilisera le mot diversité du poste
(exemple : S1A0DIV)
Les sorties ""WBx.Bitx"" sont à renseigner avec les sorties Profinet associées
aux coffrets Welding Box.

DEFAUT :
********
Si la valeur en entrée de la BF n'est pas cohérente, un défaut est généré. La
sortie défaut est à renseigner avec une variable statique sous la forme
SZXP0DWBX : avec ZX = numéro de zone, P0 = poste de travail (A0, B0,...), WBX
où
X est le numéro de la BF dans la section 1,2,... soit par exemple (S1A0DWB1).


********************************ENGLISH INFORMATION ****************************
DESCRIPTION :
*************
The FB1868 is used for Welding Box control. This FB can control two Welding Box
installed on a stage.

OPERATING :
***********
FB name rule : P0WBX, P0 is the stage name and X is the number of FB on the
stage : for exemple A0WB1.
""CODE_WB"" Input as to be fill in with a value. In case of Siptol use, this
value
can be found in Talo DB, in stage Structure. When Siptol is not present, fill
in
this input with diversity value (generate with IPP data).
""WBx.Bitx"" output have to be fill in with Profinet output data.

FAULT :
*******
A fault is set if input value is not correct.
Def output has to be fill in with Stat data like : SZXP0DWBX
Where ZX = zone number, P0 = stage name (A0, B0,...), WBX = X is the FB number
1,2,... for exemple : S1A0DWB1.
NB Reseaux BF 1er Version / Network Number in 1ft version : 4
Dernier ID mis en oeuvre / Last ID implemented : 1868_4
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"**********************************************************************
*                           BF_WELDING_BOX                           *
*                        WELDING BOX CONTROL                         *
*     GESTION DES COFFRETS DE SELECTION DES PARAMETRES SOUDURE       *
**********************************************************************
(in english further below)
DESCRIPTION :
*************
Le FB1868 ""BF_WELDING_BOX"" assure le pilotage des coffrets de sélection des
paramètres sur les séquenceurs de soudure (coffrets appelé Welding Box). Ce BF
peut gérer deux coffrets welding box installés sur un poste de travail.

MISE EN OEUVRE :
****************
Nom de la BF : P0WBX, où P0 est le nom du poste et X est le numéro de la BF sur
le poste : exemple A0WB1.
L'entrée CODE_WB est à renseigner avec la variable du même nom, contenu dans le
DB Talo si l'îlot travail sur un principe de code process. Dans les îlots hors
Siptol ou sans principe de code process, on utilisera le mot diversité du poste
(exemple : S1A0DIV)
Les sorties ""WBx.Bitx"" sont à renseigner avec les sorties Profinet associées
aux coffrets Welding Box.

DEFAUT :
********
Si la valeur en entrée de la BF n'est pas cohérente, un défaut est généré. La
sortie défaut est à renseigner avec une variable statique sous la forme
SZXP0DWBX : avec ZX = numéro de zone, P0 = poste de travail (A0, B0,...), WBX
où
X est le numéro de la BF dans la section 1,2,... soit par exemple (S1A0DWB1).


********************************ENGLISH INFORMATION ****************************
DESCRIPTION :
*************
The FB1868 is used for Welding Box control. This FB can control two Welding Box
installed on a stage.

OPERATING :
***********
FB name rule : P0WBX, P0 is the stage name and X is the number of FB on the
stage : for exemple A0WB1.
""CODE_WB"" Input as to be fill in with a value. In case of Siptol use, this
value
can be found in Talo DB, in stage Structure. When Siptol is not present, fill
in
this input with diversity value (generate with IPP data).
""WBx.Bitx"" output have to be fill in with Profinet output data.

FAULT :
*******
A fault is set if input value is not correct.
Def output has to be fill in with Stat data like : SZXP0DWBX
Where ZX = zone number, P0 = stage name (A0, B0,...), WBX = X is the FB number
1,2,... for exemple : S1A0DWB1.
NB Reseaux BF 1er Version / Network Number in 1ft version : 4
Dernier ID mis en oeuvre / Last ID implemented : 1868_4
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"**********************************************************************
*                           BF_WELDING_BOX                           *
*                        WELDING BOX CONTROL                         *
*     GESTION DES COFFRETS DE SELECTION DES PARAMETRES SOUDURE       *
**********************************************************************
(in english further below)
DESCRIPTION :
*************
Le FB1868 ""BF_WELDING_BOX"" assure le pilotage des coffrets de sélection des
paramètres sur les séquenceurs de soudure (coffrets appelé Welding Box). Ce BF
peut gérer deux coffrets welding box installés sur un poste de travail.

MISE EN OEUVRE :
****************
Nom de la BF : P0WBX, où P0 est le nom du poste et X est le numéro de la BF sur
le poste : exemple A0WB1.
L'entrée CODE_WB est à renseigner avec la variable du même nom, contenu dans le
DB Talo si l'îlot travail sur un principe de code process. Dans les îlots hors
Siptol ou sans principe de code process, on utilisera le mot diversité du poste
(exemple : S1A0DIV)
Les sorties ""WBx.Bitx"" sont à renseigner avec les sorties Profinet associées
aux coffrets Welding Box.

DEFAUT :
********
Si la valeur en entrée de la BF n'est pas cohérente, un défaut est généré. La
sortie défaut est à renseigner avec une variable statique sous la forme
SZXP0DWBX : avec ZX = numéro de zone, P0 = poste de travail (A0, B0,...), WBX
où
X est le numéro de la BF dans la section 1,2,... soit par exemple (S1A0DWB1).


********************************ENGLISH INFORMATION ****************************
DESCRIPTION :
*************
The FB1868 is used for Welding Box control. This FB can control two Welding Box
installed on a stage.

OPERATING :
***********
FB name rule : P0WBX, P0 is the stage name and X is the number of FB on the
stage : for exemple A0WB1.
""CODE_WB"" Input as to be fill in with a value. In case of Siptol use, this
value
can be found in Talo DB, in stage Structure. When Siptol is not present, fill
in
this input with diversity value (generate with IPP data).
""WBx.Bitx"" output have to be fill in with Profinet output data.

FAULT :
*******
A fault is set if input value is not correct.
Def output has to be fill in with Stat data like : SZXP0DWBX
Where ZX = zone number, P0 = stage name (A0, B0,...), WBX = X is the FB number
1,2,... for exemple : S1A0DWB1.
NB Reseaux BF 1er Version / Network Number in 1ft version : 4
Dernier ID mis en oeuvre / Last ID implemented : 1868_4
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";""
"********************************************************************************
*                              FB ""CONF_MACHINE""                               *
*                  Gestion base de donnees parametrage machine                 *
*                      Management database machine SETUP                       *
********************************************************************************
(In english further below)
DESCRIPTION
***********
Ce FB permet de rechercher une configuration machine permettant d'animer un
poste de travail à partir d'un mot de référence (diversité) et d'un numéro
d'étape (état du cycle).

Il est utilisé dans le cadre d'installation capacitaire pouvant intégrer un
grand nombre de diversités.
Dans ce cas, il permet d'animer un poste de travail à partir des données de
configurations stockées dans la base de données du poste.

Pour la description detaillee du Bloc Fonctionnel, voir le guide GE03.J2.012.

MISE EN OEUVRE :
****************
INTERFACE ENTRÉE :
Val_trait : Condition de validation du traitement
Iadf      : Information annulation défaut
Ref       : Référence recherché
Etape     : Etape recherché
Tab_param : Table de paramétrage
Tab_sort  : Table des données de sortie
Nbcf      : Nombres de configuration
Nbet      : Nombres d'étape
Lgcf      : Longueur d'une configuration (bytes)

INTERFACE SORTIE :
Fin_trait   : Information fin de traitement
Defaut      : Information de défaut
Diag        : Table de mots de diagnostic
  Def       : Présence défaut
  Ala       : Présence alarme
  NumListe  : Numéro liste de défaut SMP
  CodeDef   : Numéro de défaut
  Nref      : Numéro de référence (en cours)
  Netape    : Numéro d'étape (en cours)






CODES D'ERREUR :
****************
Valeurs de Diag.codedef

DEC   HEXA   DESCRIPTION
1     1      Défaut type de données table de paramétrage
2     2      Défaut dimension table de paramétrage
4     4      Défaut type de données table de sortie
8     8      Défaut dimension table de sortie
16    10     Défaut valeur mots de référence ou numéro d'étape
32    20     Défaut transfert configuration
64    40     Défaut référence inconnue

******************************* ENGLISH INFORMATION ****************************

******************************* _ODIL_ID_ *********************************


NB Reseaux BF 1er Version / Network Number in 1ft version : 12
Dernier ID mis en oeuvre / Last ID implemented : 1869_12
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....
";"********************************************************************************
*                              FB ""CONF_MACHINE""                               *
*                  Gestion base de donnees parametrage machine                 *
*                      Management database machine SETUP                       *
********************************************************************************
(In english further below)
DESCRIPTION
***********
Ce FB permet de rechercher une configuration machine permettant d'animer un
poste de travail à partir d'un mot de référence (diversité) et d'un numéro
d'étape (état du cycle).

Il est utilisé dans le cadre d'installation capacitaire pouvant intégrer un
grand nombre de diversités.
Dans ce cas, il permet d'animer un poste de travail à partir des données de
configurations stockées dans la base de données du poste.

Pour la description detaillee du Bloc Fonctionnel, voir le guide GE03.J2.012.

MISE EN OEUVRE :
****************
INTERFACE ENTRÉE :
Val_trait : Condition de validation du traitement
Iadf      : Information annulation défaut
Ref       : Référence recherché
Etape     : Etape recherché
Tab_param : Table de paramétrage
Tab_sort  : Table des données de sortie
Nbcf      : Nombres de configuration
Nbet      : Nombres d'étape
Lgcf      : Longueur d'une configuration (bytes)

INTERFACE SORTIE :
Fin_trait   : Information fin de traitement
Defaut      : Information de défaut
Diag        : Table de mots de diagnostic
  Def       : Présence défaut
  Ala       : Présence alarme
  NumListe  : Numéro liste de défaut SMP
  CodeDef   : Numéro de défaut
  Nref      : Numéro de référence (en cours)
  Netape    : Numéro d'étape (en cours)






CODES D'ERREUR :
****************
Valeurs de Diag.codedef

DEC   HEXA   DESCRIPTION
1     1      Défaut type de données table de paramétrage
2     2      Défaut dimension table de paramétrage
4     4      Défaut type de données table de sortie
8     8      Défaut dimension table de sortie
16    10     Défaut valeur mots de référence ou numéro d'étape
32    20     Défaut transfert configuration
64    40     Défaut référence inconnue

******************************* ENGLISH INFORMATION ****************************

******************************* _ODIL_ID_ *********************************


NB Reseaux BF 1er Version / Network Number in 1ft version : 12
Dernier ID mis en oeuvre / Last ID implemented : 1869_12
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....
";"********************************************************************************
*                              FB ""CONF_MACHINE""                               *
*                  Gestion base de donnees parametrage machine                 *
*                      Management database machine SETUP                       *
********************************************************************************
(In english further below)
DESCRIPTION
***********
Ce FB permet de rechercher une configuration machine permettant d'animer un
poste de travail à partir d'un mot de référence (diversité) et d'un numéro
d'étape (état du cycle).

Il est utilisé dans le cadre d'installation capacitaire pouvant intégrer un
grand nombre de diversités.
Dans ce cas, il permet d'animer un poste de travail à partir des données de
configurations stockées dans la base de données du poste.

Pour la description detaillee du Bloc Fonctionnel, voir le guide GE03.J2.012.

MISE EN OEUVRE :
****************
INTERFACE ENTRÉE :
Val_trait : Condition de validation du traitement
Iadf      : Information annulation défaut
Ref       : Référence recherché
Etape     : Etape recherché
Tab_param : Table de paramétrage
Tab_sort  : Table des données de sortie
Nbcf      : Nombres de configuration
Nbet      : Nombres d'étape
Lgcf      : Longueur d'une configuration (bytes)

INTERFACE SORTIE :
Fin_trait   : Information fin de traitement
Defaut      : Information de défaut
Diag        : Table de mots de diagnostic
  Def       : Présence défaut
  Ala       : Présence alarme
  NumListe  : Numéro liste de défaut SMP
  CodeDef   : Numéro de défaut
  Nref      : Numéro de référence (en cours)
  Netape    : Numéro d'étape (en cours)






CODES D'ERREUR :
****************
Valeurs de Diag.codedef

DEC   HEXA   DESCRIPTION
1     1      Défaut type de données table de paramétrage
2     2      Défaut dimension table de paramétrage
4     4      Défaut type de données table de sortie
8     8      Défaut dimension table de sortie
16    10     Défaut valeur mots de référence ou numéro d'étape
32    20     Défaut transfert configuration
64    40     Défaut référence inconnue

******************************* ENGLISH INFORMATION ****************************

******************************* _ODIL_ID_ *********************************


NB Reseaux BF 1er Version / Network Number in 1ft version : 12
Dernier ID mis en oeuvre / Last ID implemented : 1869_12
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....
";""
"********************************************************************************
*                              FB ""CODE_PROCESS""                               *
*                  Gestion base de donnees diversitees                         *
*                     Management database diversity                            *
********************************************************************************
(In english further below)
DESCRIPTION
***********

Le nombre d'informations de diversités nécessaires à chaque poste de travail
peut être dans certains cas important (exemple : 50 mots pour définir une
diversité produit)

Ce FB permet d'associer une valeur de référence à une diversité produit pour
chaque poste de travail.
Il est utilisé dans le cadre d'installation capacitaire pouvant intégrer un
grand nombre de diversité.
Il permet également d'associer rapidement à une nouvelle diversité produit une
valeur de référence déjà existante.

Pour la description detaillee du Bloc Fonctionnel, voir le guide GE03.J2.013

MISE EN OEUVRE :
****************
INTERFACE ENTRÉE :
Val_trait     : Condition de validation du traitement
Iadf          : Information annulation défaut
Tab_ent       : Table des données d'entrée (critères à rechercher)
Tab_param     : Table de paramétrage (liste des configurations)
Tab_sort      : Table des données de sortie (codes process trouvé)
Nbse          : Nombres de sous-ensemble
Nbcf          : Nombres de configuration
Lgcf          : Longueur d'une configuration (bytes)

INTERFACE SORTIE :
Fin_trait     : Information fin de traitement
Defaut        : Information de défaut
Diag          : Table de mots de diagnostic
  Def         : Présence défaut
  Alar        : Présence alarme
  NumListe    : Numéro de liste défaut SMP
  CodeSe      : N° sous-ensemble en défaut
  CodeDef     : N° défaut ou d'alarme en décimal




CODES D'ERREUR :
****************
Valeurs de Diag.codedef
Diag.codese : numéro du sous-ensemble avec configuration inconnue.

DEC  HEXA  DESCRIPTION
1    1     Défaut configuration inconnue (voir codese)
2    2     Défaut dimensionnement paramètres d'entrées
4    4     Défaut type de données ""Tab_param""
8    8     Défaut dimension ""Tab_param
16   10    Défaut type de données ""Tab_ent""
32   20    Défaut dimension ""Tab_ent""
64   40    Défaut type de données ""Tab_sort""
128  80    Défaut dimension ""Tab_sort""




******************************* ENGLISH INFORMATION ****************************



******************************* _ODIL_ID_ ***********************************
NB Reseaux BF 1er Version / Network Number in 1ft version : 11
Dernier ID mis en oeuvre / Last ID implemented : 1870_11
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"********************************************************************************
*                              FB ""CODE_PROCESS""                               *
*                  Gestion base de donnees diversitees                         *
*                     Management database diversity                            *
********************************************************************************
(In english further below)
DESCRIPTION
***********

Le nombre d'informations de diversités nécessaires à chaque poste de travail
peut être dans certains cas important (exemple : 50 mots pour définir une
diversité produit)

Ce FB permet d'associer une valeur de référence à une diversité produit pour
chaque poste de travail.
Il est utilisé dans le cadre d'installation capacitaire pouvant intégrer un
grand nombre de diversité.
Il permet également d'associer rapidement à une nouvelle diversité produit une
valeur de référence déjà existante.

Pour la description detaillee du Bloc Fonctionnel, voir le guide GE03.J2.013

MISE EN OEUVRE :
****************
INTERFACE ENTRÉE :
Val_trait     : Condition de validation du traitement
Iadf          : Information annulation défaut
Tab_ent       : Table des données d'entrée (critères à rechercher)
Tab_param     : Table de paramétrage (liste des configurations)
Tab_sort      : Table des données de sortie (codes process trouvé)
Nbse          : Nombres de sous-ensemble
Nbcf          : Nombres de configuration
Lgcf          : Longueur d'une configuration (bytes)

INTERFACE SORTIE :
Fin_trait     : Information fin de traitement
Defaut        : Information de défaut
Diag          : Table de mots de diagnostic
  Def         : Présence défaut
  Alar        : Présence alarme
  NumListe    : Numéro de liste défaut SMP
  CodeSe      : N° sous-ensemble en défaut
  CodeDef     : N° défaut ou d'alarme en décimal




CODES D'ERREUR :
****************
Valeurs de Diag.codedef
Diag.codese : numéro du sous-ensemble avec configuration inconnue.

DEC  HEXA  DESCRIPTION
1    1     Défaut configuration inconnue (voir codese)
2    2     Défaut dimensionnement paramètres d'entrées
4    4     Défaut type de données ""Tab_param""
8    8     Défaut dimension ""Tab_param
16   10    Défaut type de données ""Tab_ent""
32   20    Défaut dimension ""Tab_ent""
64   40    Défaut type de données ""Tab_sort""
128  80    Défaut dimension ""Tab_sort""




******************************* ENGLISH INFORMATION ****************************



******************************* _ODIL_ID_ ***********************************
NB Reseaux BF 1er Version / Network Number in 1ft version : 11
Dernier ID mis en oeuvre / Last ID implemented : 1870_11
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"********************************************************************************
*                              FB ""CODE_PROCESS""                               *
*                  Gestion base de donnees diversitees                         *
*                     Management database diversity                            *
********************************************************************************
(In english further below)
DESCRIPTION
***********

Le nombre d'informations de diversités nécessaires à chaque poste de travail
peut être dans certains cas important (exemple : 50 mots pour définir une
diversité produit)

Ce FB permet d'associer une valeur de référence à une diversité produit pour
chaque poste de travail.
Il est utilisé dans le cadre d'installation capacitaire pouvant intégrer un
grand nombre de diversité.
Il permet également d'associer rapidement à une nouvelle diversité produit une
valeur de référence déjà existante.

Pour la description detaillee du Bloc Fonctionnel, voir le guide GE03.J2.013

MISE EN OEUVRE :
****************
INTERFACE ENTRÉE :
Val_trait     : Condition de validation du traitement
Iadf          : Information annulation défaut
Tab_ent       : Table des données d'entrée (critères à rechercher)
Tab_param     : Table de paramétrage (liste des configurations)
Tab_sort      : Table des données de sortie (codes process trouvé)
Nbse          : Nombres de sous-ensemble
Nbcf          : Nombres de configuration
Lgcf          : Longueur d'une configuration (bytes)

INTERFACE SORTIE :
Fin_trait     : Information fin de traitement
Defaut        : Information de défaut
Diag          : Table de mots de diagnostic
  Def         : Présence défaut
  Alar        : Présence alarme
  NumListe    : Numéro de liste défaut SMP
  CodeSe      : N° sous-ensemble en défaut
  CodeDef     : N° défaut ou d'alarme en décimal




CODES D'ERREUR :
****************
Valeurs de Diag.codedef
Diag.codese : numéro du sous-ensemble avec configuration inconnue.

DEC  HEXA  DESCRIPTION
1    1     Défaut configuration inconnue (voir codese)
2    2     Défaut dimensionnement paramètres d'entrées
4    4     Défaut type de données ""Tab_param""
8    8     Défaut dimension ""Tab_param
16   10    Défaut type de données ""Tab_ent""
32   20    Défaut dimension ""Tab_ent""
64   40    Défaut type de données ""Tab_sort""
128  80    Défaut dimension ""Tab_sort""




******************************* ENGLISH INFORMATION ****************************



******************************* _ODIL_ID_ ***********************************
NB Reseaux BF 1er Version / Network Number in 1ft version : 11
Dernier ID mis en oeuvre / Last ID implemented : 1870_11
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";""
"**********************************************************************
*                           BF_IHMCAME_ROBOT1                        *
**********************************************************************
English version further below

DESCRIPTION:
************
Ce FB sert a mettre a disposition d'IHMP les informations de defaut du
BFS_CAME_ROBOT1

Il permet d'afficher un defaut concernant la discordance entre l'etat du
controle came et l'etat attendu.

Il doit etre appele pour chaque instance de la BFS CAME_ROBOT1

Parametres d'entree:
Def_maj: Defaut majeur
x: doit etre renseigne avec le bit x de l'instance du FB a surveiller.
Exemple ""ITSZ1_SOPR"".R1CAME.x

Parametres de sortie:
Def: Signale un defaut

Diag:
   CodeDef: Code de defaut
      0 - Pas de defaut
      1 - Defaut: Came a 0 et controle came (etat attendu) a 1
      2 - Defaut: Came a 1 et controle came (etat attendu) a 0

*************************English Information*******************************
Description

This FB serves for giving to IHMP the information of fault of the FB
BFS_CAME_ROBOT1

It allows to display a fault concerning the discrepancy between the check of
the
cam monitoring and expected state.

It must be called for each instance of the BFS_CAME_ROBOT1

Parameters of input:
Def_maj: Major fault
X: Must be informed with the bit x of the instance of the FB to watch.
Example ""ITSZ1_SOPR"".R1CAME.x

Parameters of output:
Def: indicate a fault

Diag:
   CodeDef: Fault code
        0 - No fault
        1 - Fault: Cam input at 0 and cam check (expected state) at 1
        2 - Fault: Cam input at 1 and cam check (expected state) at 0

******************************* _ODIL_ID_***********************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 6
Dernier ID mis en oeuvre / Last ID implemented : 1875_6
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"**********************************************************************
*                           BF_IHMCAME_ROBOT1                        *
**********************************************************************
English version further below

DESCRIPTION:
************
Ce FB sert a mettre a disposition d'IHMP les informations de defaut du
BFS_CAME_ROBOT1

Il permet d'afficher un defaut concernant la discordance entre l'etat du
controle came et l'etat attendu.

Il doit etre appele pour chaque instance de la BFS CAME_ROBOT1

Parametres d'entree:
Def_maj: Defaut majeur
x: doit etre renseigne avec le bit x de l'instance du FB a surveiller.
Exemple ""ITSZ1_SOPR"".R1CAME.x

Parametres de sortie:
Def: Signale un defaut

Diag:
   CodeDef: Code de defaut
      0 - Pas de defaut
      1 - Defaut: Came a 0 et controle came (etat attendu) a 1
      2 - Defaut: Came a 1 et controle came (etat attendu) a 0

*************************English Information*******************************
Description

This FB serves for giving to IHMP the information of fault of the FB
BFS_CAME_ROBOT1

It allows to display a fault concerning the discrepancy between the check of
the
cam monitoring and expected state.

It must be called for each instance of the BFS_CAME_ROBOT1

Parameters of input:
Def_maj: Major fault
X: Must be informed with the bit x of the instance of the FB to watch.
Example ""ITSZ1_SOPR"".R1CAME.x

Parameters of output:
Def: indicate a fault

Diag:
   CodeDef: Fault code
        0 - No fault
        1 - Fault: Cam input at 0 and cam check (expected state) at 1
        2 - Fault: Cam input at 1 and cam check (expected state) at 0

******************************* _ODIL_ID_***********************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 6
Dernier ID mis en oeuvre / Last ID implemented : 1875_6
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"**********************************************************************
*                           BF_IHMCAME_ROBOT1                        *
**********************************************************************
English version further below

DESCRIPTION:
************
Ce FB sert a mettre a disposition d'IHMP les informations de defaut du
BFS_CAME_ROBOT1

Il permet d'afficher un defaut concernant la discordance entre l'etat du
controle came et l'etat attendu.

Il doit etre appele pour chaque instance de la BFS CAME_ROBOT1

Parametres d'entree:
Def_maj: Defaut majeur
x: doit etre renseigne avec le bit x de l'instance du FB a surveiller.
Exemple ""ITSZ1_SOPR"".R1CAME.x

Parametres de sortie:
Def: Signale un defaut

Diag:
   CodeDef: Code de defaut
      0 - Pas de defaut
      1 - Defaut: Came a 0 et controle came (etat attendu) a 1
      2 - Defaut: Came a 1 et controle came (etat attendu) a 0

*************************English Information*******************************
Description

This FB serves for giving to IHMP the information of fault of the FB
BFS_CAME_ROBOT1

It allows to display a fault concerning the discrepancy between the check of
the
cam monitoring and expected state.

It must be called for each instance of the BFS_CAME_ROBOT1

Parameters of input:
Def_maj: Major fault
X: Must be informed with the bit x of the instance of the FB to watch.
Example ""ITSZ1_SOPR"".R1CAME.x

Parameters of output:
Def: indicate a fault

Diag:
   CodeDef: Fault code
        0 - No fault
        1 - Fault: Cam input at 0 and cam check (expected state) at 1
        2 - Fault: Cam input at 1 and cam check (expected state) at 0

******************************* _ODIL_ID_***********************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 6
Dernier ID mis en oeuvre / Last ID implemented : 1875_6
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";""
"**********************************************************************
*                           BF_IHMCR1                                *
**********************************************************************

(in english further below)

DESCRIPTION:
************
Ce FB met a disposition de l'IHM les informations issues des FB BFS_BSEC1,
BFS_BSECTR1 ou BFS_CR1.
Il permet d'afficher un defaut relatif a la discordance entre la
commande et l'etat d'un element d'une boucle de securite (contacteur, relais,
tension ou relais F-RO).

Il doit etre appele pour chacun des composants des boucles de
securite (AU,ES,ESTR,FZ,RLV,SOP,SOPR) fournissant un retour.

Parametres d'entree:
Typ: 1 - Retour 24V
     2 - Retour Contacteur ou Relais
     3 - Retour FRO

Def_Maj: Defaut majeur

x: doit etre renseigne avec le bit x de l'instance du FB a surveiller.
Exemple ""ITSZ1_AU_ES_FZ"".Z1AU.x

CSecu: doit etre renseigne avec le retour a surveiller.

Parametres de sortie:
Def: Signale que le composant surveille est la cause du defaut ou de l'alarme
detecte sur la boucle de securite.

Diag:
   CodeDef: Code de defaut
      0 - Pas de defaut
      1 - Erreur de parametrage
      2 - Defaut: pas de pilotage et retour (24V)
      4 - Alarme: pilotage et pas de retour (24V)
      8 - Defaut: pas de pilotage et retour (Contacteur)
     16 - Alarme: pilotage et pas de retour (Contacteur)
     32 - Defaut: pas de pilotage et retour (FRO)
     64 - Alarme: pilotage et pas de retour (FRO)

*************************English Information*******************************
Description

This FB serves for giving to IHMP the information of fault of the FB BFS_BSEC1,
BFS_BSECTR1 or BFS_CR1.

It allows to display a fault concerning the discrepancy between the control and
the state of an element of a safety loop (contactor, relay, voltage or relay F-
RO).

It must be called for every of the components of the safety loops
(AU,ES,ESTR,FZ,RLV,SOP,SOPR) supplying a feedback.

Parameters of input:
Typ: 1 - 24V feedback
     2 - Contactor or relay feedback
     3 - FRO feedback

Def_Maj: Major fault

X: Must be informed with the bit x of the instance of the FB to watch.
Example ""ITSZ1_AU_ES_FZ"".Z1AU.x

CSecu: must be informed with feedback to watch.

Parameters of output:
Def: indicate that the watched component is the cause of the fault or the alarm
detected on the safety loop.

Diag:
   CodeDef: Fault code
        0 - No fault
        1 - Error of parameter setting
        2 - Fault: no control and feedback (24V)
        4 - Alarm: control and no feedback (24V)
        8 - Fault: no control and feedback (Contactor)
        16 - Alarm: control and no feedback (Contactor)
        32 - Fault: no control and feedback( FRO)
        64 - Alarm control and no feedback( FRO)

******************************* _ODIL_ID_***********************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 6
Dernier ID mis en oeuvre / Last ID implemented : 1876_6
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"**********************************************************************
*                           BF_IHMCR1                                *
**********************************************************************

(in english further below)

DESCRIPTION:
************
Ce FB met a disposition de l'IHM les informations issues des FB BFS_BSEC1,
BFS_BSECTR1 ou BFS_CR1.
Il permet d'afficher un defaut relatif a la discordance entre la
commande et l'etat d'un element d'une boucle de securite (contacteur, relais,
tension ou relais F-RO).

Il doit etre appele pour chacun des composants des boucles de
securite (AU,ES,ESTR,FZ,RLV,SOP,SOPR) fournissant un retour.

Parametres d'entree:
Typ: 1 - Retour 24V
     2 - Retour Contacteur ou Relais
     3 - Retour FRO

Def_Maj: Defaut majeur

x: doit etre renseigne avec le bit x de l'instance du FB a surveiller.
Exemple ""ITSZ1_AU_ES_FZ"".Z1AU.x

CSecu: doit etre renseigne avec le retour a surveiller.

Parametres de sortie:
Def: Signale que le composant surveille est la cause du defaut ou de l'alarme
detecte sur la boucle de securite.

Diag:
   CodeDef: Code de defaut
      0 - Pas de defaut
      1 - Erreur de parametrage
      2 - Defaut: pas de pilotage et retour (24V)
      4 - Alarme: pilotage et pas de retour (24V)
      8 - Defaut: pas de pilotage et retour (Contacteur)
     16 - Alarme: pilotage et pas de retour (Contacteur)
     32 - Defaut: pas de pilotage et retour (FRO)
     64 - Alarme: pilotage et pas de retour (FRO)

*************************English Information*******************************
Description

This FB serves for giving to IHMP the information of fault of the FB BFS_BSEC1,
BFS_BSECTR1 or BFS_CR1.

It allows to display a fault concerning the discrepancy between the control and
the state of an element of a safety loop (contactor, relay, voltage or relay F-
RO).

It must be called for every of the components of the safety loops
(AU,ES,ESTR,FZ,RLV,SOP,SOPR) supplying a feedback.

Parameters of input:
Typ: 1 - 24V feedback
     2 - Contactor or relay feedback
     3 - FRO feedback

Def_Maj: Major fault

X: Must be informed with the bit x of the instance of the FB to watch.
Example ""ITSZ1_AU_ES_FZ"".Z1AU.x

CSecu: must be informed with feedback to watch.

Parameters of output:
Def: indicate that the watched component is the cause of the fault or the alarm
detected on the safety loop.

Diag:
   CodeDef: Fault code
        0 - No fault
        1 - Error of parameter setting
        2 - Fault: no control and feedback (24V)
        4 - Alarm: control and no feedback (24V)
        8 - Fault: no control and feedback (Contactor)
        16 - Alarm: control and no feedback (Contactor)
        32 - Fault: no control and feedback( FRO)
        64 - Alarm control and no feedback( FRO)

******************************* _ODIL_ID_***********************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 6
Dernier ID mis en oeuvre / Last ID implemented : 1876_6
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"**********************************************************************
*                           BF_IHMCR1                                *
**********************************************************************

(in english further below)

DESCRIPTION:
************
Ce FB met a disposition de l'IHM les informations issues des FB BFS_BSEC1,
BFS_BSECTR1 ou BFS_CR1.
Il permet d'afficher un defaut relatif a la discordance entre la
commande et l'etat d'un element d'une boucle de securite (contacteur, relais,
tension ou relais F-RO).

Il doit etre appele pour chacun des composants des boucles de
securite (AU,ES,ESTR,FZ,RLV,SOP,SOPR) fournissant un retour.

Parametres d'entree:
Typ: 1 - Retour 24V
     2 - Retour Contacteur ou Relais
     3 - Retour FRO

Def_Maj: Defaut majeur

x: doit etre renseigne avec le bit x de l'instance du FB a surveiller.
Exemple ""ITSZ1_AU_ES_FZ"".Z1AU.x

CSecu: doit etre renseigne avec le retour a surveiller.

Parametres de sortie:
Def: Signale que le composant surveille est la cause du defaut ou de l'alarme
detecte sur la boucle de securite.

Diag:
   CodeDef: Code de defaut
      0 - Pas de defaut
      1 - Erreur de parametrage
      2 - Defaut: pas de pilotage et retour (24V)
      4 - Alarme: pilotage et pas de retour (24V)
      8 - Defaut: pas de pilotage et retour (Contacteur)
     16 - Alarme: pilotage et pas de retour (Contacteur)
     32 - Defaut: pas de pilotage et retour (FRO)
     64 - Alarme: pilotage et pas de retour (FRO)

*************************English Information*******************************
Description

This FB serves for giving to IHMP the information of fault of the FB BFS_BSEC1,
BFS_BSECTR1 or BFS_CR1.

It allows to display a fault concerning the discrepancy between the control and
the state of an element of a safety loop (contactor, relay, voltage or relay F-
RO).

It must be called for every of the components of the safety loops
(AU,ES,ESTR,FZ,RLV,SOP,SOPR) supplying a feedback.

Parameters of input:
Typ: 1 - 24V feedback
     2 - Contactor or relay feedback
     3 - FRO feedback

Def_Maj: Major fault

X: Must be informed with the bit x of the instance of the FB to watch.
Example ""ITSZ1_AU_ES_FZ"".Z1AU.x

CSecu: must be informed with feedback to watch.

Parameters of output:
Def: indicate that the watched component is the cause of the fault or the alarm
detected on the safety loop.

Diag:
   CodeDef: Fault code
        0 - No fault
        1 - Error of parameter setting
        2 - Fault: no control and feedback (24V)
        4 - Alarm: control and no feedback (24V)
        8 - Fault: no control and feedback (Contactor)
        16 - Alarm: control and no feedback (Contactor)
        32 - Fault: no control and feedback( FRO)
        64 - Alarm control and no feedback( FRO)

******************************* _ODIL_ID_***********************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 6
Dernier ID mis en oeuvre / Last ID implemented : 1876_6
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";""
"**********************************************************************
*                           BF_IHMCRM1                              *
**********************************************************************
(in english further below)

DESCRIPTION:
************
Ce FB met a disposition de l'IHMP les informations de defaut du FB BFS_CRM1

Il doit être appele pour chaque instance du FB BFS_CRM1

Parametres d'entree:
Def_Maj: Defaut majeur

x: doit etre renseigne avec le bit x de l'instance du FB a surveiller.
Exemple: ""ITS0"".I0CRM.x

Parametres de sortie:
Def: Signale que le composant surveille est la cause du defaut detecte sur la
boucle de securite.

Diag:
   CodeDef: Code de defaut
      0 - Pas de defaut
      1 - Defaut: commande relais et pas de retour
      2 - Defaut: pas de commande relais et retour actif

*************************English Information*******************************
Description

This FB serves for giving to IHMP the information of fault of the FB BFS_CRM1.

It must be called for every instance of the FB BFS_CRM1

Parameters of input:
Def_Maj: Major fault

X: Must be informed with the bit x of the instance of the FB to watch.
Example ""ITS0"".I0CRM.x

Parameters of output:
Def: indicate that the watched component is the cause of the fault detected on
the safety loop.

Diag:
   CodeDef: Fault code
        0 - No fault
        1 - Fault: control relay and no feedback
        2 - Fault: no control relay and activated feedback
NB Reseaux BF 1er Version / Network Number in 1ft version : 5
Dernier ID mis en oeuvre / Last ID implemented : 1877_5
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"**********************************************************************
*                           BF_IHMCRM1                              *
**********************************************************************
(in english further below)

DESCRIPTION:
************
Ce FB met a disposition de l'IHMP les informations de defaut du FB BFS_CRM1

Il doit être appele pour chaque instance du FB BFS_CRM1

Parametres d'entree:
Def_Maj: Defaut majeur

x: doit etre renseigne avec le bit x de l'instance du FB a surveiller.
Exemple: ""ITS0"".I0CRM.x

Parametres de sortie:
Def: Signale que le composant surveille est la cause du defaut detecte sur la
boucle de securite.

Diag:
   CodeDef: Code de defaut
      0 - Pas de defaut
      1 - Defaut: commande relais et pas de retour
      2 - Defaut: pas de commande relais et retour actif

*************************English Information*******************************
Description

This FB serves for giving to IHMP the information of fault of the FB BFS_CRM1.

It must be called for every instance of the FB BFS_CRM1

Parameters of input:
Def_Maj: Major fault

X: Must be informed with the bit x of the instance of the FB to watch.
Example ""ITS0"".I0CRM.x

Parameters of output:
Def: indicate that the watched component is the cause of the fault detected on
the safety loop.

Diag:
   CodeDef: Fault code
        0 - No fault
        1 - Fault: control relay and no feedback
        2 - Fault: no control relay and activated feedback
NB Reseaux BF 1er Version / Network Number in 1ft version : 5
Dernier ID mis en oeuvre / Last ID implemented : 1877_5
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"**********************************************************************
*                           BF_IHMCRM1                              *
**********************************************************************
(in english further below)

DESCRIPTION:
************
Ce FB met a disposition de l'IHMP les informations de defaut du FB BFS_CRM1

Il doit être appele pour chaque instance du FB BFS_CRM1

Parametres d'entree:
Def_Maj: Defaut majeur

x: doit etre renseigne avec le bit x de l'instance du FB a surveiller.
Exemple: ""ITS0"".I0CRM.x

Parametres de sortie:
Def: Signale que le composant surveille est la cause du defaut detecte sur la
boucle de securite.

Diag:
   CodeDef: Code de defaut
      0 - Pas de defaut
      1 - Defaut: commande relais et pas de retour
      2 - Defaut: pas de commande relais et retour actif

*************************English Information*******************************
Description

This FB serves for giving to IHMP the information of fault of the FB BFS_CRM1.

It must be called for every instance of the FB BFS_CRM1

Parameters of input:
Def_Maj: Major fault

X: Must be informed with the bit x of the instance of the FB to watch.
Example ""ITS0"".I0CRM.x

Parameters of output:
Def: indicate that the watched component is the cause of the fault detected on
the safety loop.

Diag:
   CodeDef: Fault code
        0 - No fault
        1 - Fault: control relay and no feedback
        2 - Fault: no control relay and activated feedback
NB Reseaux BF 1er Version / Network Number in 1ft version : 5
Dernier ID mis en oeuvre / Last ID implemented : 1877_5
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";""
"--------------------------------------------------------------------------------
- BF_CABRS
- BarCode Reader
- Lecteur de Code a Barre
--------------------------------------------------------------------------------

Description / Description:
--------------------------
This function Block is used to read BarCodes
A communication module (6ES7 138-4DF01-0AB0) must be configured in the HW
configuration (1SI ASCII 32 Bytes).

Ce Bloc Fonctionnel permet de lire des codes a barre.
Un module de communication (6ES7 138-4DF01-0AB0) dument parametre doit se
trouver dans la configuration materielle (1SI ASCII 32 Bytes).

Programming / Programmation:
----------------------------
This function Block must be called from the OB 1, once per scanning system.
Outputs of the function block are only valid when NDR is set to one.

Ce bloc fonctionnel doit être appele depuis l'OB 1, une fois par système
d'acquisition.
Les sorties du bloc fonctionnel ne sont valides que lorsque NDR est positionné
à un.

Error code / Code d'erreur:
---------------------------
Three types of Error codes can be returned.
Trois types de code d'erreur peuvent etre retournes.


From the SFC 14 (DPRD_DAT):
8090 - Wrong Parameter (ADDR) / Parametre incorrect (ADDR)
80B1 - Error in the HW Configuration / Erreur dans la configuration materielle
80A0 - Access Error / Erreur d'acces au Module

From the module / Depuis le module
02XX - Parameterization error / Erreur de paramétrage
080D - Line break / Cable debranche
0810 - Parity Error / Erreur de Parite
0811 - Frame Error / Erreur de Trame
0850 - Too much data received / Trop de donnees recues (224 Bytes Max)
Error codes are explained in the 1SI Module documentation
Les codes d'erreur sont expliques dans la documentation du module 1SI

From the FB
FF01 - Too few char received / trop peu de caractères recus
FF02 - First char was not STX / le premier octet n'etait pas STX
FF03 - Last char was not ETX / le dernier octet n'etait pas ETX
FF04 - Wrong DATA parameter / Paramètre DATA incorrect (Char or Byte Array)
FF05 - Wrong DATA parameter / Paramètre DATA incorrect (Must be in a DB)
FF06 - DATA too small or Code too long / DATA trop petit ou code trop long

******************************* _ODIL_ID_***********************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 9
Dernier ID mis en oeuvre / Last ID implemented : 1897_9
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"--------------------------------------------------------------------------------
- BF_CABRS
- BarCode Reader
- Lecteur de Code a Barre
--------------------------------------------------------------------------------

Description / Description:
--------------------------
This function Block is used to read BarCodes
A communication module (6ES7 138-4DF01-0AB0) must be configured in the HW
configuration (1SI ASCII 32 Bytes).

Ce Bloc Fonctionnel permet de lire des codes a barre.
Un module de communication (6ES7 138-4DF01-0AB0) dument parametre doit se
trouver dans la configuration materielle (1SI ASCII 32 Bytes).

Programming / Programmation:
----------------------------
This function Block must be called from the OB 1, once per scanning system.
Outputs of the function block are only valid when NDR is set to one.

Ce bloc fonctionnel doit être appele depuis l'OB 1, une fois par système
d'acquisition.
Les sorties du bloc fonctionnel ne sont valides que lorsque NDR est positionné
à un.

Error code / Code d'erreur:
---------------------------
Three types of Error codes can be returned.
Trois types de code d'erreur peuvent etre retournes.


From the SFC 14 (DPRD_DAT):
8090 - Wrong Parameter (ADDR) / Parametre incorrect (ADDR)
80B1 - Error in the HW Configuration / Erreur dans la configuration materielle
80A0 - Access Error / Erreur d'acces au Module

From the module / Depuis le module
02XX - Parameterization error / Erreur de paramétrage
080D - Line break / Cable debranche
0810 - Parity Error / Erreur de Parite
0811 - Frame Error / Erreur de Trame
0850 - Too much data received / Trop de donnees recues (224 Bytes Max)
Error codes are explained in the 1SI Module documentation
Les codes d'erreur sont expliques dans la documentation du module 1SI

From the FB
FF01 - Too few char received / trop peu de caractères recus
FF02 - First char was not STX / le premier octet n'etait pas STX
FF03 - Last char was not ETX / le dernier octet n'etait pas ETX
FF04 - Wrong DATA parameter / Paramètre DATA incorrect (Char or Byte Array)
FF05 - Wrong DATA parameter / Paramètre DATA incorrect (Must be in a DB)
FF06 - DATA too small or Code too long / DATA trop petit ou code trop long

******************************* _ODIL_ID_***********************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 9
Dernier ID mis en oeuvre / Last ID implemented : 1897_9
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"--------------------------------------------------------------------------------
- BF_CABRS
- BarCode Reader
- Lecteur de Code a Barre
--------------------------------------------------------------------------------

Description / Description:
--------------------------
This function Block is used to read BarCodes
A communication module (6ES7 138-4DF01-0AB0) must be configured in the HW
configuration (1SI ASCII 32 Bytes).

Ce Bloc Fonctionnel permet de lire des codes a barre.
Un module de communication (6ES7 138-4DF01-0AB0) dument parametre doit se
trouver dans la configuration materielle (1SI ASCII 32 Bytes).

Programming / Programmation:
----------------------------
This function Block must be called from the OB 1, once per scanning system.
Outputs of the function block are only valid when NDR is set to one.

Ce bloc fonctionnel doit être appele depuis l'OB 1, une fois par système
d'acquisition.
Les sorties du bloc fonctionnel ne sont valides que lorsque NDR est positionné
à un.

Error code / Code d'erreur:
---------------------------
Three types of Error codes can be returned.
Trois types de code d'erreur peuvent etre retournes.


From the SFC 14 (DPRD_DAT):
8090 - Wrong Parameter (ADDR) / Parametre incorrect (ADDR)
80B1 - Error in the HW Configuration / Erreur dans la configuration materielle
80A0 - Access Error / Erreur d'acces au Module

From the module / Depuis le module
02XX - Parameterization error / Erreur de paramétrage
080D - Line break / Cable debranche
0810 - Parity Error / Erreur de Parite
0811 - Frame Error / Erreur de Trame
0850 - Too much data received / Trop de donnees recues (224 Bytes Max)
Error codes are explained in the 1SI Module documentation
Les codes d'erreur sont expliques dans la documentation du module 1SI

From the FB
FF01 - Too few char received / trop peu de caractères recus
FF02 - First char was not STX / le premier octet n'etait pas STX
FF03 - Last char was not ETX / le dernier octet n'etait pas ETX
FF04 - Wrong DATA parameter / Paramètre DATA incorrect (Char or Byte Array)
FF05 - Wrong DATA parameter / Paramètre DATA incorrect (Must be in a DB)
FF06 - DATA too small or Code too long / DATA trop petit ou code trop long

******************************* _ODIL_ID_***********************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 9
Dernier ID mis en oeuvre / Last ID implemented : 1897_9
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";""
"**********************************************************************
*                           BF_IHMPORTE1                             *
**********************************************************************

(in english further below)

DESCRIPTION:
************
Ce FB met a disposition de l'IHM le defaut procedure d'intervention et les
informations issues du FB BFS_PORTE1

Il doit etre appele pour chaque instance du FB BFS_PORTE1

Parametres d'entree:
x: doit etre renseigne avec le bit x de l'instance du FB a surveiller.
Exemple ""ITSZ1_AU_ES_FZ"".Z1PORTE1.x

Parametres de sortie:
Def: Signale un defaut de procedure d'intervention
Diag:
   CodeDef: Code de defaut
        0 - Pas de defaut
        1 - Defaut procedure d'intervention

   Ihmcfp : BOOL ;//Controle fermeture porte
   Ihmcses : BOOL ;//Controle selecteur en service
   Ihmcss : BOOL ;//Controle selecteur de securite
   Ihmmbfp : BOOL ;//Memoire bon fonctionnement portillon

*************************English Information*******************************
Description

This FB serves for giving to IHMP the information of maintenance procedure
fault
and the informations of the FB BFS_PORTE1.

It must be called for every instance of the FB BFS_PORTE1.

Parameters of input:
X: Must be informed with the bit x of the instance of the FB to watch.
Example ""ITSZ1_AU_ES_FZ"".Z1PORTE1.x

Parameters of output:
Def: indicate a maintenance procedure fault
Diag:
   CodeDef: Fault code
        0 - No fault
        1 - Maintenance procedure fault

   Ihmcfp : BOOL ;//Closed gate check
   Ihmcses : BOOL ;//Power On switch check
   Ihmcss : BOOL ;//Safety switch check
   Ihmmbfp : BOOL ;//Memory of good working order of the gate

************************** _ODIL_ID_ *****************************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 2
Dernier ID mis en oeuvre / Last ID implemented : 1930_2
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"**********************************************************************
*                           BF_IHMPORTE1                             *
**********************************************************************

(in english further below)

DESCRIPTION:
************
Ce FB met a disposition de l'IHM le defaut procedure d'intervention et les
informations issues du FB BFS_PORTE1

Il doit etre appele pour chaque instance du FB BFS_PORTE1

Parametres d'entree:
x: doit etre renseigne avec le bit x de l'instance du FB a surveiller.
Exemple ""ITSZ1_AU_ES_FZ"".Z1PORTE1.x

Parametres de sortie:
Def: Signale un defaut de procedure d'intervention
Diag:
   CodeDef: Code de defaut
        0 - Pas de defaut
        1 - Defaut procedure d'intervention

   Ihmcfp : BOOL ;//Controle fermeture porte
   Ihmcses : BOOL ;//Controle selecteur en service
   Ihmcss : BOOL ;//Controle selecteur de securite
   Ihmmbfp : BOOL ;//Memoire bon fonctionnement portillon

*************************English Information*******************************
Description

This FB serves for giving to IHMP the information of maintenance procedure
fault
and the informations of the FB BFS_PORTE1.

It must be called for every instance of the FB BFS_PORTE1.

Parameters of input:
X: Must be informed with the bit x of the instance of the FB to watch.
Example ""ITSZ1_AU_ES_FZ"".Z1PORTE1.x

Parameters of output:
Def: indicate a maintenance procedure fault
Diag:
   CodeDef: Fault code
        0 - No fault
        1 - Maintenance procedure fault

   Ihmcfp : BOOL ;//Closed gate check
   Ihmcses : BOOL ;//Power On switch check
   Ihmcss : BOOL ;//Safety switch check
   Ihmmbfp : BOOL ;//Memory of good working order of the gate

************************** _ODIL_ID_ *****************************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 2
Dernier ID mis en oeuvre / Last ID implemented : 1930_2
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"**********************************************************************
*                           BF_IHMPORTE1                             *
**********************************************************************

(in english further below)

DESCRIPTION:
************
Ce FB met a disposition de l'IHM le defaut procedure d'intervention et les
informations issues du FB BFS_PORTE1

Il doit etre appele pour chaque instance du FB BFS_PORTE1

Parametres d'entree:
x: doit etre renseigne avec le bit x de l'instance du FB a surveiller.
Exemple ""ITSZ1_AU_ES_FZ"".Z1PORTE1.x

Parametres de sortie:
Def: Signale un defaut de procedure d'intervention
Diag:
   CodeDef: Code de defaut
        0 - Pas de defaut
        1 - Defaut procedure d'intervention

   Ihmcfp : BOOL ;//Controle fermeture porte
   Ihmcses : BOOL ;//Controle selecteur en service
   Ihmcss : BOOL ;//Controle selecteur de securite
   Ihmmbfp : BOOL ;//Memoire bon fonctionnement portillon

*************************English Information*******************************
Description

This FB serves for giving to IHMP the information of maintenance procedure
fault
and the informations of the FB BFS_PORTE1.

It must be called for every instance of the FB BFS_PORTE1.

Parameters of input:
X: Must be informed with the bit x of the instance of the FB to watch.
Example ""ITSZ1_AU_ES_FZ"".Z1PORTE1.x

Parameters of output:
Def: indicate a maintenance procedure fault
Diag:
   CodeDef: Fault code
        0 - No fault
        1 - Maintenance procedure fault

   Ihmcfp : BOOL ;//Closed gate check
   Ihmcses : BOOL ;//Power On switch check
   Ihmcss : BOOL ;//Safety switch check
   Ihmmbfp : BOOL ;//Memory of good working order of the gate

************************** _ODIL_ID_ *****************************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 2
Dernier ID mis en oeuvre / Last ID implemented : 1930_2
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";""
"**********************************************************************
*                           BF_IHMAIR1                              *
**********************************************************************
(in english further below)

DESCRIPTION:
************
Ce FB met a disposition de l'IHM les informations issues du FB
BFS_AIR1

Il doit etre appele pour chaque instance du FB BFS_AIR1

Parametres d'entree:
x: doit etre renseigne avec le bit x de l'instance du FB a surveiller.
Exemple ""ITSZ1_AU_ES_FZ"".Z1AIR.x

Parametres de sortie:
Def: Signale un défaut

Diag:
   CodeDef: Code de defaut
      0 - Pas de defaut
      1 - Defaut: commande EV7b et pas retour Cp7b
      2 - Defaut: perte du Cp7b alors qu'EV7b toujours commande
      4 - Defaut: pas de commande EV7b et retour Cp7b

*************************English Information*******************************
Description

This FB serves for giving to IHMP the information of fault of the FB BFS_AIR1.

It must be called for every instance of the BFS_AIR1

Parameters of input:
X: Must be informed with the bit x of the instance of the FB to watch.
Example ""ITSZ1_AU_ES_FZ"".Z1AIR.x

Parameters of output:
Def: indicate a fault

Diag:
   CodeDef: Fault code
        0 - No fault
        1 - Fault: control of the EV7b and no CP7b
        2 - Fault: deactivation of the Cp7b although the EV7b is always
controlled
        4 - Fault: no control of the EV7b and Cp7b feedback

************************** _ODIL_ID_ *****************************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 2
Dernier ID mis en oeuvre / Last ID implemented : 1931_2
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"**********************************************************************
*                           BF_IHMAIR1                              *
**********************************************************************
(in english further below)

DESCRIPTION:
************
Ce FB met a disposition de l'IHM les informations issues du FB
BFS_AIR1

Il doit etre appele pour chaque instance du FB BFS_AIR1

Parametres d'entree:
x: doit etre renseigne avec le bit x de l'instance du FB a surveiller.
Exemple ""ITSZ1_AU_ES_FZ"".Z1AIR.x

Parametres de sortie:
Def: Signale un défaut

Diag:
   CodeDef: Code de defaut
      0 - Pas de defaut
      1 - Defaut: commande EV7b et pas retour Cp7b
      2 - Defaut: perte du Cp7b alors qu'EV7b toujours commande
      4 - Defaut: pas de commande EV7b et retour Cp7b

*************************English Information*******************************
Description

This FB serves for giving to IHMP the information of fault of the FB BFS_AIR1.

It must be called for every instance of the BFS_AIR1

Parameters of input:
X: Must be informed with the bit x of the instance of the FB to watch.
Example ""ITSZ1_AU_ES_FZ"".Z1AIR.x

Parameters of output:
Def: indicate a fault

Diag:
   CodeDef: Fault code
        0 - No fault
        1 - Fault: control of the EV7b and no CP7b
        2 - Fault: deactivation of the Cp7b although the EV7b is always
controlled
        4 - Fault: no control of the EV7b and Cp7b feedback

************************** _ODIL_ID_ *****************************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 2
Dernier ID mis en oeuvre / Last ID implemented : 1931_2
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"**********************************************************************
*                           BF_IHMAIR1                              *
**********************************************************************
(in english further below)

DESCRIPTION:
************
Ce FB met a disposition de l'IHM les informations issues du FB
BFS_AIR1

Il doit etre appele pour chaque instance du FB BFS_AIR1

Parametres d'entree:
x: doit etre renseigne avec le bit x de l'instance du FB a surveiller.
Exemple ""ITSZ1_AU_ES_FZ"".Z1AIR.x

Parametres de sortie:
Def: Signale un défaut

Diag:
   CodeDef: Code de defaut
      0 - Pas de defaut
      1 - Defaut: commande EV7b et pas retour Cp7b
      2 - Defaut: perte du Cp7b alors qu'EV7b toujours commande
      4 - Defaut: pas de commande EV7b et retour Cp7b

*************************English Information*******************************
Description

This FB serves for giving to IHMP the information of fault of the FB BFS_AIR1.

It must be called for every instance of the BFS_AIR1

Parameters of input:
X: Must be informed with the bit x of the instance of the FB to watch.
Example ""ITSZ1_AU_ES_FZ"".Z1AIR.x

Parameters of output:
Def: indicate a fault

Diag:
   CodeDef: Fault code
        0 - No fault
        1 - Fault: control of the EV7b and no CP7b
        2 - Fault: deactivation of the Cp7b although the EV7b is always
controlled
        4 - Fault: no control of the EV7b and Cp7b feedback

************************** _ODIL_ID_ *****************************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 2
Dernier ID mis en oeuvre / Last ID implemented : 1931_2
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";""
"****************************************************************************
*                           BF ZONE_MODES_IHM1 (SAFETY_V2)                  *

*     ASSURE LA GESTION DES MODES MARCHE ET DE FONCTIONNEMENT D UNE ZONE    *
*                           Sans UDT Lien_sec                               *
*     ZONE OPERATING AND RUNNING MODES MANAGEMENT Without ""Lien_sec"" UDT    *
****************************************************************************
(in English further below)

DESCRIPTION:
******************
LA BF ASSURE POUR LE TRAITEMENT D'UNE ZONE :

- LA CREATION DU MODE MANUEL ZONE
- LA CREATION DES MODES PAS A PAS ET ORIGINE DE CYCLE
- LE CONTROLE DE LA COMMUNICATION AVEC LES PUPITRES IHM
- LA DOCUMENTATON DU MOT LIEN_PUP UTILISE PAR LES FB MOUVEMENT (EX: MOUV2P)
POUR LA DESCRIPTION DETAILLEE DE LA FB : VOIR GUIDE GE03FP274

MISE EN OEUVRE :
***************
La BF peut gerer les 4 types de pupitre MOP,SOP,LOP,DLOP avec 1 BF Par zone.
Limites pour Ilot avec MOP et SOP: 4 pupitres par Zone (MOP Compris)maxi 9 zones
Limite pour Ilot avec LOP et DLOP: 1 pupitre par Zone (LOP ou DLOP)maxi 2 zones

1) Blocs associees :
-------------------
 UDT 1998 "" lien_pup "", UDT 2004  "" lien Ilot ""

2) Utilisations des commandes :
------------------------------
Les informations entre les ecrans IHM ( IHMP+ ou Wincc)et le Bloc sont assurees
par l'entree Pilot et la sortie Diag.
Pour assurer la mise en uvre automatique entre le programme API et Les ecrans
les Noms d'instances du bloc doit suivre la regle suivante :
<Z><Numero de zone><MODES>
(Exemple : Z1MODES pour traitement des modes et pupitres de la Zone 1)

Le Bloc doit obligatoirement être deposer dans les FB$00 (avec $ = au numero de
la zone de 1 à 9)
A ce FB doit être associe un DB d'instance DB$00 (avec $ = au numero de la zone
de 1 à 9)
Le nom symbolique du DB D'instance du FB$00 doit suivre la regle suivante :
<Z><Numero de zone>
(Exemple : Z1 pour le DB100 de la Zone 1)

Suivant le type de composant gere dans la zone les informations peuvent venir
ou
être à destination soit :
- d'unite de commande diametre 22 ( BP, selecteur, BPL, Voyant) = MOP, LOP, DLOP
ou bien
- de bouton ou voyant logiciel sur une IHM

3) Forcage des modes de fonctionnement via programme :
------------------------------------------------------
L'entree ""Prog_selmdf"" permet de forcer les modes de fonctionnement avec les
valeurs suivantes :
1 = Normale
2 = Vidage
3 = Arret prehension vide
8 = Retour en origine de cycle
16 = Mode pas à pas

En positionnant l'entree à une de ces valeurs le mode de pilotage sur l'ihm est
charge à la valeur de Prog_selmdf.

Le mode de fonctionnement ne peut être modifie via l'Ihm temps qu'une valeur
connue est positionne en entre de Boite sur Prog_selmdf.

Au niveau du programme il faut donc utiliser les sorties de la BF correspondant
Z_mnorm, Z_mvid , Z_mapv, Z_mroc, et Z_mpap pour conditionner la mise à zero de
l'entree prog_selmdf dans la section programme forçant la demande

CODE DE DEFAUT/ALARME :
**********************
Valeur de Diag.codedef :
1   : Attente validation mode de marche
2   : Basculer le commutateur pup 1 sur AUTO
4   : Basculer le commutateur pup 2 sur AUTO
8   : Basculer le commutateur pup 3 sur AUTO
16  : Basculer le commutateur pup 4 sur AUTO
32  : Zone en Mode special
64  : Appuyer sur le bouton marche cycle
128: Blocage zone pour documentation de l'arrêt- apres documentation de l'arrêt
appuyer sur rearmement
256 : Arrêt zone suite a non engagement de la zone apres selection engagement
zone appuyer sur le bouton rearmement





*************************ENGLISH INFORMATION ***************************

DESCRIPTION
******************

THE BF MANAGES FOR THE ZONE :

- CREATION OF ZONE MANUAL MODE
- CREATION OF STEP BY STEP MODE, HOME POSITION MODE
- COMMUNICATION CONTROL WITH HMI OPERATOR PANELS
- MODIFICATION OF THE LIEN_PUP UDT THAT IS USED BY MOVEMENT FBs (Ex: MOUV2P)
FOR DETAILED DESCRIPTION, SEE FB GUIDE GE03FP274

OPERATING :
***********
The BF can manage the four types of panels,MOP,SOP,LOP,DLOP with 1 BF by zone
Limit for 1 facility with MOP and SOP: 4panels per zone(Mop including)9zones max
limit for 1 facility with LOP and DLOP : 1panel per zone (LOP or DLOP)2zones max

1)Associated blocks:
-------------------
 UDT 1998 ""Lien_pup"", UDT 2004 ""lien Ilot""

2) Using for order :
------------------
The information exchanged between the HMI screens (IHMP+ or Wincc) and the
Block
are carried out by the Pilot input and the Diag output.
To allow automatic implementation between the PLC program and the screens,
the block instance names must observe the following rule:
<Z><Zone number><MODES>
(Example: Z1MODES for processing the modes and panels in Zone 1)

The Block (BF) must be deposited in the FB$00 ($ = the number of the zone from
1
to 9)
An instance DB DB$00 (where $ = the number of the zone from 1 to 9) must be
associated with this FB
The symbolic name of the FB$00 instance DB must observe the following rule:
<Z><Zone number>
(Example: Z1 for Zone 1's DB100)

Depending on the type of components managed in the zone, the information can be
incoming or outgoing either:
- from the 22 mm diameter control unit (push button, selector, illuminated push
button, Lamp) = MOP, LOP, DLOP
or
-from software buttons or lamps on a touch screen HMI  = SOP, LOP or DLOP

3)Forcing of operating modes by program :
----------------------------------------
The input ""Prog_selmdf"" can be used to force the following operating modes
with values:
1 = Normal
2 = Emptying
4 = Empty Gripper Stop
8 = Back to home position
16 = step by step
By positioning the input on one of these values, the control mode on the Hmi is
loaded with the value Prog_selmdf.

The operating mode cannot be modified via the Hmi until a known value is
positioned on Prog_selmdf on the Unit input.

On the program it is therefore necessary to use the outputs of the
corresponding
FB Z_mnorm, Z_mvid , Z_mapv, Z_mroc, and Z_mpap as a condition for the
resetting
the input Prog_selmdf to zero in the program section forcing the request

ALARM / FAULT CODE :
********************
Diag.codedef values :
1   : Waiting for Running mode Validation
2   : Switch panel 1 selector to AUTO
4   : Switch panel 2 selector to AUTO
8   : Switch panel 3 selector to AUTO
16  : Switch panel 4 selector to AUTO
32  : Zone in Special Mode
64  : Push Cycle start button
128: Zone hold because stop log must be filled in - after filling the stop
log in, push control on or cycle start button
256 : Zone is stopped because SMP is not in service. after selecting ""zone SMP
in service"", push control on or cycle start button

********************************** _ODIL_ID_ **********************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 94
Dernier ID mis en oeuvre / Last ID implemented : 1932_94
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"****************************************************************************
*                           BF ZONE_MODES_IHM1 (SAFETY_V2)                  *

*     ASSURE LA GESTION DES MODES MARCHE ET DE FONCTIONNEMENT D UNE ZONE    *
*                           Sans UDT Lien_sec                               *
*     ZONE OPERATING AND RUNNING MODES MANAGEMENT Without ""Lien_sec"" UDT    *
****************************************************************************
(in English further below)

DESCRIPTION:
******************
LA BF ASSURE POUR LE TRAITEMENT D'UNE ZONE :

- LA CREATION DU MODE MANUEL ZONE
- LA CREATION DES MODES PAS A PAS ET ORIGINE DE CYCLE
- LE CONTROLE DE LA COMMUNICATION AVEC LES PUPITRES IHM
- LA DOCUMENTATON DU MOT LIEN_PUP UTILISE PAR LES FB MOUVEMENT (EX: MOUV2P)
POUR LA DESCRIPTION DETAILLEE DE LA FB : VOIR GUIDE GE03FP274

MISE EN OEUVRE :
***************
La BF peut gerer les 4 types de pupitre MOP,SOP,LOP,DLOP avec 1 BF Par zone.
Limites pour Ilot avec MOP et SOP: 4 pupitres par Zone (MOP Compris)maxi 9 zones
Limite pour Ilot avec LOP et DLOP: 1 pupitre par Zone (LOP ou DLOP)maxi 2 zones

1) Blocs associees :
-------------------
 UDT 1998 "" lien_pup "", UDT 2004  "" lien Ilot ""

2) Utilisations des commandes :
------------------------------
Les informations entre les ecrans IHM ( IHMP+ ou Wincc)et le Bloc sont assurees
par l'entree Pilot et la sortie Diag.
Pour assurer la mise en uvre automatique entre le programme API et Les ecrans
les Noms d'instances du bloc doit suivre la regle suivante :
<Z><Numero de zone><MODES>
(Exemple : Z1MODES pour traitement des modes et pupitres de la Zone 1)

Le Bloc doit obligatoirement être deposer dans les FB$00 (avec $ = au numero de
la zone de 1 à 9)
A ce FB doit être associe un DB d'instance DB$00 (avec $ = au numero de la zone
de 1 à 9)
Le nom symbolique du DB D'instance du FB$00 doit suivre la regle suivante :
<Z><Numero de zone>
(Exemple : Z1 pour le DB100 de la Zone 1)

Suivant le type de composant gere dans la zone les informations peuvent venir
ou
être à destination soit :
- d'unite de commande diametre 22 ( BP, selecteur, BPL, Voyant) = MOP, LOP, DLOP
ou bien
- de bouton ou voyant logiciel sur une IHM

3) Forcage des modes de fonctionnement via programme :
------------------------------------------------------
L'entree ""Prog_selmdf"" permet de forcer les modes de fonctionnement avec les
valeurs suivantes :
1 = Normale
2 = Vidage
3 = Arret prehension vide
8 = Retour en origine de cycle
16 = Mode pas à pas

En positionnant l'entree à une de ces valeurs le mode de pilotage sur l'ihm est
charge à la valeur de Prog_selmdf.

Le mode de fonctionnement ne peut être modifie via l'Ihm temps qu'une valeur
connue est positionne en entre de Boite sur Prog_selmdf.

Au niveau du programme il faut donc utiliser les sorties de la BF correspondant
Z_mnorm, Z_mvid , Z_mapv, Z_mroc, et Z_mpap pour conditionner la mise à zero de
l'entree prog_selmdf dans la section programme forçant la demande

CODE DE DEFAUT/ALARME :
**********************
Valeur de Diag.codedef :
1   : Attente validation mode de marche
2   : Basculer le commutateur pup 1 sur AUTO
4   : Basculer le commutateur pup 2 sur AUTO
8   : Basculer le commutateur pup 3 sur AUTO
16  : Basculer le commutateur pup 4 sur AUTO
32  : Zone en Mode special
64  : Appuyer sur le bouton marche cycle
128: Blocage zone pour documentation de l'arrêt- apres documentation de l'arrêt
appuyer sur rearmement
256 : Arrêt zone suite a non engagement de la zone apres selection engagement
zone appuyer sur le bouton rearmement





*************************ENGLISH INFORMATION ***************************

DESCRIPTION
******************

THE BF MANAGES FOR THE ZONE :

- CREATION OF ZONE MANUAL MODE
- CREATION OF STEP BY STEP MODE, HOME POSITION MODE
- COMMUNICATION CONTROL WITH HMI OPERATOR PANELS
- MODIFICATION OF THE LIEN_PUP UDT THAT IS USED BY MOVEMENT FBs (Ex: MOUV2P)
FOR DETAILED DESCRIPTION, SEE FB GUIDE GE03FP274

OPERATING :
***********
The BF can manage the four types of panels,MOP,SOP,LOP,DLOP with 1 BF by zone
Limit for 1 facility with MOP and SOP: 4panels per zone(Mop including)9zones max
limit for 1 facility with LOP and DLOP : 1panel per zone (LOP or DLOP)2zones max

1)Associated blocks:
-------------------
 UDT 1998 ""Lien_pup"", UDT 2004 ""lien Ilot""

2) Using for order :
------------------
The information exchanged between the HMI screens (IHMP+ or Wincc) and the
Block
are carried out by the Pilot input and the Diag output.
To allow automatic implementation between the PLC program and the screens,
the block instance names must observe the following rule:
<Z><Zone number><MODES>
(Example: Z1MODES for processing the modes and panels in Zone 1)

The Block (BF) must be deposited in the FB$00 ($ = the number of the zone from
1
to 9)
An instance DB DB$00 (where $ = the number of the zone from 1 to 9) must be
associated with this FB
The symbolic name of the FB$00 instance DB must observe the following rule:
<Z><Zone number>
(Example: Z1 for Zone 1's DB100)

Depending on the type of components managed in the zone, the information can be
incoming or outgoing either:
- from the 22 mm diameter control unit (push button, selector, illuminated push
button, Lamp) = MOP, LOP, DLOP
or
-from software buttons or lamps on a touch screen HMI  = SOP, LOP or DLOP

3)Forcing of operating modes by program :
----------------------------------------
The input ""Prog_selmdf"" can be used to force the following operating modes
with values:
1 = Normal
2 = Emptying
4 = Empty Gripper Stop
8 = Back to home position
16 = step by step
By positioning the input on one of these values, the control mode on the Hmi is
loaded with the value Prog_selmdf.

The operating mode cannot be modified via the Hmi until a known value is
positioned on Prog_selmdf on the Unit input.

On the program it is therefore necessary to use the outputs of the
corresponding
FB Z_mnorm, Z_mvid , Z_mapv, Z_mroc, and Z_mpap as a condition for the
resetting
the input Prog_selmdf to zero in the program section forcing the request

ALARM / FAULT CODE :
********************
Diag.codedef values :
1   : Waiting for Running mode Validation
2   : Switch panel 1 selector to AUTO
4   : Switch panel 2 selector to AUTO
8   : Switch panel 3 selector to AUTO
16  : Switch panel 4 selector to AUTO
32  : Zone in Special Mode
64  : Push Cycle start button
128: Zone hold because stop log must be filled in - after filling the stop
log in, push control on or cycle start button
256 : Zone is stopped because SMP is not in service. after selecting ""zone SMP
in service"", push control on or cycle start button

********************************** _ODIL_ID_ **********************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 94
Dernier ID mis en oeuvre / Last ID implemented : 1932_94
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"****************************************************************************
*                           BF ZONE_MODES_IHM1 (SAFETY_V2)                  *

*     ASSURE LA GESTION DES MODES MARCHE ET DE FONCTIONNEMENT D UNE ZONE    *
*                           Sans UDT Lien_sec                               *
*     ZONE OPERATING AND RUNNING MODES MANAGEMENT Without ""Lien_sec"" UDT    *
****************************************************************************
(in English further below)

DESCRIPTION:
******************
LA BF ASSURE POUR LE TRAITEMENT D'UNE ZONE :

- LA CREATION DU MODE MANUEL ZONE
- LA CREATION DES MODES PAS A PAS ET ORIGINE DE CYCLE
- LE CONTROLE DE LA COMMUNICATION AVEC LES PUPITRES IHM
- LA DOCUMENTATON DU MOT LIEN_PUP UTILISE PAR LES FB MOUVEMENT (EX: MOUV2P)
POUR LA DESCRIPTION DETAILLEE DE LA FB : VOIR GUIDE GE03FP274

MISE EN OEUVRE :
***************
La BF peut gerer les 4 types de pupitre MOP,SOP,LOP,DLOP avec 1 BF Par zone.
Limites pour Ilot avec MOP et SOP: 4 pupitres par Zone (MOP Compris)maxi 9 zones
Limite pour Ilot avec LOP et DLOP: 1 pupitre par Zone (LOP ou DLOP)maxi 2 zones

1) Blocs associees :
-------------------
 UDT 1998 "" lien_pup "", UDT 2004  "" lien Ilot ""

2) Utilisations des commandes :
------------------------------
Les informations entre les ecrans IHM ( IHMP+ ou Wincc)et le Bloc sont assurees
par l'entree Pilot et la sortie Diag.
Pour assurer la mise en uvre automatique entre le programme API et Les ecrans
les Noms d'instances du bloc doit suivre la regle suivante :
<Z><Numero de zone><MODES>
(Exemple : Z1MODES pour traitement des modes et pupitres de la Zone 1)

Le Bloc doit obligatoirement être deposer dans les FB$00 (avec $ = au numero de
la zone de 1 à 9)
A ce FB doit être associe un DB d'instance DB$00 (avec $ = au numero de la zone
de 1 à 9)
Le nom symbolique du DB D'instance du FB$00 doit suivre la regle suivante :
<Z><Numero de zone>
(Exemple : Z1 pour le DB100 de la Zone 1)

Suivant le type de composant gere dans la zone les informations peuvent venir
ou
être à destination soit :
- d'unite de commande diametre 22 ( BP, selecteur, BPL, Voyant) = MOP, LOP, DLOP
ou bien
- de bouton ou voyant logiciel sur une IHM

3) Forcage des modes de fonctionnement via programme :
------------------------------------------------------
L'entree ""Prog_selmdf"" permet de forcer les modes de fonctionnement avec les
valeurs suivantes :
1 = Normale
2 = Vidage
3 = Arret prehension vide
8 = Retour en origine de cycle
16 = Mode pas à pas

En positionnant l'entree à une de ces valeurs le mode de pilotage sur l'ihm est
charge à la valeur de Prog_selmdf.

Le mode de fonctionnement ne peut être modifie via l'Ihm temps qu'une valeur
connue est positionne en entre de Boite sur Prog_selmdf.

Au niveau du programme il faut donc utiliser les sorties de la BF correspondant
Z_mnorm, Z_mvid , Z_mapv, Z_mroc, et Z_mpap pour conditionner la mise à zero de
l'entree prog_selmdf dans la section programme forçant la demande

CODE DE DEFAUT/ALARME :
**********************
Valeur de Diag.codedef :
1   : Attente validation mode de marche
2   : Basculer le commutateur pup 1 sur AUTO
4   : Basculer le commutateur pup 2 sur AUTO
8   : Basculer le commutateur pup 3 sur AUTO
16  : Basculer le commutateur pup 4 sur AUTO
32  : Zone en Mode special
64  : Appuyer sur le bouton marche cycle
128: Blocage zone pour documentation de l'arrêt- apres documentation de l'arrêt
appuyer sur rearmement
256 : Arrêt zone suite a non engagement de la zone apres selection engagement
zone appuyer sur le bouton rearmement





*************************ENGLISH INFORMATION ***************************

DESCRIPTION
******************

THE BF MANAGES FOR THE ZONE :

- CREATION OF ZONE MANUAL MODE
- CREATION OF STEP BY STEP MODE, HOME POSITION MODE
- COMMUNICATION CONTROL WITH HMI OPERATOR PANELS
- MODIFICATION OF THE LIEN_PUP UDT THAT IS USED BY MOVEMENT FBs (Ex: MOUV2P)
FOR DETAILED DESCRIPTION, SEE FB GUIDE GE03FP274

OPERATING :
***********
The BF can manage the four types of panels,MOP,SOP,LOP,DLOP with 1 BF by zone
Limit for 1 facility with MOP and SOP: 4panels per zone(Mop including)9zones max
limit for 1 facility with LOP and DLOP : 1panel per zone (LOP or DLOP)2zones max

1)Associated blocks:
-------------------
 UDT 1998 ""Lien_pup"", UDT 2004 ""lien Ilot""

2) Using for order :
------------------
The information exchanged between the HMI screens (IHMP+ or Wincc) and the
Block
are carried out by the Pilot input and the Diag output.
To allow automatic implementation between the PLC program and the screens,
the block instance names must observe the following rule:
<Z><Zone number><MODES>
(Example: Z1MODES for processing the modes and panels in Zone 1)

The Block (BF) must be deposited in the FB$00 ($ = the number of the zone from
1
to 9)
An instance DB DB$00 (where $ = the number of the zone from 1 to 9) must be
associated with this FB
The symbolic name of the FB$00 instance DB must observe the following rule:
<Z><Zone number>
(Example: Z1 for Zone 1's DB100)

Depending on the type of components managed in the zone, the information can be
incoming or outgoing either:
- from the 22 mm diameter control unit (push button, selector, illuminated push
button, Lamp) = MOP, LOP, DLOP
or
-from software buttons or lamps on a touch screen HMI  = SOP, LOP or DLOP

3)Forcing of operating modes by program :
----------------------------------------
The input ""Prog_selmdf"" can be used to force the following operating modes
with values:
1 = Normal
2 = Emptying
4 = Empty Gripper Stop
8 = Back to home position
16 = step by step
By positioning the input on one of these values, the control mode on the Hmi is
loaded with the value Prog_selmdf.

The operating mode cannot be modified via the Hmi until a known value is
positioned on Prog_selmdf on the Unit input.

On the program it is therefore necessary to use the outputs of the
corresponding
FB Z_mnorm, Z_mvid , Z_mapv, Z_mroc, and Z_mpap as a condition for the
resetting
the input Prog_selmdf to zero in the program section forcing the request

ALARM / FAULT CODE :
********************
Diag.codedef values :
1   : Waiting for Running mode Validation
2   : Switch panel 1 selector to AUTO
4   : Switch panel 2 selector to AUTO
8   : Switch panel 3 selector to AUTO
16  : Switch panel 4 selector to AUTO
32  : Zone in Special Mode
64  : Push Cycle start button
128: Zone hold because stop log must be filled in - after filling the stop
log in, push control on or cycle start button
256 : Zone is stopped because SMP is not in service. after selecting ""zone SMP
in service"", push control on or cycle start button

********************************** _ODIL_ID_ **********************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 94
Dernier ID mis en oeuvre / Last ID implemented : 1932_94
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";""
"***************************************************************************
*                            FB ""MOUV_PL2M""                               *
*                   ASSURE LA COMMANDE DES PLATEAUX 2 POSITIONS           *
*                       2 POSITIONS ROTATIVE JIG CONTROL                  *
***************************************************************************
(in English further below)

DESCRIPTION:
************
Ce FB assure le pilotage des plateaux tournants commandes par indexeur
mecanique. Ces plateaux sont a 2 positions et a 1 ou 2 sens de rotation
   - Gestion de l'ordre de commande suivant les modes;
       Auto, Manu reglage
      (positionnes sur les bits du mot lien pupitre LIEN_PUP)
   - Gestion des ordres de commande suivant l'etat de la fonction
       (positionnees sur les bits des mots fonction MF)
   - Gestion des voyants particuliers
   - Mesure du temps d'execution du mouvement et comparaison avec un temps
       de reference enregistre. Activation d'un defaut
   - Ecriture des bits du mot Diag

MISE EN OEUVRE :
****************
- Adaptation mecanique / position montage:
 Par defaut la valeur de filtrage (Temp d'arret pour position stable)= 50 Ms
 si cette valeur ne convient pas elle peut etre modifiee en amont de la BF via

 la variable Vfpos (Stat)

- Entree COM :
Doit etre mise en uvre avec l'information de commun electrique issue du
programme Safety.

- Entree Sens :
Parametrage sens de rotation :
 - Sens = 0 => 1 Sens de rotation
 - Sens = 1 => 2 Sens de rotation

- Entree TREF :
Les temps de references doivent etre associes au DB x98 de la zone (ZxT)
(x = Numero de la zone)

- Sortie Vm1p1 et Vm2p1 :
Reserve pour la mise en oeuvre de Sortie Voyant hard.

- Sortie Etat_pos :
Reserve pour les equations d'animation programme automate.
(information de position du montage)


CODE DEFAUT :
************
Valeur de  ""Diag.codedef""
1 = defaut disjoncteur moteur rotation
2 = defaut Thermique petite vitesse
4 = defaut disjonteur frein
8 = defaut depassement temps de rotation plateau
16= defaut capteur position plateau
32 = defaut boite a cames plateau
64 = defaut surcourse Avant
128 = Defaut surcourse Recul

********************ENGLISH INFORMATION***************************************
DESCRIPTION:
************
This FB controls rotative jigs with mechanical index. These rotative jigs have
2 positions, with 1 or 2 rotation directions.
   - Orders control depending on selected mode
      Automatic, Manual learning modes
      (data given by panel link LIEN_PUP)
   - Orders control depending on Function status
      (data given by function word MF)
   - Management of Particular lamps
   - Movement time measurement and comparison with movement reference timeout.
      Activation of timeout fault
   - Diag structure writing

Implementation :
****************
- Mechanical adaptation / Jig Position :
 By defect the filtering value ( Stop Time for stable position) = 50 ms
 if this value dont agree she can be changed upstream the BF call by ""Vfpos""
(STAT variable)

- COM Input : must be operate with the safety command polarity

- Sens Input :
Rotation direction parameters :
 - ""Sens"" = 0 means 1 rotation direction
 - ""Sens"" = 1 means 2 rotation directions

- Tref input :
Time movement reference Must be implemented in global data DB$98 ""ZxT"" of the
zone dependence ( x = zone Number)

- Vm1p1 and Vm2p1 output :
Reseved to connect hardware Lamp output.

- Etat_pos output :
Reseved to PLC code ( Jig position information )

FAULT CODE :
***********
Values of ""Diag.codedef""
1 = Rotative Jigs motor circuit breaker fault
2 = Low speed thermal fault
4 = Rotative Jigs motor brake circuit breaker fault
8 = Rotative Jigs timeout fault
16= Rotative Jigs position sensor fault
32 = Rotative Jigs area sensor box fault
64 = Advance overtravel fault
128 = Return overtravel fault

************************* _ODIL_ID_ ***********************************
NB Reseaux BF 1er Version / Network Number in 1ft version : 81
Dernier ID mis en oeuvre / Last ID implemented : 1937_81
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"***************************************************************************
*                            FB ""MOUV_PL2M""                               *
*                   ASSURE LA COMMANDE DES PLATEAUX 2 POSITIONS           *
*                       2 POSITIONS ROTATIVE JIG CONTROL                  *
***************************************************************************
(in English further below)

DESCRIPTION:
************
Ce FB assure le pilotage des plateaux tournants commandes par indexeur
mecanique. Ces plateaux sont a 2 positions et a 1 ou 2 sens de rotation
   - Gestion de l'ordre de commande suivant les modes;
       Auto, Manu reglage
      (positionnes sur les bits du mot lien pupitre LIEN_PUP)
   - Gestion des ordres de commande suivant l'etat de la fonction
       (positionnees sur les bits des mots fonction MF)
   - Gestion des voyants particuliers
   - Mesure du temps d'execution du mouvement et comparaison avec un temps
       de reference enregistre. Activation d'un defaut
   - Ecriture des bits du mot Diag

MISE EN OEUVRE :
****************
- Adaptation mecanique / position montage:
 Par defaut la valeur de filtrage (Temp d'arret pour position stable)= 50 Ms
 si cette valeur ne convient pas elle peut etre modifiee en amont de la BF via

 la variable Vfpos (Stat)

- Entree COM :
Doit etre mise en uvre avec l'information de commun electrique issue du
programme Safety.

- Entree Sens :
Parametrage sens de rotation :
 - Sens = 0 => 1 Sens de rotation
 - Sens = 1 => 2 Sens de rotation

- Entree TREF :
Les temps de references doivent etre associes au DB x98 de la zone (ZxT)
(x = Numero de la zone)

- Sortie Vm1p1 et Vm2p1 :
Reserve pour la mise en oeuvre de Sortie Voyant hard.

- Sortie Etat_pos :
Reserve pour les equations d'animation programme automate.
(information de position du montage)


CODE DEFAUT :
************
Valeur de  ""Diag.codedef""
1 = defaut disjoncteur moteur rotation
2 = defaut Thermique petite vitesse
4 = defaut disjonteur frein
8 = defaut depassement temps de rotation plateau
16= defaut capteur position plateau
32 = defaut boite a cames plateau
64 = defaut surcourse Avant
128 = Defaut surcourse Recul

********************ENGLISH INFORMATION***************************************
DESCRIPTION:
************
This FB controls rotative jigs with mechanical index. These rotative jigs have
2 positions, with 1 or 2 rotation directions.
   - Orders control depending on selected mode
      Automatic, Manual learning modes
      (data given by panel link LIEN_PUP)
   - Orders control depending on Function status
      (data given by function word MF)
   - Management of Particular lamps
   - Movement time measurement and comparison with movement reference timeout.
      Activation of timeout fault
   - Diag structure writing

Implementation :
****************
- Mechanical adaptation / Jig Position :
 By defect the filtering value ( Stop Time for stable position) = 50 ms
 if this value dont agree she can be changed upstream the BF call by ""Vfpos""
(STAT variable)

- COM Input : must be operate with the safety command polarity

- Sens Input :
Rotation direction parameters :
 - ""Sens"" = 0 means 1 rotation direction
 - ""Sens"" = 1 means 2 rotation directions

- Tref input :
Time movement reference Must be implemented in global data DB$98 ""ZxT"" of the
zone dependence ( x = zone Number)

- Vm1p1 and Vm2p1 output :
Reseved to connect hardware Lamp output.

- Etat_pos output :
Reseved to PLC code ( Jig position information )

FAULT CODE :
***********
Values of ""Diag.codedef""
1 = Rotative Jigs motor circuit breaker fault
2 = Low speed thermal fault
4 = Rotative Jigs motor brake circuit breaker fault
8 = Rotative Jigs timeout fault
16= Rotative Jigs position sensor fault
32 = Rotative Jigs area sensor box fault
64 = Advance overtravel fault
128 = Return overtravel fault

************************* _ODIL_ID_ ***********************************
NB Reseaux BF 1er Version / Network Number in 1ft version : 81
Dernier ID mis en oeuvre / Last ID implemented : 1937_81
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"***************************************************************************
*                            FB ""MOUV_PL2M""                               *
*                   ASSURE LA COMMANDE DES PLATEAUX 2 POSITIONS           *
*                       2 POSITIONS ROTATIVE JIG CONTROL                  *
***************************************************************************
(in English further below)

DESCRIPTION:
************
Ce FB assure le pilotage des plateaux tournants commandes par indexeur
mecanique. Ces plateaux sont a 2 positions et a 1 ou 2 sens de rotation
   - Gestion de l'ordre de commande suivant les modes;
       Auto, Manu reglage
      (positionnes sur les bits du mot lien pupitre LIEN_PUP)
   - Gestion des ordres de commande suivant l'etat de la fonction
       (positionnees sur les bits des mots fonction MF)
   - Gestion des voyants particuliers
   - Mesure du temps d'execution du mouvement et comparaison avec un temps
       de reference enregistre. Activation d'un defaut
   - Ecriture des bits du mot Diag

MISE EN OEUVRE :
****************
- Adaptation mecanique / position montage:
 Par defaut la valeur de filtrage (Temp d'arret pour position stable)= 50 Ms
 si cette valeur ne convient pas elle peut etre modifiee en amont de la BF via

 la variable Vfpos (Stat)

- Entree COM :
Doit etre mise en uvre avec l'information de commun electrique issue du
programme Safety.

- Entree Sens :
Parametrage sens de rotation :
 - Sens = 0 => 1 Sens de rotation
 - Sens = 1 => 2 Sens de rotation

- Entree TREF :
Les temps de references doivent etre associes au DB x98 de la zone (ZxT)
(x = Numero de la zone)

- Sortie Vm1p1 et Vm2p1 :
Reserve pour la mise en oeuvre de Sortie Voyant hard.

- Sortie Etat_pos :
Reserve pour les equations d'animation programme automate.
(information de position du montage)


CODE DEFAUT :
************
Valeur de  ""Diag.codedef""
1 = defaut disjoncteur moteur rotation
2 = defaut Thermique petite vitesse
4 = defaut disjonteur frein
8 = defaut depassement temps de rotation plateau
16= defaut capteur position plateau
32 = defaut boite a cames plateau
64 = defaut surcourse Avant
128 = Defaut surcourse Recul

********************ENGLISH INFORMATION***************************************
DESCRIPTION:
************
This FB controls rotative jigs with mechanical index. These rotative jigs have
2 positions, with 1 or 2 rotation directions.
   - Orders control depending on selected mode
      Automatic, Manual learning modes
      (data given by panel link LIEN_PUP)
   - Orders control depending on Function status
      (data given by function word MF)
   - Management of Particular lamps
   - Movement time measurement and comparison with movement reference timeout.
      Activation of timeout fault
   - Diag structure writing

Implementation :
****************
- Mechanical adaptation / Jig Position :
 By defect the filtering value ( Stop Time for stable position) = 50 ms
 if this value dont agree she can be changed upstream the BF call by ""Vfpos""
(STAT variable)

- COM Input : must be operate with the safety command polarity

- Sens Input :
Rotation direction parameters :
 - ""Sens"" = 0 means 1 rotation direction
 - ""Sens"" = 1 means 2 rotation directions

- Tref input :
Time movement reference Must be implemented in global data DB$98 ""ZxT"" of the
zone dependence ( x = zone Number)

- Vm1p1 and Vm2p1 output :
Reseved to connect hardware Lamp output.

- Etat_pos output :
Reseved to PLC code ( Jig position information )

FAULT CODE :
***********
Values of ""Diag.codedef""
1 = Rotative Jigs motor circuit breaker fault
2 = Low speed thermal fault
4 = Rotative Jigs motor brake circuit breaker fault
8 = Rotative Jigs timeout fault
16= Rotative Jigs position sensor fault
32 = Rotative Jigs area sensor box fault
64 = Advance overtravel fault
128 = Return overtravel fault

************************* _ODIL_ID_ ***********************************
NB Reseaux BF 1er Version / Network Number in 1ft version : 81
Dernier ID mis en oeuvre / Last ID implemented : 1937_81
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";""
"********************************************************************************
*                            BF ""RB_COD_PREH_API""                              *
*             Commande et controle d'un prehenseur robot par API               *
*                    Control and check of a Robot Gripper by PLC               *
********************************************************************************
(In English further below)

DESCRIPTION:
************
Ce Bloc Fonctionnel permet la conduite manuelle depuis le pupitre du robot des
 sequences dun prehenseur robot pilote par lautomate programmable

Le Bloc fonctionnel BF_RB_COD_PREH_API utilise:

le mot d'entree 3 du Robot (Iw_rbe3)
pour delivrer:
   - le numero de sequence selectionne sur le Robot en mode manu (Num_Seq)
   - l'ordre Avance/Recul (Bamv/Brmv) conditionne par le mode manu du robot
(ManuRobot)

le mot de sortie 4 du Robot (Qw_rbs4)
pour animer la page des mouvements manuels du robot a partir des ""Mots
Fonction"" (fct_s1 a fct_s16).


Transmission des informations d'etats des sequences :
*****************************************************
Les bits d'etat Avance/Recul des 16 sequences sont transmis par groupe de deux
vers le robot dans une fenetre d'un octet.

  +------------+------------+------------+------------+-----------------+
  |     X7     |     X6     |     X5     |    X4      |   X3 a X0       |
  |   ES2_AV   |   ES2_RE   |   ES1_AV   |   E1S_RE   | GS8 GS4 GS2 GS1 |
  +------------+------------+------------+------------+-----------------+
  |  fct_s2.IA |  fct_S2.IR |  fct_s1.IA |  fct_S1.IR |        1        |
  |  fct_s4.IA |  fct_S4.IR |  fct_s3.IA |  fct_S3.IR |        2        |
  |  fct_s6.IA |  fct_S6.IR |  fct_s5.IA |  fct_S5.IR |        3        |
  |  fct_s8.IA |  fct_S8.IR |  fct_s7.IA |  fct_S7.IR |        4        |
  | fct_s10.IA | fct_S10.IR |  fct_s9.IA |  fct_S9.IR |        5        |
  | fct_s12.IA | fct_S12.IR | fct_s11.IA | fct_S11.IR |        6        |
  | fct_s14.IA | fct_S14.IR | fct_s13.IA | fct_S13.IR |        7        |
  | fct_s16.IA | fct_S16.IR | fct_s15.IA | fct_S15.IR |        8        |
  +------------+------------+------------+------------+-----------------+

Le numero de groupe est incremente toutes les 200 ms.



Decodage des demandes mouvements issues du robot vers l'automate :
****************************************************************
Les demandes de mouvement issues du robot sont codees sur 6 bits.

  +--------+--------+--------+--------+--------+--------+
  | DRM 32 | DRM 16 | DRM 8  | DRM 4  | DRM 2  | DRM 1  |
  +--------+--------+--------+--------+--------+--------+

Le bit DRM 1 indique le sens du mouvement (0 Avance / 1 Recul)
les bits DRM 2 a DRM 32 permettent de retrouver Le numero de sequence.
(Num_Seq := (""DRM 2 a 32"" + 1) / 2)

  +---------+---------+-------+-------+
  | Num_Mvt | Num_Seq | Brmv  | Bamv  |
  +---------+---------+-------+-------+
  |    0    |    0    |   0   |   0   |
  |    1    |    1    |   1*  |   0   |
  |    2    |    1    |   0   |   1*  |
  |    3    |    2    |   1*  |   0   |
  |    4    |    2    |   0   |   1*  |
  |    5    |    3    |   1*  |   0   |
  |    6    |    3    |   0   |   1*  |
  |    7    |    4    |   1*  |   0   |
  |    8    |    4    |   0   |   1*  |
  |    9    |    5    |   1*  |   0   |
  |   10    |    5    |   0   |   1*  |
  |   11    |    6    |   1*  |   0   |
  |   12    |    6    |   0   |   1*  |
  |   13    |    7    |   1*  |   0   |
  |   14    |    7    |   0   |   1*  |
  |   15    |    8    |   1*  |   0   |
  |   16    |    8    |   0   |   1*  |
  +---------+---------+-------+-------+
* Si le parametre ""ManuRobot"" est positionne

MISE en OEUVRE :
**************
Entrees Fct-Sx = Mot fonction de la BF_Mouv2P1 associe a la sequence (<Nom
instance Mouv2P1>.MF)


Sortie Num_Seq = utiliser pour seter l'entree SL du mot fonction de la
BF_Mouv2P1 associe avec robot en mode manuel.

Sortie BAMV et BRMV = entree BAMV et BRMV des BF_Mouv2P1

CODE DEFAUTS :
**************
Non utilise


******************************** English Information ***************************
DESCRIPTION:
************
This functional block is used for the manual control of robot gripper sequences
 controlled by the PLC from the robot panel.

This Block uses :
The 3rd input word of the robot (IW_rbe3) to provide :
   - The sequence number selected on the panel robot in manual mode (Num_seq)
   - The Advance/return order (Bamv/Brmv) when robot is in manual mode.
     (ManuRobot)

The 4th output word of the robot (QW_rbs4) to run the manual mouvement page of
robot from ""function word"" (Fct_S1 to Fct_S16)


Transmission of sequence status data to the robot :
*************************************************
The Advance/Return status bits for the 16 sequences (fct_s1 to fct_s16) are
sent in pairs to the robot in a one byte window (High order byte of the fourth
word of the robot output).

  +------------+------------+------------+------------+-----------------+
  |     X7     |     X6     |     X5     |    X4      |   X3 a X0       |
  |   ES2_AV   |   ES2_RE   |   ES1_AV   |   E1S_RE   | GS8 GS4 GS2 GS1 |
  +------------+------------+------------+------------+-----------------+
  |  fct_s2.IA |  fct_S2.IR |  fct_s1.IA |  fct_S1.IR |        1        |
  |  fct_s4.IA |  fct_S4.IR |  fct_s3.IA |  fct_S3.IR |        2        |
  |  fct_s6.IA |  fct_S6.IR |  fct_s5.IA |  fct_S5.IR |        3        |
  |  fct_s8.IA |  fct_S8.IR |  fct_s7.IA |  fct_S7.IR |        4        |
  | fct_s10.IA | fct_S10.IR |  fct_s9.IA |  fct_S9.IR |        5        |
  | fct_s12.IA | fct_S12.IR | fct_s11.IA | fct_S11.IR |        6        |
  | fct_s14.IA | fct_S14.IR | fct_s13.IA | fct_S13.IR |        7        |
  | fct_s16.IA | fct_S16.IR | fct_s15.IA | fct_S15.IR |        8        |
  +------------+------------+------------+------------+-----------------+

 The Group number is incremented every 200 ms.

Decoding of movement requests from the robot to the PLC:
*******************************************************
  +--------+--------+--------+--------+--------+--------+
  | DRM 32 | DRM 16 | DRM 8  | DRM 4  | DRM 2  | DRM 1  |
  +--------+--------+--------+--------+--------+--------+

 DRM 1 bit give the mouvement way  (0 Advance / 1 Return)
DRM 2 to DRM 32 bits are used to encode the sequence number.
(Num_Seq := (""DRM 2 to 32"" + 1) / 2)
  +---------+---------+-------+-------+
  | Num_Mvt | Num_Seq | Brmv  | Bamv  |
  +---------+---------+-------+-------+
  |    0    |    0    |   0   |   0   |
  |    1    |    1    |   1*  |   0   |
  |    2    |    1    |   0   |   1*  |
  |    3    |    2    |   1*  |   0   |
  |    4    |    2    |   0   |   1*  |
  |    5    |    3    |   1*  |   0   |
  |    6    |    3    |   0   |   1*  |
  |    7    |    4    |   1*  |   0   |
  |    8    |    4    |   0   |   1*  |
  |    9    |    5    |   1*  |   0   |
  |   10    |    5    |   0   |   1*  |
  |   11    |    6    |   1*  |   0   |
  |   12    |    6    |   0   |   1*  |
  |   13    |    7    |   1*  |   0   |
  |   14    |    7    |   0   |   1*  |
  |   15    |    8    |   1*  |   0   |
  |   16    |    8    |   0   |   1*  |
  +---------+---------+-------+-------+
* If ""ManuRobot"" is set

OPERATING :
***********
Fct-Sx inputs = BF_Mouv2P1 Function Word corresponding tothe sequence(<Mouv2P1
instance name>.MF)

Num_Seq output = used to set the function word ""SL"" of BF_Mouv2P1 corresponding
to the Robot in Manual Mode.

BAMV and BRMV outputs =  BAMV and BRMV imputs of BF_mouv2P1

FAULT CODE :
************
Not used

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 10
Dernier ID mis en oeuvre / Last ID implemented : 1953_10
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"********************************************************************************
*                            BF ""RB_COD_PREH_API""                              *
*             Commande et controle d'un prehenseur robot par API               *
*                    Control and check of a Robot Gripper by PLC               *
********************************************************************************
(In English further below)

DESCRIPTION:
************
Ce Bloc Fonctionnel permet la conduite manuelle depuis le pupitre du robot des
 sequences dun prehenseur robot pilote par lautomate programmable

Le Bloc fonctionnel BF_RB_COD_PREH_API utilise:

le mot d'entree 3 du Robot (Iw_rbe3)
pour delivrer:
   - le numero de sequence selectionne sur le Robot en mode manu (Num_Seq)
   - l'ordre Avance/Recul (Bamv/Brmv) conditionne par le mode manu du robot
(ManuRobot)

le mot de sortie 4 du Robot (Qw_rbs4)
pour animer la page des mouvements manuels du robot a partir des ""Mots
Fonction"" (fct_s1 a fct_s16).


Transmission des informations d'etats des sequences :
*****************************************************
Les bits d'etat Avance/Recul des 16 sequences sont transmis par groupe de deux
vers le robot dans une fenetre d'un octet.

  +------------+------------+------------+------------+-----------------+
  |     X7     |     X6     |     X5     |    X4      |   X3 a X0       |
  |   ES2_AV   |   ES2_RE   |   ES1_AV   |   E1S_RE   | GS8 GS4 GS2 GS1 |
  +------------+------------+------------+------------+-----------------+
  |  fct_s2.IA |  fct_S2.IR |  fct_s1.IA |  fct_S1.IR |        1        |
  |  fct_s4.IA |  fct_S4.IR |  fct_s3.IA |  fct_S3.IR |        2        |
  |  fct_s6.IA |  fct_S6.IR |  fct_s5.IA |  fct_S5.IR |        3        |
  |  fct_s8.IA |  fct_S8.IR |  fct_s7.IA |  fct_S7.IR |        4        |
  | fct_s10.IA | fct_S10.IR |  fct_s9.IA |  fct_S9.IR |        5        |
  | fct_s12.IA | fct_S12.IR | fct_s11.IA | fct_S11.IR |        6        |
  | fct_s14.IA | fct_S14.IR | fct_s13.IA | fct_S13.IR |        7        |
  | fct_s16.IA | fct_S16.IR | fct_s15.IA | fct_S15.IR |        8        |
  +------------+------------+------------+------------+-----------------+

Le numero de groupe est incremente toutes les 200 ms.



Decodage des demandes mouvements issues du robot vers l'automate :
****************************************************************
Les demandes de mouvement issues du robot sont codees sur 6 bits.

  +--------+--------+--------+--------+--------+--------+
  | DRM 32 | DRM 16 | DRM 8  | DRM 4  | DRM 2  | DRM 1  |
  +--------+--------+--------+--------+--------+--------+

Le bit DRM 1 indique le sens du mouvement (0 Avance / 1 Recul)
les bits DRM 2 a DRM 32 permettent de retrouver Le numero de sequence.
(Num_Seq := (""DRM 2 a 32"" + 1) / 2)

  +---------+---------+-------+-------+
  | Num_Mvt | Num_Seq | Brmv  | Bamv  |
  +---------+---------+-------+-------+
  |    0    |    0    |   0   |   0   |
  |    1    |    1    |   1*  |   0   |
  |    2    |    1    |   0   |   1*  |
  |    3    |    2    |   1*  |   0   |
  |    4    |    2    |   0   |   1*  |
  |    5    |    3    |   1*  |   0   |
  |    6    |    3    |   0   |   1*  |
  |    7    |    4    |   1*  |   0   |
  |    8    |    4    |   0   |   1*  |
  |    9    |    5    |   1*  |   0   |
  |   10    |    5    |   0   |   1*  |
  |   11    |    6    |   1*  |   0   |
  |   12    |    6    |   0   |   1*  |
  |   13    |    7    |   1*  |   0   |
  |   14    |    7    |   0   |   1*  |
  |   15    |    8    |   1*  |   0   |
  |   16    |    8    |   0   |   1*  |
  +---------+---------+-------+-------+
* Si le parametre ""ManuRobot"" est positionne

MISE en OEUVRE :
**************
Entrees Fct-Sx = Mot fonction de la BF_Mouv2P1 associe a la sequence (<Nom
instance Mouv2P1>.MF)


Sortie Num_Seq = utiliser pour seter l'entree SL du mot fonction de la
BF_Mouv2P1 associe avec robot en mode manuel.

Sortie BAMV et BRMV = entree BAMV et BRMV des BF_Mouv2P1

CODE DEFAUTS :
**************
Non utilise


******************************** English Information ***************************
DESCRIPTION:
************
This functional block is used for the manual control of robot gripper sequences
 controlled by the PLC from the robot panel.

This Block uses :
The 3rd input word of the robot (IW_rbe3) to provide :
   - The sequence number selected on the panel robot in manual mode (Num_seq)
   - The Advance/return order (Bamv/Brmv) when robot is in manual mode.
     (ManuRobot)

The 4th output word of the robot (QW_rbs4) to run the manual mouvement page of
robot from ""function word"" (Fct_S1 to Fct_S16)


Transmission of sequence status data to the robot :
*************************************************
The Advance/Return status bits for the 16 sequences (fct_s1 to fct_s16) are
sent in pairs to the robot in a one byte window (High order byte of the fourth
word of the robot output).

  +------------+------------+------------+------------+-----------------+
  |     X7     |     X6     |     X5     |    X4      |   X3 a X0       |
  |   ES2_AV   |   ES2_RE   |   ES1_AV   |   E1S_RE   | GS8 GS4 GS2 GS1 |
  +------------+------------+------------+------------+-----------------+
  |  fct_s2.IA |  fct_S2.IR |  fct_s1.IA |  fct_S1.IR |        1        |
  |  fct_s4.IA |  fct_S4.IR |  fct_s3.IA |  fct_S3.IR |        2        |
  |  fct_s6.IA |  fct_S6.IR |  fct_s5.IA |  fct_S5.IR |        3        |
  |  fct_s8.IA |  fct_S8.IR |  fct_s7.IA |  fct_S7.IR |        4        |
  | fct_s10.IA | fct_S10.IR |  fct_s9.IA |  fct_S9.IR |        5        |
  | fct_s12.IA | fct_S12.IR | fct_s11.IA | fct_S11.IR |        6        |
  | fct_s14.IA | fct_S14.IR | fct_s13.IA | fct_S13.IR |        7        |
  | fct_s16.IA | fct_S16.IR | fct_s15.IA | fct_S15.IR |        8        |
  +------------+------------+------------+------------+-----------------+

 The Group number is incremented every 200 ms.

Decoding of movement requests from the robot to the PLC:
*******************************************************
  +--------+--------+--------+--------+--------+--------+
  | DRM 32 | DRM 16 | DRM 8  | DRM 4  | DRM 2  | DRM 1  |
  +--------+--------+--------+--------+--------+--------+

 DRM 1 bit give the mouvement way  (0 Advance / 1 Return)
DRM 2 to DRM 32 bits are used to encode the sequence number.
(Num_Seq := (""DRM 2 to 32"" + 1) / 2)
  +---------+---------+-------+-------+
  | Num_Mvt | Num_Seq | Brmv  | Bamv  |
  +---------+---------+-------+-------+
  |    0    |    0    |   0   |   0   |
  |    1    |    1    |   1*  |   0   |
  |    2    |    1    |   0   |   1*  |
  |    3    |    2    |   1*  |   0   |
  |    4    |    2    |   0   |   1*  |
  |    5    |    3    |   1*  |   0   |
  |    6    |    3    |   0   |   1*  |
  |    7    |    4    |   1*  |   0   |
  |    8    |    4    |   0   |   1*  |
  |    9    |    5    |   1*  |   0   |
  |   10    |    5    |   0   |   1*  |
  |   11    |    6    |   1*  |   0   |
  |   12    |    6    |   0   |   1*  |
  |   13    |    7    |   1*  |   0   |
  |   14    |    7    |   0   |   1*  |
  |   15    |    8    |   1*  |   0   |
  |   16    |    8    |   0   |   1*  |
  +---------+---------+-------+-------+
* If ""ManuRobot"" is set

OPERATING :
***********
Fct-Sx inputs = BF_Mouv2P1 Function Word corresponding tothe sequence(<Mouv2P1
instance name>.MF)

Num_Seq output = used to set the function word ""SL"" of BF_Mouv2P1 corresponding
to the Robot in Manual Mode.

BAMV and BRMV outputs =  BAMV and BRMV imputs of BF_mouv2P1

FAULT CODE :
************
Not used

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 10
Dernier ID mis en oeuvre / Last ID implemented : 1953_10
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"********************************************************************************
*                            BF ""RB_COD_PREH_API""                              *
*             Commande et controle d'un prehenseur robot par API               *
*                    Control and check of a Robot Gripper by PLC               *
********************************************************************************
(In English further below)

DESCRIPTION:
************
Ce Bloc Fonctionnel permet la conduite manuelle depuis le pupitre du robot des
 sequences dun prehenseur robot pilote par lautomate programmable

Le Bloc fonctionnel BF_RB_COD_PREH_API utilise:

le mot d'entree 3 du Robot (Iw_rbe3)
pour delivrer:
   - le numero de sequence selectionne sur le Robot en mode manu (Num_Seq)
   - l'ordre Avance/Recul (Bamv/Brmv) conditionne par le mode manu du robot
(ManuRobot)

le mot de sortie 4 du Robot (Qw_rbs4)
pour animer la page des mouvements manuels du robot a partir des ""Mots
Fonction"" (fct_s1 a fct_s16).


Transmission des informations d'etats des sequences :
*****************************************************
Les bits d'etat Avance/Recul des 16 sequences sont transmis par groupe de deux
vers le robot dans une fenetre d'un octet.

  +------------+------------+------------+------------+-----------------+
  |     X7     |     X6     |     X5     |    X4      |   X3 a X0       |
  |   ES2_AV   |   ES2_RE   |   ES1_AV   |   E1S_RE   | GS8 GS4 GS2 GS1 |
  +------------+------------+------------+------------+-----------------+
  |  fct_s2.IA |  fct_S2.IR |  fct_s1.IA |  fct_S1.IR |        1        |
  |  fct_s4.IA |  fct_S4.IR |  fct_s3.IA |  fct_S3.IR |        2        |
  |  fct_s6.IA |  fct_S6.IR |  fct_s5.IA |  fct_S5.IR |        3        |
  |  fct_s8.IA |  fct_S8.IR |  fct_s7.IA |  fct_S7.IR |        4        |
  | fct_s10.IA | fct_S10.IR |  fct_s9.IA |  fct_S9.IR |        5        |
  | fct_s12.IA | fct_S12.IR | fct_s11.IA | fct_S11.IR |        6        |
  | fct_s14.IA | fct_S14.IR | fct_s13.IA | fct_S13.IR |        7        |
  | fct_s16.IA | fct_S16.IR | fct_s15.IA | fct_S15.IR |        8        |
  +------------+------------+------------+------------+-----------------+

Le numero de groupe est incremente toutes les 200 ms.



Decodage des demandes mouvements issues du robot vers l'automate :
****************************************************************
Les demandes de mouvement issues du robot sont codees sur 6 bits.

  +--------+--------+--------+--------+--------+--------+
  | DRM 32 | DRM 16 | DRM 8  | DRM 4  | DRM 2  | DRM 1  |
  +--------+--------+--------+--------+--------+--------+

Le bit DRM 1 indique le sens du mouvement (0 Avance / 1 Recul)
les bits DRM 2 a DRM 32 permettent de retrouver Le numero de sequence.
(Num_Seq := (""DRM 2 a 32"" + 1) / 2)

  +---------+---------+-------+-------+
  | Num_Mvt | Num_Seq | Brmv  | Bamv  |
  +---------+---------+-------+-------+
  |    0    |    0    |   0   |   0   |
  |    1    |    1    |   1*  |   0   |
  |    2    |    1    |   0   |   1*  |
  |    3    |    2    |   1*  |   0   |
  |    4    |    2    |   0   |   1*  |
  |    5    |    3    |   1*  |   0   |
  |    6    |    3    |   0   |   1*  |
  |    7    |    4    |   1*  |   0   |
  |    8    |    4    |   0   |   1*  |
  |    9    |    5    |   1*  |   0   |
  |   10    |    5    |   0   |   1*  |
  |   11    |    6    |   1*  |   0   |
  |   12    |    6    |   0   |   1*  |
  |   13    |    7    |   1*  |   0   |
  |   14    |    7    |   0   |   1*  |
  |   15    |    8    |   1*  |   0   |
  |   16    |    8    |   0   |   1*  |
  +---------+---------+-------+-------+
* Si le parametre ""ManuRobot"" est positionne

MISE en OEUVRE :
**************
Entrees Fct-Sx = Mot fonction de la BF_Mouv2P1 associe a la sequence (<Nom
instance Mouv2P1>.MF)


Sortie Num_Seq = utiliser pour seter l'entree SL du mot fonction de la
BF_Mouv2P1 associe avec robot en mode manuel.

Sortie BAMV et BRMV = entree BAMV et BRMV des BF_Mouv2P1

CODE DEFAUTS :
**************
Non utilise


******************************** English Information ***************************
DESCRIPTION:
************
This functional block is used for the manual control of robot gripper sequences
 controlled by the PLC from the robot panel.

This Block uses :
The 3rd input word of the robot (IW_rbe3) to provide :
   - The sequence number selected on the panel robot in manual mode (Num_seq)
   - The Advance/return order (Bamv/Brmv) when robot is in manual mode.
     (ManuRobot)

The 4th output word of the robot (QW_rbs4) to run the manual mouvement page of
robot from ""function word"" (Fct_S1 to Fct_S16)


Transmission of sequence status data to the robot :
*************************************************
The Advance/Return status bits for the 16 sequences (fct_s1 to fct_s16) are
sent in pairs to the robot in a one byte window (High order byte of the fourth
word of the robot output).

  +------------+------------+------------+------------+-----------------+
  |     X7     |     X6     |     X5     |    X4      |   X3 a X0       |
  |   ES2_AV   |   ES2_RE   |   ES1_AV   |   E1S_RE   | GS8 GS4 GS2 GS1 |
  +------------+------------+------------+------------+-----------------+
  |  fct_s2.IA |  fct_S2.IR |  fct_s1.IA |  fct_S1.IR |        1        |
  |  fct_s4.IA |  fct_S4.IR |  fct_s3.IA |  fct_S3.IR |        2        |
  |  fct_s6.IA |  fct_S6.IR |  fct_s5.IA |  fct_S5.IR |        3        |
  |  fct_s8.IA |  fct_S8.IR |  fct_s7.IA |  fct_S7.IR |        4        |
  | fct_s10.IA | fct_S10.IR |  fct_s9.IA |  fct_S9.IR |        5        |
  | fct_s12.IA | fct_S12.IR | fct_s11.IA | fct_S11.IR |        6        |
  | fct_s14.IA | fct_S14.IR | fct_s13.IA | fct_S13.IR |        7        |
  | fct_s16.IA | fct_S16.IR | fct_s15.IA | fct_S15.IR |        8        |
  +------------+------------+------------+------------+-----------------+

 The Group number is incremented every 200 ms.

Decoding of movement requests from the robot to the PLC:
*******************************************************
  +--------+--------+--------+--------+--------+--------+
  | DRM 32 | DRM 16 | DRM 8  | DRM 4  | DRM 2  | DRM 1  |
  +--------+--------+--------+--------+--------+--------+

 DRM 1 bit give the mouvement way  (0 Advance / 1 Return)
DRM 2 to DRM 32 bits are used to encode the sequence number.
(Num_Seq := (""DRM 2 to 32"" + 1) / 2)
  +---------+---------+-------+-------+
  | Num_Mvt | Num_Seq | Brmv  | Bamv  |
  +---------+---------+-------+-------+
  |    0    |    0    |   0   |   0   |
  |    1    |    1    |   1*  |   0   |
  |    2    |    1    |   0   |   1*  |
  |    3    |    2    |   1*  |   0   |
  |    4    |    2    |   0   |   1*  |
  |    5    |    3    |   1*  |   0   |
  |    6    |    3    |   0   |   1*  |
  |    7    |    4    |   1*  |   0   |
  |    8    |    4    |   0   |   1*  |
  |    9    |    5    |   1*  |   0   |
  |   10    |    5    |   0   |   1*  |
  |   11    |    6    |   1*  |   0   |
  |   12    |    6    |   0   |   1*  |
  |   13    |    7    |   1*  |   0   |
  |   14    |    7    |   0   |   1*  |
  |   15    |    8    |   1*  |   0   |
  |   16    |    8    |   0   |   1*  |
  +---------+---------+-------+-------+
* If ""ManuRobot"" is set

OPERATING :
***********
Fct-Sx inputs = BF_Mouv2P1 Function Word corresponding tothe sequence(<Mouv2P1
instance name>.MF)

Num_Seq output = used to set the function word ""SL"" of BF_Mouv2P1 corresponding
to the Robot in Manual Mode.

BAMV and BRMV outputs =  BAMV and BRMV imputs of BF_mouv2P1

FAULT CODE :
************
Not used

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 10
Dernier ID mis en oeuvre / Last ID implemented : 1953_10
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";""
"******************************************************************************
*                    BF_MODBUS TCPIP SLAVE                                   *
*          Modbus TCP/IP Server avec CP 343-1 (Lean et Classic)              *
*          Modbus TCP/IP Server with CP 343-1 (Lean and Classic)             *
******************************************************************************
(In English Further below)

Description:
------------
Ce Bloc Fonctionnel gere la communication Modbus esclave.
Il prend en charge les fonctions
   -  3: Read Multiple Registers
   -  6: Write Single Register
   - 16: Write Multiple Registers
a l'exclusion de toute autre fonction.

Pre requis:
----------
Un CP 343-1 lean dûment parametre avec NetPro (Liaison TCP, avec un partenaire
non specifie, en ecoute sur le port 502) doit se trouver dans la configuration
materielle.
(Pour plus de details voir la documentation de la BF)

Dependances:
-----------
   Ce bloc utilise:
      - Le FC 1699 ""AG_RCV"" (FC 6 de la bibliotheque ""SIMATIC_NET_CP"")
      - Le FB 1698 ""AG_SND"" (FC 5 de la bibliotheque ""SIMATIC_NET_CP"")
      - Le SFB 4   ""TON""
      - Le SFB 24  ""TEST_DB""
      - Le SFB 20  ""BLK_MOV""


Mise en oeuvre :
----------------
LA BF doit etre mise en oeuvre dans le FB4 ""COM"" du programme.

1) CPAddress = valeur de l'adresse d'entree du CP343 sous Hwconfig
      Selectionner le coupleur ->Propriete -> General -> Adresses

2) ID = Valeur ID de la liaison TCP connectee au CP343 sous Netpro
     Selectionner la cpu de l'api, dans le tableau de la liste des liaisons,
     selectionner la liaison -> propriete -> General -> pate ID sur la fenetre
     Parametres de bloc
3) ModDBNR = N° du DB recevant les trames dans l'API.
        De base les DB globaux 89 a 80 sont reserves dans la structure
Programme.
        1er carte = DB89 ""SIP1""
Les donnees Modbus lues et ecrites, sont echangees dans le DB designe
par le parametre ModDBNR (entree IN).
Ce DB contient 1 struct / Trame, les adresses en word de chaque trame doivent
etre communiquees au service informatique pour pointer les trames dans le DB
4) ModBaseRe = addresse de debut des Trames dans le DB global en MOT.
            Par defaut =  0

Le parametre ModBaseReg (entree IN) correspond a un Offset d'adresse a
appliquer au mot 0 du DB d'echange Modbus, afin de les lier aux adresses des
echanges Modbus.
Exemple:

DBW (0 + ModBaseReg) <=> adresse Modbus = 0
DBW (2 + ModBaseReg) <=> adresse Modbus = 1
...

Defauts:
--------
Le dernier defaut est maintenu tant qu'une transaction correcte n'a pas ete
effectuee.

 0: Pas de defaut

 1: Une erreur s'est produite lors de l'appel du FC ""AG_RECV""
    AddInfo contient le code d'erreur retourne par le FC

 3: Longueur de trame incorrecte

 5: Fonction Modbus non supportee
    Une reponse d'exception Modbus 1 (ILLEGAL FUNCTION CODE) est envoyee

 6: Une erreur s'est produite lors de l'appel du SFC ""TEST_DB""
    Addinfo contient le code d'erreur retourne par la SFC
    Une reponse d'exception Modbus 4 (SLAVE DEVICE FAILURE) est envoyee

 7: L'adresse dans la requete est inferieure a ""ModBaseReg""
    Une reponse d'exception Modbus 2 (ILLEGAL DATA ADDRESS) est envoyee

 8: Le bloc de donnees est trop petit pour servir la requete
    Une reponse d'exception Modbus 2 (ILLEGAL DATA ADDRESS) est envoyee

 9: Requete erronee (Le champ ""Nombre de Registres"" est incorrect)
    Une reponse d'exception Modbus 3 (ILLEGAL DATA VALUE) est envoyee

10: Une erreur s'est produite lors de l'appel du SFC ""BLK_MOV""
    AddInfo contient le code d'erreur retourne par le SFC
    Une reponse d'exception Modbus 4 (SLAVE DEVICE FAILURE) est envoyee

11: Une erreur s'est produite lors de l'appel du FC ""AG_SEND""
    AddInfo contient le code d'erreur retourne par le FC

12: Pas de requete du maitre depuis plus de 30 secondes

******************** ENGLISH INFORMATION *************************************
Description:
------------
This Bloc processes the Modbus slave communication
Modbus Functions accepted:
   -  3: Read Multiple Registers
   -  6: Write Single Register
   - 16: Write Multiple Registers
and no more else

Prerequisite:
----------
A CP 343-1 lean correctly setup In NetPro (TCP link, with unspecified partner ,
local port = 502) must be in place in the hardware configuration
(For more details see the BF documentation)

Dependence:
-----------
   This bloc uses:
      - FC 1699 ""AG_RCV"" (FC 6 from the library ""SIMATIC_NET_CP"")
      - FC 1698 ""AG_SND"" (FC 5 from the library ""SIMATIC_NET_CP"")
      - SFB 4   ""TON""
      - SFB 24  ""TEST_DB""
      - SFB 20  ""BLK_MOV""

Operating :
-----------
The BF must to be implemented in the FB4 ""Com"" of the PLC program.

1) CPAddress = entry address value of CP343 under Hwconfig
 Select the coupler - > object Properties - > General - > addresses

2) ID = Value ID of the connection TCP connected to the CP343 under Netpro.
 Select the PLC cpu, in the board of the list of the connections,
 select the connection - > object properties - > General - > ID on the block
parameter window
3) ModDBNR = DB Number receiving frame in the Plc.
        Of base the global DB 89 to 80 are reserved in the Program structure.
        1st card CP343 = DB89 "" SIP1 ""
The Modbus datas read and wrote, are exchanged in the DB designed by the
ModDBNR parameter (INPUT)
This DB contains 1 struct / Frame, the Word addresses of every frame must be
communicated to
the factory computer service for point the Frame in the DB.

4) ModBaseRe = addresse of the frame beginning in the global DB , value in WORD.
The parameter ModBaseReg (INPUT) is a Offset to apply to the word 0 of the
Modbus Exchange DB, in order to make the link with the Modbus address of the
dialog.

Exemple:

DBW (0 + ModBaseReg) <=> Modbus address = 0
DBW (2 + ModBaseReg) <=> Modbus address = 1
...

Faults:
--------
Last fault stay to its state till the next correct communication exchange

 0: No fault

 1: an error occured calling FC ""AG_RECV""
    AddInfo contains error code returned by the FC

 3: Length of the frame is incorrect

 5: Modbus Function is not supported
     An exception error code 1 (""ILLEGAL FUNCTION CODE"") is sent back

 6: an error occured calling SFC ""TEST_DB""
    AddInfo contains error code returned by the SFC
    An exception error code 4 (""SLAVE DEVICE FAILURE"") is sent back

 7: The Modbbus address in the request in Less than ""ModBaseReg""
    An exception error code 2 (""ILLEGAL DATA ADDRESS"") is sent back

 8: The exchange DB is too small to answer the request
    An exception error code 2 (""ILLEGAL DATA ADDRESS"") is sent back

 9: Incorrect request (Field ""Number of registers"" is incorrect)
    An exception error code 3 (""ILLEGAL DATA VALUE"") is sent back

10: an error occured calling SFC ""BLK_MOV""
    AddInfo contains error code returned by the SFC
    An exception error code 4 (""SLAVE DEVICE FAILURE"") is sent back

11: an error occured calling FC ""AG_SEND""
    AddInfo contains error code returned by the FC

12: None request from the master since more than 30 seconds

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 4
Dernier ID mis en oeuvre / Last ID implemented : 1961_4
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"******************************************************************************
*                    BF_MODBUS TCPIP SLAVE                                   *
*          Modbus TCP/IP Server avec CP 343-1 (Lean et Classic)              *
*          Modbus TCP/IP Server with CP 343-1 (Lean and Classic)             *
******************************************************************************
(In English Further below)

Description:
------------
Ce Bloc Fonctionnel gere la communication Modbus esclave.
Il prend en charge les fonctions
   -  3: Read Multiple Registers
   -  6: Write Single Register
   - 16: Write Multiple Registers
a l'exclusion de toute autre fonction.

Pre requis:
----------
Un CP 343-1 lean dûment parametre avec NetPro (Liaison TCP, avec un partenaire
non specifie, en ecoute sur le port 502) doit se trouver dans la configuration
materielle.
(Pour plus de details voir la documentation de la BF)

Dependances:
-----------
   Ce bloc utilise:
      - Le FC 1699 ""AG_RCV"" (FC 6 de la bibliotheque ""SIMATIC_NET_CP"")
      - Le FB 1698 ""AG_SND"" (FC 5 de la bibliotheque ""SIMATIC_NET_CP"")
      - Le SFB 4   ""TON""
      - Le SFB 24  ""TEST_DB""
      - Le SFB 20  ""BLK_MOV""


Mise en oeuvre :
----------------
LA BF doit etre mise en oeuvre dans le FB4 ""COM"" du programme.

1) CPAddress = valeur de l'adresse d'entree du CP343 sous Hwconfig
      Selectionner le coupleur ->Propriete -> General -> Adresses

2) ID = Valeur ID de la liaison TCP connectee au CP343 sous Netpro
     Selectionner la cpu de l'api, dans le tableau de la liste des liaisons,
     selectionner la liaison -> propriete -> General -> pate ID sur la fenetre
     Parametres de bloc
3) ModDBNR = N° du DB recevant les trames dans l'API.
        De base les DB globaux 89 a 80 sont reserves dans la structure
Programme.
        1er carte = DB89 ""SIP1""
Les donnees Modbus lues et ecrites, sont echangees dans le DB designe
par le parametre ModDBNR (entree IN).
Ce DB contient 1 struct / Trame, les adresses en word de chaque trame doivent
etre communiquees au service informatique pour pointer les trames dans le DB
4) ModBaseRe = addresse de debut des Trames dans le DB global en MOT.
            Par defaut =  0

Le parametre ModBaseReg (entree IN) correspond a un Offset d'adresse a
appliquer au mot 0 du DB d'echange Modbus, afin de les lier aux adresses des
echanges Modbus.
Exemple:

DBW (0 + ModBaseReg) <=> adresse Modbus = 0
DBW (2 + ModBaseReg) <=> adresse Modbus = 1
...

Defauts:
--------
Le dernier defaut est maintenu tant qu'une transaction correcte n'a pas ete
effectuee.

 0: Pas de defaut

 1: Une erreur s'est produite lors de l'appel du FC ""AG_RECV""
    AddInfo contient le code d'erreur retourne par le FC

 3: Longueur de trame incorrecte

 5: Fonction Modbus non supportee
    Une reponse d'exception Modbus 1 (ILLEGAL FUNCTION CODE) est envoyee

 6: Une erreur s'est produite lors de l'appel du SFC ""TEST_DB""
    Addinfo contient le code d'erreur retourne par la SFC
    Une reponse d'exception Modbus 4 (SLAVE DEVICE FAILURE) est envoyee

 7: L'adresse dans la requete est inferieure a ""ModBaseReg""
    Une reponse d'exception Modbus 2 (ILLEGAL DATA ADDRESS) est envoyee

 8: Le bloc de donnees est trop petit pour servir la requete
    Une reponse d'exception Modbus 2 (ILLEGAL DATA ADDRESS) est envoyee

 9: Requete erronee (Le champ ""Nombre de Registres"" est incorrect)
    Une reponse d'exception Modbus 3 (ILLEGAL DATA VALUE) est envoyee

10: Une erreur s'est produite lors de l'appel du SFC ""BLK_MOV""
    AddInfo contient le code d'erreur retourne par le SFC
    Une reponse d'exception Modbus 4 (SLAVE DEVICE FAILURE) est envoyee

11: Une erreur s'est produite lors de l'appel du FC ""AG_SEND""
    AddInfo contient le code d'erreur retourne par le FC

12: Pas de requete du maitre depuis plus de 30 secondes

******************** ENGLISH INFORMATION *************************************
Description:
------------
This Bloc processes the Modbus slave communication
Modbus Functions accepted:
   -  3: Read Multiple Registers
   -  6: Write Single Register
   - 16: Write Multiple Registers
and no more else

Prerequisite:
----------
A CP 343-1 lean correctly setup In NetPro (TCP link, with unspecified partner ,
local port = 502) must be in place in the hardware configuration
(For more details see the BF documentation)

Dependence:
-----------
   This bloc uses:
      - FC 1699 ""AG_RCV"" (FC 6 from the library ""SIMATIC_NET_CP"")
      - FC 1698 ""AG_SND"" (FC 5 from the library ""SIMATIC_NET_CP"")
      - SFB 4   ""TON""
      - SFB 24  ""TEST_DB""
      - SFB 20  ""BLK_MOV""

Operating :
-----------
The BF must to be implemented in the FB4 ""Com"" of the PLC program.

1) CPAddress = entry address value of CP343 under Hwconfig
 Select the coupler - > object Properties - > General - > addresses

2) ID = Value ID of the connection TCP connected to the CP343 under Netpro.
 Select the PLC cpu, in the board of the list of the connections,
 select the connection - > object properties - > General - > ID on the block
parameter window
3) ModDBNR = DB Number receiving frame in the Plc.
        Of base the global DB 89 to 80 are reserved in the Program structure.
        1st card CP343 = DB89 "" SIP1 ""
The Modbus datas read and wrote, are exchanged in the DB designed by the
ModDBNR parameter (INPUT)
This DB contains 1 struct / Frame, the Word addresses of every frame must be
communicated to
the factory computer service for point the Frame in the DB.

4) ModBaseRe = addresse of the frame beginning in the global DB , value in WORD.
The parameter ModBaseReg (INPUT) is a Offset to apply to the word 0 of the
Modbus Exchange DB, in order to make the link with the Modbus address of the
dialog.

Exemple:

DBW (0 + ModBaseReg) <=> Modbus address = 0
DBW (2 + ModBaseReg) <=> Modbus address = 1
...

Faults:
--------
Last fault stay to its state till the next correct communication exchange

 0: No fault

 1: an error occured calling FC ""AG_RECV""
    AddInfo contains error code returned by the FC

 3: Length of the frame is incorrect

 5: Modbus Function is not supported
     An exception error code 1 (""ILLEGAL FUNCTION CODE"") is sent back

 6: an error occured calling SFC ""TEST_DB""
    AddInfo contains error code returned by the SFC
    An exception error code 4 (""SLAVE DEVICE FAILURE"") is sent back

 7: The Modbbus address in the request in Less than ""ModBaseReg""
    An exception error code 2 (""ILLEGAL DATA ADDRESS"") is sent back

 8: The exchange DB is too small to answer the request
    An exception error code 2 (""ILLEGAL DATA ADDRESS"") is sent back

 9: Incorrect request (Field ""Number of registers"" is incorrect)
    An exception error code 3 (""ILLEGAL DATA VALUE"") is sent back

10: an error occured calling SFC ""BLK_MOV""
    AddInfo contains error code returned by the SFC
    An exception error code 4 (""SLAVE DEVICE FAILURE"") is sent back

11: an error occured calling FC ""AG_SEND""
    AddInfo contains error code returned by the FC

12: None request from the master since more than 30 seconds

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 4
Dernier ID mis en oeuvre / Last ID implemented : 1961_4
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"******************************************************************************
*                    BF_MODBUS TCPIP SLAVE                                   *
*          Modbus TCP/IP Server avec CP 343-1 (Lean et Classic)              *
*          Modbus TCP/IP Server with CP 343-1 (Lean and Classic)             *
******************************************************************************
(In English Further below)

Description:
------------
Ce Bloc Fonctionnel gere la communication Modbus esclave.
Il prend en charge les fonctions
   -  3: Read Multiple Registers
   -  6: Write Single Register
   - 16: Write Multiple Registers
a l'exclusion de toute autre fonction.

Pre requis:
----------
Un CP 343-1 lean dûment parametre avec NetPro (Liaison TCP, avec un partenaire
non specifie, en ecoute sur le port 502) doit se trouver dans la configuration
materielle.
(Pour plus de details voir la documentation de la BF)

Dependances:
-----------
   Ce bloc utilise:
      - Le FC 1699 ""AG_RCV"" (FC 6 de la bibliotheque ""SIMATIC_NET_CP"")
      - Le FB 1698 ""AG_SND"" (FC 5 de la bibliotheque ""SIMATIC_NET_CP"")
      - Le SFB 4   ""TON""
      - Le SFB 24  ""TEST_DB""
      - Le SFB 20  ""BLK_MOV""


Mise en oeuvre :
----------------
LA BF doit etre mise en oeuvre dans le FB4 ""COM"" du programme.

1) CPAddress = valeur de l'adresse d'entree du CP343 sous Hwconfig
      Selectionner le coupleur ->Propriete -> General -> Adresses

2) ID = Valeur ID de la liaison TCP connectee au CP343 sous Netpro
     Selectionner la cpu de l'api, dans le tableau de la liste des liaisons,
     selectionner la liaison -> propriete -> General -> pate ID sur la fenetre
     Parametres de bloc
3) ModDBNR = N° du DB recevant les trames dans l'API.
        De base les DB globaux 89 a 80 sont reserves dans la structure
Programme.
        1er carte = DB89 ""SIP1""
Les donnees Modbus lues et ecrites, sont echangees dans le DB designe
par le parametre ModDBNR (entree IN).
Ce DB contient 1 struct / Trame, les adresses en word de chaque trame doivent
etre communiquees au service informatique pour pointer les trames dans le DB
4) ModBaseRe = addresse de debut des Trames dans le DB global en MOT.
            Par defaut =  0

Le parametre ModBaseReg (entree IN) correspond a un Offset d'adresse a
appliquer au mot 0 du DB d'echange Modbus, afin de les lier aux adresses des
echanges Modbus.
Exemple:

DBW (0 + ModBaseReg) <=> adresse Modbus = 0
DBW (2 + ModBaseReg) <=> adresse Modbus = 1
...

Defauts:
--------
Le dernier defaut est maintenu tant qu'une transaction correcte n'a pas ete
effectuee.

 0: Pas de defaut

 1: Une erreur s'est produite lors de l'appel du FC ""AG_RECV""
    AddInfo contient le code d'erreur retourne par le FC

 3: Longueur de trame incorrecte

 5: Fonction Modbus non supportee
    Une reponse d'exception Modbus 1 (ILLEGAL FUNCTION CODE) est envoyee

 6: Une erreur s'est produite lors de l'appel du SFC ""TEST_DB""
    Addinfo contient le code d'erreur retourne par la SFC
    Une reponse d'exception Modbus 4 (SLAVE DEVICE FAILURE) est envoyee

 7: L'adresse dans la requete est inferieure a ""ModBaseReg""
    Une reponse d'exception Modbus 2 (ILLEGAL DATA ADDRESS) est envoyee

 8: Le bloc de donnees est trop petit pour servir la requete
    Une reponse d'exception Modbus 2 (ILLEGAL DATA ADDRESS) est envoyee

 9: Requete erronee (Le champ ""Nombre de Registres"" est incorrect)
    Une reponse d'exception Modbus 3 (ILLEGAL DATA VALUE) est envoyee

10: Une erreur s'est produite lors de l'appel du SFC ""BLK_MOV""
    AddInfo contient le code d'erreur retourne par le SFC
    Une reponse d'exception Modbus 4 (SLAVE DEVICE FAILURE) est envoyee

11: Une erreur s'est produite lors de l'appel du FC ""AG_SEND""
    AddInfo contient le code d'erreur retourne par le FC

12: Pas de requete du maitre depuis plus de 30 secondes

******************** ENGLISH INFORMATION *************************************
Description:
------------
This Bloc processes the Modbus slave communication
Modbus Functions accepted:
   -  3: Read Multiple Registers
   -  6: Write Single Register
   - 16: Write Multiple Registers
and no more else

Prerequisite:
----------
A CP 343-1 lean correctly setup In NetPro (TCP link, with unspecified partner ,
local port = 502) must be in place in the hardware configuration
(For more details see the BF documentation)

Dependence:
-----------
   This bloc uses:
      - FC 1699 ""AG_RCV"" (FC 6 from the library ""SIMATIC_NET_CP"")
      - FC 1698 ""AG_SND"" (FC 5 from the library ""SIMATIC_NET_CP"")
      - SFB 4   ""TON""
      - SFB 24  ""TEST_DB""
      - SFB 20  ""BLK_MOV""

Operating :
-----------
The BF must to be implemented in the FB4 ""Com"" of the PLC program.

1) CPAddress = entry address value of CP343 under Hwconfig
 Select the coupler - > object Properties - > General - > addresses

2) ID = Value ID of the connection TCP connected to the CP343 under Netpro.
 Select the PLC cpu, in the board of the list of the connections,
 select the connection - > object properties - > General - > ID on the block
parameter window
3) ModDBNR = DB Number receiving frame in the Plc.
        Of base the global DB 89 to 80 are reserved in the Program structure.
        1st card CP343 = DB89 "" SIP1 ""
The Modbus datas read and wrote, are exchanged in the DB designed by the
ModDBNR parameter (INPUT)
This DB contains 1 struct / Frame, the Word addresses of every frame must be
communicated to
the factory computer service for point the Frame in the DB.

4) ModBaseRe = addresse of the frame beginning in the global DB , value in WORD.
The parameter ModBaseReg (INPUT) is a Offset to apply to the word 0 of the
Modbus Exchange DB, in order to make the link with the Modbus address of the
dialog.

Exemple:

DBW (0 + ModBaseReg) <=> Modbus address = 0
DBW (2 + ModBaseReg) <=> Modbus address = 1
...

Faults:
--------
Last fault stay to its state till the next correct communication exchange

 0: No fault

 1: an error occured calling FC ""AG_RECV""
    AddInfo contains error code returned by the FC

 3: Length of the frame is incorrect

 5: Modbus Function is not supported
     An exception error code 1 (""ILLEGAL FUNCTION CODE"") is sent back

 6: an error occured calling SFC ""TEST_DB""
    AddInfo contains error code returned by the SFC
    An exception error code 4 (""SLAVE DEVICE FAILURE"") is sent back

 7: The Modbbus address in the request in Less than ""ModBaseReg""
    An exception error code 2 (""ILLEGAL DATA ADDRESS"") is sent back

 8: The exchange DB is too small to answer the request
    An exception error code 2 (""ILLEGAL DATA ADDRESS"") is sent back

 9: Incorrect request (Field ""Number of registers"" is incorrect)
    An exception error code 3 (""ILLEGAL DATA VALUE"") is sent back

10: an error occured calling SFC ""BLK_MOV""
    AddInfo contains error code returned by the SFC
    An exception error code 4 (""SLAVE DEVICE FAILURE"") is sent back

11: an error occured calling FC ""AG_SEND""
    AddInfo contains error code returned by the FC

12: None request from the master since more than 30 seconds

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 4
Dernier ID mis en oeuvre / Last ID implemented : 1961_4
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";""
"**********************************************************************
*                           BF_IHM_WINCC                             *
*                    Coordination API / Winccflexible                *
*                    Coordination PLC / Winccflexible                *
**********************************************************************
(English description further below)

DESCRIPTION:
************
Ce FB renseigne la page en cours sur Wincc Flexible et permet de selectionner
une page sur le pupitre

Visualisation numero de la page active : Sortie Num_pwincc

Selection page :
     1 - Renseigner le numero de la page a afficher : Entree Num_page
     2 - Le changement de page se fait sur un passage de 0 a 1 de Entree
         Val_page

Il sert ausi a la mise a l'heure de l'automate et synchronise l'heure du
pupitre Wincc Flexible avec l'heure de l'automate uniquement pour un pupitre LOP

MISE en OEUVRE :
***************
1) LOP et MOP :
--------------
Instancier la BF avec le DB1962 et de Nom ""DB_IHM_WINCC"" pas de multi-instance.

2) DLOP :
--------
Instancier la BF avec le DB1963 et de Nom ""DB_IHM_DLOP"" pas de multi-instance.

3)Wincc pour MOP :
-----------------
- Au niveau du MOP la declaration de la date et l'heure au niveau de
l'application WinCC entraine un decalage du PC genant sur le suivi des moyens.
Pour regler ce probleme assure-vous que la fonction date/heure sur l'automate
est devalidee dans le parametre de coordination de la liaison sous Wincc.

- Pour permettre a l'application Wincc de repasser en avant plan sur
l'application IHMP, l'ihmp utilise l'entree ""Pilot.Ihmavplan"" de la BF.
Cette variable est associee a un script ""ShowScreen "" sous Wincc Flexible.

4)Programme S7 pour LOP et Dlop :
-------------------------
- Traitement du Numero de page(Sortie ""Num_pwincc"") pour la BF_zone_mode_IHM :
Le Numero de page doit etre transfere dans la BF_Zone Mode associee au pupitre
touch_panel.
Le 1er Pupitre Touch_panel (LOP) est associe a la zone 1
Le 2eme Pupitre Touch_panel (DLOP) est associe a la zone 2
L'affectation est a mettre en uvre apres la BF_Ihm_Wincc via une fonction MOVE.

- Bit de vie des touch_panel :
Le bit de vie doit etre genere avant la BF_Zone_Mode_IHM via une fonction
""ADD_I"" ( voir documentation BF_IHM_Wincc)

INTERFACE:
**********
1)ENTREES :
Val_page   : Validation appel page Wincc Flexible
Num_page   : Numero de la page a afficher sur Wincc Flexible
Pilot      : Structure de pilotage IHM
     Ihmnump1         : Type de vue courant
     Ihmnump2         : Numero de la vue actuelle
     Ihmnump3         : Reserve
     Ihmnump4         : Numero du champ actuel
     Ihmnump5         : Reserve
     Ihmsaisieannee   : Saisie annee pour mise a l'heure API
     Ihmsaisiemois    : Saisie mois pour mise a l'heure API
     Ihmsaisiejour    : Saisie jour pour mise a l'heure API
     Ihmsaisieheure   : Saisie heure pour mise a l'heure API
     Ihmsaisisminute  : Saisie minute pour mise a l'heure API
     Ihmsaisieseconde : Saisie seconde pour mise a l'heure API
     Ihmordretrf      : Ordre de transfert de la date et heure saise dans l'API

2) SORTIES :
Num_pwincc : Numero page active Wincc Flexible
Diag       : Structure de diagnostic IHM
     Ihmresv              : Reserve
     Ihmnumtache          : Numero de tache
     Ihmparam1            : Parametre 1
     Ihmparam2            : Parametre 2
     Ihmparam3            : Parametre 3
     Ihmlecdateheure      : Date et heure courante sur automate
     Ihmlecdateheure_Res1 : Date et heure courante sur automate Reserve
     Ihmlecdateheure_Res2 : Date et heure courante sur automate Reserve
     Ihmlecdateheure_Res3 : Date et heure courante sur automate Reserve
     Ihmlecdateheure_Res4 : Date et heure courante sur automate Reserve

**************************ENGLISH INFORMATION**********************************
DESCRIPTION:
************
This FB gives current WinCC Flexible screen and can select a screen on operator
panel.

Current active screen number is in output Num_pwincc

Screen selection :
     1 - Indicate screen number to be displayed in Input Num_page
     2 - Screen switch is made when Input Val_page switches from 0 to 1

This FB also updates PLC Time and synchronize operator panel's time with PLC
time only for LOP Panel.

OPERATING :
***************
1) LOP and MOP :
--------------
BF Instance use DB1962 with ""DB_IHM_WINCC""for name. Multi-instance is not
allowed.

2) DLOP :
--------
BF Instance use DB1963 with ""DB_IHM_DLOP""for name. Multi-instance is not
allowed.

3)Wincc for MOP :
-----------------
- On the MOP the declaration of the date and the time on the WinCC application
causes a misalignment of the PC that is problematic for production monitoring
system(SMP).
To solve this problem check that the date/time function  on the PLC is
unvalidated in the link coordination settings under Wincc.

- The IHMP uses the BF input ""Pilot.Ihmavplan"" to allow the Wincc application
to
be displayed in the foreground on the IHMP application.
This variable is associated with a ""ShowScreen"" script under Wincc Flexible.


4)S7 Program for LOP and Dlop :
-------------------------
- Treatment of the Screen Number (""Num_pwincc"" output) for BF_zone_mode_IHM :
The Screen Number must be transferred in BF_Zone_Mode_Ihm associated to the
touch_panel.
1st Touch_panel (LOP) is associated to zone 1
2nd Touch_panel (DLOP) is associated to zone 2
The affectation must be implemented after BF_Ihm_Wincc with siemens ""MOVE""
function.

- Life bit of wincc touch_panel :
Life bit must be generated befor the BF_zone_mode_ihm by siemens ""ADD_I""
function (see the BF_Ihm_Wincc documentation)

IO PARAMETERS:
**************
1)INPUTS :
Val_page   : WinCC flexible screen call validation
Num_page   : Number of the screen to be displayed on Wincc Flexible
Pilot      : HMI control structure
     Ihmnump1         : Current view type
     Ihmnump2         : Current view number
     Ihmnump3         : Spare
     Ihmnump4         : Current field number
     Ihmnump5         : Spare
     Ihmsaisieannee   : Year selection for PLC settings
     Ihmsaisiemois    : Month selection for PLC settings
     Ihmsaisiejour    : Day selection for PLC settings
     Ihmsaisieheure   : Hour selection for PLC settings
     Ihmsaisisminute  : Minute selection for PLC settings
     Ihmsaisieseconde : Second selection for PLC settings
     Ihmordretrf      : Time and hour transfert order from HMI to PLC

2) OUTPUTS :
Num_pwincc : Active screen number in WinCC Flexible RT
Diag       : IHMP diagnosis structure
     Ihmresv              : Spare
     Ihmnumtache          : Task number
     Ihmparam1            : Parameter 1
     Ihmparam2            : Parameter 2
     Ihmparam3            : Parameter 3
     Ihmlecdateheure      : Current Date and Time in PLC
     Ihmlecdateheure_Res1 : Spare current Date and Time in PLC
     Ihmlecdateheure_Res2 : Spare current Date and Time in PLC
     Ihmlecdateheure_Res3 : Spare current Date and Time in PLC
     Ihmlecdateheure_Res4 : Spare current Date and Time in PLC

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 10
Dernier ID mis en oeuvre / Last ID implemented : 1962_10
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"**********************************************************************
*                           BF_IHM_WINCC                             *
*                    Coordination API / Winccflexible                *
*                    Coordination PLC / Winccflexible                *
**********************************************************************
(English description further below)

DESCRIPTION:
************
Ce FB renseigne la page en cours sur Wincc Flexible et permet de selectionner
une page sur le pupitre

Visualisation numero de la page active : Sortie Num_pwincc

Selection page :
     1 - Renseigner le numero de la page a afficher : Entree Num_page
     2 - Le changement de page se fait sur un passage de 0 a 1 de Entree
         Val_page

Il sert ausi a la mise a l'heure de l'automate et synchronise l'heure du
pupitre Wincc Flexible avec l'heure de l'automate uniquement pour un pupitre LOP

MISE en OEUVRE :
***************
1) LOP et MOP :
--------------
Instancier la BF avec le DB1962 et de Nom ""DB_IHM_WINCC"" pas de multi-instance.

2) DLOP :
--------
Instancier la BF avec le DB1963 et de Nom ""DB_IHM_DLOP"" pas de multi-instance.

3)Wincc pour MOP :
-----------------
- Au niveau du MOP la declaration de la date et l'heure au niveau de
l'application WinCC entraine un decalage du PC genant sur le suivi des moyens.
Pour regler ce probleme assure-vous que la fonction date/heure sur l'automate
est devalidee dans le parametre de coordination de la liaison sous Wincc.

- Pour permettre a l'application Wincc de repasser en avant plan sur
l'application IHMP, l'ihmp utilise l'entree ""Pilot.Ihmavplan"" de la BF.
Cette variable est associee a un script ""ShowScreen "" sous Wincc Flexible.

4)Programme S7 pour LOP et Dlop :
-------------------------
- Traitement du Numero de page(Sortie ""Num_pwincc"") pour la BF_zone_mode_IHM :
Le Numero de page doit etre transfere dans la BF_Zone Mode associee au pupitre
touch_panel.
Le 1er Pupitre Touch_panel (LOP) est associe a la zone 1
Le 2eme Pupitre Touch_panel (DLOP) est associe a la zone 2
L'affectation est a mettre en uvre apres la BF_Ihm_Wincc via une fonction MOVE.

- Bit de vie des touch_panel :
Le bit de vie doit etre genere avant la BF_Zone_Mode_IHM via une fonction
""ADD_I"" ( voir documentation BF_IHM_Wincc)

INTERFACE:
**********
1)ENTREES :
Val_page   : Validation appel page Wincc Flexible
Num_page   : Numero de la page a afficher sur Wincc Flexible
Pilot      : Structure de pilotage IHM
     Ihmnump1         : Type de vue courant
     Ihmnump2         : Numero de la vue actuelle
     Ihmnump3         : Reserve
     Ihmnump4         : Numero du champ actuel
     Ihmnump5         : Reserve
     Ihmsaisieannee   : Saisie annee pour mise a l'heure API
     Ihmsaisiemois    : Saisie mois pour mise a l'heure API
     Ihmsaisiejour    : Saisie jour pour mise a l'heure API
     Ihmsaisieheure   : Saisie heure pour mise a l'heure API
     Ihmsaisisminute  : Saisie minute pour mise a l'heure API
     Ihmsaisieseconde : Saisie seconde pour mise a l'heure API
     Ihmordretrf      : Ordre de transfert de la date et heure saise dans l'API

2) SORTIES :
Num_pwincc : Numero page active Wincc Flexible
Diag       : Structure de diagnostic IHM
     Ihmresv              : Reserve
     Ihmnumtache          : Numero de tache
     Ihmparam1            : Parametre 1
     Ihmparam2            : Parametre 2
     Ihmparam3            : Parametre 3
     Ihmlecdateheure      : Date et heure courante sur automate
     Ihmlecdateheure_Res1 : Date et heure courante sur automate Reserve
     Ihmlecdateheure_Res2 : Date et heure courante sur automate Reserve
     Ihmlecdateheure_Res3 : Date et heure courante sur automate Reserve
     Ihmlecdateheure_Res4 : Date et heure courante sur automate Reserve

**************************ENGLISH INFORMATION**********************************
DESCRIPTION:
************
This FB gives current WinCC Flexible screen and can select a screen on operator
panel.

Current active screen number is in output Num_pwincc

Screen selection :
     1 - Indicate screen number to be displayed in Input Num_page
     2 - Screen switch is made when Input Val_page switches from 0 to 1

This FB also updates PLC Time and synchronize operator panel's time with PLC
time only for LOP Panel.

OPERATING :
***************
1) LOP and MOP :
--------------
BF Instance use DB1962 with ""DB_IHM_WINCC""for name. Multi-instance is not
allowed.

2) DLOP :
--------
BF Instance use DB1963 with ""DB_IHM_DLOP""for name. Multi-instance is not
allowed.

3)Wincc for MOP :
-----------------
- On the MOP the declaration of the date and the time on the WinCC application
causes a misalignment of the PC that is problematic for production monitoring
system(SMP).
To solve this problem check that the date/time function  on the PLC is
unvalidated in the link coordination settings under Wincc.

- The IHMP uses the BF input ""Pilot.Ihmavplan"" to allow the Wincc application
to
be displayed in the foreground on the IHMP application.
This variable is associated with a ""ShowScreen"" script under Wincc Flexible.


4)S7 Program for LOP and Dlop :
-------------------------
- Treatment of the Screen Number (""Num_pwincc"" output) for BF_zone_mode_IHM :
The Screen Number must be transferred in BF_Zone_Mode_Ihm associated to the
touch_panel.
1st Touch_panel (LOP) is associated to zone 1
2nd Touch_panel (DLOP) is associated to zone 2
The affectation must be implemented after BF_Ihm_Wincc with siemens ""MOVE""
function.

- Life bit of wincc touch_panel :
Life bit must be generated befor the BF_zone_mode_ihm by siemens ""ADD_I""
function (see the BF_Ihm_Wincc documentation)

IO PARAMETERS:
**************
1)INPUTS :
Val_page   : WinCC flexible screen call validation
Num_page   : Number of the screen to be displayed on Wincc Flexible
Pilot      : HMI control structure
     Ihmnump1         : Current view type
     Ihmnump2         : Current view number
     Ihmnump3         : Spare
     Ihmnump4         : Current field number
     Ihmnump5         : Spare
     Ihmsaisieannee   : Year selection for PLC settings
     Ihmsaisiemois    : Month selection for PLC settings
     Ihmsaisiejour    : Day selection for PLC settings
     Ihmsaisieheure   : Hour selection for PLC settings
     Ihmsaisisminute  : Minute selection for PLC settings
     Ihmsaisieseconde : Second selection for PLC settings
     Ihmordretrf      : Time and hour transfert order from HMI to PLC

2) OUTPUTS :
Num_pwincc : Active screen number in WinCC Flexible RT
Diag       : IHMP diagnosis structure
     Ihmresv              : Spare
     Ihmnumtache          : Task number
     Ihmparam1            : Parameter 1
     Ihmparam2            : Parameter 2
     Ihmparam3            : Parameter 3
     Ihmlecdateheure      : Current Date and Time in PLC
     Ihmlecdateheure_Res1 : Spare current Date and Time in PLC
     Ihmlecdateheure_Res2 : Spare current Date and Time in PLC
     Ihmlecdateheure_Res3 : Spare current Date and Time in PLC
     Ihmlecdateheure_Res4 : Spare current Date and Time in PLC

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 10
Dernier ID mis en oeuvre / Last ID implemented : 1962_10
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"**********************************************************************
*                           BF_IHM_WINCC                             *
*                    Coordination API / Winccflexible                *
*                    Coordination PLC / Winccflexible                *
**********************************************************************
(English description further below)

DESCRIPTION:
************
Ce FB renseigne la page en cours sur Wincc Flexible et permet de selectionner
une page sur le pupitre

Visualisation numero de la page active : Sortie Num_pwincc

Selection page :
     1 - Renseigner le numero de la page a afficher : Entree Num_page
     2 - Le changement de page se fait sur un passage de 0 a 1 de Entree
         Val_page

Il sert ausi a la mise a l'heure de l'automate et synchronise l'heure du
pupitre Wincc Flexible avec l'heure de l'automate uniquement pour un pupitre LOP

MISE en OEUVRE :
***************
1) LOP et MOP :
--------------
Instancier la BF avec le DB1962 et de Nom ""DB_IHM_WINCC"" pas de multi-instance.

2) DLOP :
--------
Instancier la BF avec le DB1963 et de Nom ""DB_IHM_DLOP"" pas de multi-instance.

3)Wincc pour MOP :
-----------------
- Au niveau du MOP la declaration de la date et l'heure au niveau de
l'application WinCC entraine un decalage du PC genant sur le suivi des moyens.
Pour regler ce probleme assure-vous que la fonction date/heure sur l'automate
est devalidee dans le parametre de coordination de la liaison sous Wincc.

- Pour permettre a l'application Wincc de repasser en avant plan sur
l'application IHMP, l'ihmp utilise l'entree ""Pilot.Ihmavplan"" de la BF.
Cette variable est associee a un script ""ShowScreen "" sous Wincc Flexible.

4)Programme S7 pour LOP et Dlop :
-------------------------
- Traitement du Numero de page(Sortie ""Num_pwincc"") pour la BF_zone_mode_IHM :
Le Numero de page doit etre transfere dans la BF_Zone Mode associee au pupitre
touch_panel.
Le 1er Pupitre Touch_panel (LOP) est associe a la zone 1
Le 2eme Pupitre Touch_panel (DLOP) est associe a la zone 2
L'affectation est a mettre en uvre apres la BF_Ihm_Wincc via une fonction MOVE.

- Bit de vie des touch_panel :
Le bit de vie doit etre genere avant la BF_Zone_Mode_IHM via une fonction
""ADD_I"" ( voir documentation BF_IHM_Wincc)

INTERFACE:
**********
1)ENTREES :
Val_page   : Validation appel page Wincc Flexible
Num_page   : Numero de la page a afficher sur Wincc Flexible
Pilot      : Structure de pilotage IHM
     Ihmnump1         : Type de vue courant
     Ihmnump2         : Numero de la vue actuelle
     Ihmnump3         : Reserve
     Ihmnump4         : Numero du champ actuel
     Ihmnump5         : Reserve
     Ihmsaisieannee   : Saisie annee pour mise a l'heure API
     Ihmsaisiemois    : Saisie mois pour mise a l'heure API
     Ihmsaisiejour    : Saisie jour pour mise a l'heure API
     Ihmsaisieheure   : Saisie heure pour mise a l'heure API
     Ihmsaisisminute  : Saisie minute pour mise a l'heure API
     Ihmsaisieseconde : Saisie seconde pour mise a l'heure API
     Ihmordretrf      : Ordre de transfert de la date et heure saise dans l'API

2) SORTIES :
Num_pwincc : Numero page active Wincc Flexible
Diag       : Structure de diagnostic IHM
     Ihmresv              : Reserve
     Ihmnumtache          : Numero de tache
     Ihmparam1            : Parametre 1
     Ihmparam2            : Parametre 2
     Ihmparam3            : Parametre 3
     Ihmlecdateheure      : Date et heure courante sur automate
     Ihmlecdateheure_Res1 : Date et heure courante sur automate Reserve
     Ihmlecdateheure_Res2 : Date et heure courante sur automate Reserve
     Ihmlecdateheure_Res3 : Date et heure courante sur automate Reserve
     Ihmlecdateheure_Res4 : Date et heure courante sur automate Reserve

**************************ENGLISH INFORMATION**********************************
DESCRIPTION:
************
This FB gives current WinCC Flexible screen and can select a screen on operator
panel.

Current active screen number is in output Num_pwincc

Screen selection :
     1 - Indicate screen number to be displayed in Input Num_page
     2 - Screen switch is made when Input Val_page switches from 0 to 1

This FB also updates PLC Time and synchronize operator panel's time with PLC
time only for LOP Panel.

OPERATING :
***************
1) LOP and MOP :
--------------
BF Instance use DB1962 with ""DB_IHM_WINCC""for name. Multi-instance is not
allowed.

2) DLOP :
--------
BF Instance use DB1963 with ""DB_IHM_DLOP""for name. Multi-instance is not
allowed.

3)Wincc for MOP :
-----------------
- On the MOP the declaration of the date and the time on the WinCC application
causes a misalignment of the PC that is problematic for production monitoring
system(SMP).
To solve this problem check that the date/time function  on the PLC is
unvalidated in the link coordination settings under Wincc.

- The IHMP uses the BF input ""Pilot.Ihmavplan"" to allow the Wincc application
to
be displayed in the foreground on the IHMP application.
This variable is associated with a ""ShowScreen"" script under Wincc Flexible.


4)S7 Program for LOP and Dlop :
-------------------------
- Treatment of the Screen Number (""Num_pwincc"" output) for BF_zone_mode_IHM :
The Screen Number must be transferred in BF_Zone_Mode_Ihm associated to the
touch_panel.
1st Touch_panel (LOP) is associated to zone 1
2nd Touch_panel (DLOP) is associated to zone 2
The affectation must be implemented after BF_Ihm_Wincc with siemens ""MOVE""
function.

- Life bit of wincc touch_panel :
Life bit must be generated befor the BF_zone_mode_ihm by siemens ""ADD_I""
function (see the BF_Ihm_Wincc documentation)

IO PARAMETERS:
**************
1)INPUTS :
Val_page   : WinCC flexible screen call validation
Num_page   : Number of the screen to be displayed on Wincc Flexible
Pilot      : HMI control structure
     Ihmnump1         : Current view type
     Ihmnump2         : Current view number
     Ihmnump3         : Spare
     Ihmnump4         : Current field number
     Ihmnump5         : Spare
     Ihmsaisieannee   : Year selection for PLC settings
     Ihmsaisiemois    : Month selection for PLC settings
     Ihmsaisiejour    : Day selection for PLC settings
     Ihmsaisieheure   : Hour selection for PLC settings
     Ihmsaisisminute  : Minute selection for PLC settings
     Ihmsaisieseconde : Second selection for PLC settings
     Ihmordretrf      : Time and hour transfert order from HMI to PLC

2) OUTPUTS :
Num_pwincc : Active screen number in WinCC Flexible RT
Diag       : IHMP diagnosis structure
     Ihmresv              : Spare
     Ihmnumtache          : Task number
     Ihmparam1            : Parameter 1
     Ihmparam2            : Parameter 2
     Ihmparam3            : Parameter 3
     Ihmlecdateheure      : Current Date and Time in PLC
     Ihmlecdateheure_Res1 : Spare current Date and Time in PLC
     Ihmlecdateheure_Res2 : Spare current Date and Time in PLC
     Ihmlecdateheure_Res3 : Spare current Date and Time in PLC
     Ihmlecdateheure_Res4 : Spare current Date and Time in PLC

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 10
Dernier ID mis en oeuvre / Last ID implemented : 1962_10
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";""
"********************************************************************************
*                            BF ""RB_SERVICE""                                   *
*       ASSURE LA GESTION PAR GROUPE DE RODAGE OU CHANGEMENT D'ELECTRODES      *
*             MANAGE TIP DRESSING OR TIP REPLACEMENT BY GROUP                  *
********************************************************************************
(IN English futher below)

DESCRIPTION:
************
Ce FB permet de gérer le rodage ou le changement d'electrodes par l'automate
en définissant au maximum 4 groupes auxquels chaque robot de l'ilot appartient.
POUR LA DESCRIPTION DETAILLEE DU FB : VOIR GUIDE GE03.FP.242

MISE EN OEUVRE :
****************
- Rd_che : paramétre de choix du mode rodage ou changement électrodes :
           Rd_che = 1 = RODAGE
           Rd_che = 0 = CHANGEMENT ELECTRODES
- Num_rb : affecter à chaque robot de la zone un numéro compris entre 1 et 16
- Gestion des groupes :
   - GR1 : Liste des robots du Groupe 1 (Tableau de 16 bits)
   - GR2 : Liste des robots du Groupe 2 (Tableau de 16 bits)
   - GR3 : Liste des robots du Groupe 3 (Tableau de 16 bits)
   - GR4 : Liste des robots du Groupe 4 (Tableau de 16 bits)
  Pour assurer les liens avec les écrans IHMP les variable de groupe sont à
  déclarer en fonction du mode retenu:
   - Pour un rodage :
    Declarer un Structure (ROD) sous ZxG ( x = Numero de la zone) contenant 4

    variables de type Array of 16 bools.
    ZxG.ROD.GR<Num du groupe>
   - Pour un Changement d'électrode :
    Declarer un Structure (CHELA) sous ZxG ( x = Numero de la zone) contenant 4

    variables de type Array of 16 bools.
    ZxG.CHELA.GR<Num du groupe>
- Mdsv et Mfsv : Information à échanger entre les BF_RB_service et a déclarer
                 sous ZxG
- Lien avec les écrans IHMP :
  Pour lus de détail voir documentation du bloc.
  Les liens avec les écrans sont assurés :
   par des structures déclarées sous ZxG ( CHELM )
   ou
   Par des variables STAT mise en oeuvre au niveau du FB du sous enssemble Robot

CODE DE DEFAULT :
*****************
Non Utilisé

***************************** ENGLISH INFORMATION ******************************

DESCRIPTION:
************
 This FB manage the Tip dressing or the tip replacement by PLC by
defining at most 4 groups of robots.
FOR THE DETAILED DESCRIPTION OF the FB: SEE GE03. FP.242

OPERATING :
***********
- Rd_che: choice of Mode parameter Tip dressing or tip replacement :
           Rd_che = 1 = TIP DRESSING
           RD_che = 0 = TIP REPLACEMENT
- Num_rb: allocate to each robot of the zone a identifier between 1 and
16
- Group Management :
   - GR1: Robots list in the Group 1 (Array of 16 bools)
   - GR2: Robots list in the Group 2 (Array of 16 bools)
   - GR3: Robots list in the Group 3 (Array of 16 bools)
   - GR4: Robots list in the Group 4 (Array of 16 bools)
To ensure the links with IHMP screens, groups are to declare according to the
mode chosen :
   - For a Tip dressing:
     Create one Structure (ROD) in ZxG (x = zone number) containing 4
     variables of Array of 16 bools type.
     ZxG.ROD.GR < Num of the group >
  - For a tip replacement:
     Create one Structure (CHELA) in ZxG (x = zone number) containing 4
     variables of Array of 16 bools type .
    ZxG.CHELA.GR < Num of the group >
- Mdsv and Mfsv: Information to be exchanged between the BF_RB_service and
  to be created in ZxG

- Link with IHMP screens:
 for more details, see the documentation of the block.
  The links with screens are ensured:
   By structure created under ZxG ( CHELM)
   or
   By STAT variables implemented at the level of the FB on Robot Sub assembly

FAULT CODE :
**********
 Not used

****************************ODIL_ID****************************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 17
Dernier ID mis en oeuvre / Last ID implemented : 1997_18
            (Ajout reseau0 surV2-2 / Neetwork0 added in V2-2)
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : sans objet / NO  (V2-2 : decalage de tous les reseaux/ V2-2 all
neetwork moving of one )

";"********************************************************************************
*                            BF ""RB_SERVICE""                                   *
*       ASSURE LA GESTION PAR GROUPE DE RODAGE OU CHANGEMENT D'ELECTRODES      *
*             MANAGE TIP DRESSING OR TIP REPLACEMENT BY GROUP                  *
********************************************************************************
(IN English futher below)

DESCRIPTION:
************
Ce FB permet de gérer le rodage ou le changement d'electrodes par l'automate
en définissant au maximum 4 groupes auxquels chaque robot de l'ilot appartient.
POUR LA DESCRIPTION DETAILLEE DU FB : VOIR GUIDE GE03.FP.242

MISE EN OEUVRE :
****************
- Rd_che : paramétre de choix du mode rodage ou changement électrodes :
           Rd_che = 1 = RODAGE
           Rd_che = 0 = CHANGEMENT ELECTRODES
- Num_rb : affecter à chaque robot de la zone un numéro compris entre 1 et 16
- Gestion des groupes :
   - GR1 : Liste des robots du Groupe 1 (Tableau de 16 bits)
   - GR2 : Liste des robots du Groupe 2 (Tableau de 16 bits)
   - GR3 : Liste des robots du Groupe 3 (Tableau de 16 bits)
   - GR4 : Liste des robots du Groupe 4 (Tableau de 16 bits)
  Pour assurer les liens avec les écrans IHMP les variable de groupe sont à
  déclarer en fonction du mode retenu:
   - Pour un rodage :
    Declarer un Structure (ROD) sous ZxG ( x = Numero de la zone) contenant 4

    variables de type Array of 16 bools.
    ZxG.ROD.GR<Num du groupe>
   - Pour un Changement d'électrode :
    Declarer un Structure (CHELA) sous ZxG ( x = Numero de la zone) contenant 4

    variables de type Array of 16 bools.
    ZxG.CHELA.GR<Num du groupe>
- Mdsv et Mfsv : Information à échanger entre les BF_RB_service et a déclarer
                 sous ZxG
- Lien avec les écrans IHMP :
  Pour lus de détail voir documentation du bloc.
  Les liens avec les écrans sont assurés :
   par des structures déclarées sous ZxG ( CHELM )
   ou
   Par des variables STAT mise en oeuvre au niveau du FB du sous enssemble Robot

CODE DE DEFAULT :
*****************
Non Utilisé

***************************** ENGLISH INFORMATION ******************************

DESCRIPTION:
************
 This FB manage the Tip dressing or the tip replacement by PLC by
defining at most 4 groups of robots.
FOR THE DETAILED DESCRIPTION OF the FB: SEE GE03. FP.242

OPERATING :
***********
- Rd_che: choice of Mode parameter Tip dressing or tip replacement :
           Rd_che = 1 = TIP DRESSING
           RD_che = 0 = TIP REPLACEMENT
- Num_rb: allocate to each robot of the zone a identifier between 1 and
16
- Group Management :
   - GR1: Robots list in the Group 1 (Array of 16 bools)
   - GR2: Robots list in the Group 2 (Array of 16 bools)
   - GR3: Robots list in the Group 3 (Array of 16 bools)
   - GR4: Robots list in the Group 4 (Array of 16 bools)
To ensure the links with IHMP screens, groups are to declare according to the
mode chosen :
   - For a Tip dressing:
     Create one Structure (ROD) in ZxG (x = zone number) containing 4
     variables of Array of 16 bools type.
     ZxG.ROD.GR < Num of the group >
  - For a tip replacement:
     Create one Structure (CHELA) in ZxG (x = zone number) containing 4
     variables of Array of 16 bools type .
    ZxG.CHELA.GR < Num of the group >
- Mdsv and Mfsv: Information to be exchanged between the BF_RB_service and
  to be created in ZxG

- Link with IHMP screens:
 for more details, see the documentation of the block.
  The links with screens are ensured:
   By structure created under ZxG ( CHELM)
   or
   By STAT variables implemented at the level of the FB on Robot Sub assembly

FAULT CODE :
**********
 Not used

****************************ODIL_ID****************************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 17
Dernier ID mis en oeuvre / Last ID implemented : 1997_18
            (Ajout reseau0 surV2-2 / Neetwork0 added in V2-2)
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : sans objet / NO  (V2-2 : decalage de tous les reseaux/ V2-2 all
neetwork moving of one )

";"********************************************************************************
*                            BF ""RB_SERVICE""                                   *
*       ASSURE LA GESTION PAR GROUPE DE RODAGE OU CHANGEMENT D'ELECTRODES      *
*             MANAGE TIP DRESSING OR TIP REPLACEMENT BY GROUP                  *
********************************************************************************
(IN English futher below)

DESCRIPTION:
************
Ce FB permet de gérer le rodage ou le changement d'electrodes par l'automate
en définissant au maximum 4 groupes auxquels chaque robot de l'ilot appartient.
POUR LA DESCRIPTION DETAILLEE DU FB : VOIR GUIDE GE03.FP.242

MISE EN OEUVRE :
****************
- Rd_che : paramétre de choix du mode rodage ou changement électrodes :
           Rd_che = 1 = RODAGE
           Rd_che = 0 = CHANGEMENT ELECTRODES
- Num_rb : affecter à chaque robot de la zone un numéro compris entre 1 et 16
- Gestion des groupes :
   - GR1 : Liste des robots du Groupe 1 (Tableau de 16 bits)
   - GR2 : Liste des robots du Groupe 2 (Tableau de 16 bits)
   - GR3 : Liste des robots du Groupe 3 (Tableau de 16 bits)
   - GR4 : Liste des robots du Groupe 4 (Tableau de 16 bits)
  Pour assurer les liens avec les écrans IHMP les variable de groupe sont à
  déclarer en fonction du mode retenu:
   - Pour un rodage :
    Declarer un Structure (ROD) sous ZxG ( x = Numero de la zone) contenant 4

    variables de type Array of 16 bools.
    ZxG.ROD.GR<Num du groupe>
   - Pour un Changement d'électrode :
    Declarer un Structure (CHELA) sous ZxG ( x = Numero de la zone) contenant 4

    variables de type Array of 16 bools.
    ZxG.CHELA.GR<Num du groupe>
- Mdsv et Mfsv : Information à échanger entre les BF_RB_service et a déclarer
                 sous ZxG
- Lien avec les écrans IHMP :
  Pour lus de détail voir documentation du bloc.
  Les liens avec les écrans sont assurés :
   par des structures déclarées sous ZxG ( CHELM )
   ou
   Par des variables STAT mise en oeuvre au niveau du FB du sous enssemble Robot

CODE DE DEFAULT :
*****************
Non Utilisé

***************************** ENGLISH INFORMATION ******************************

DESCRIPTION:
************
 This FB manage the Tip dressing or the tip replacement by PLC by
defining at most 4 groups of robots.
FOR THE DETAILED DESCRIPTION OF the FB: SEE GE03. FP.242

OPERATING :
***********
- Rd_che: choice of Mode parameter Tip dressing or tip replacement :
           Rd_che = 1 = TIP DRESSING
           RD_che = 0 = TIP REPLACEMENT
- Num_rb: allocate to each robot of the zone a identifier between 1 and
16
- Group Management :
   - GR1: Robots list in the Group 1 (Array of 16 bools)
   - GR2: Robots list in the Group 2 (Array of 16 bools)
   - GR3: Robots list in the Group 3 (Array of 16 bools)
   - GR4: Robots list in the Group 4 (Array of 16 bools)
To ensure the links with IHMP screens, groups are to declare according to the
mode chosen :
   - For a Tip dressing:
     Create one Structure (ROD) in ZxG (x = zone number) containing 4
     variables of Array of 16 bools type.
     ZxG.ROD.GR < Num of the group >
  - For a tip replacement:
     Create one Structure (CHELA) in ZxG (x = zone number) containing 4
     variables of Array of 16 bools type .
    ZxG.CHELA.GR < Num of the group >
- Mdsv and Mfsv: Information to be exchanged between the BF_RB_service and
  to be created in ZxG

- Link with IHMP screens:
 for more details, see the documentation of the block.
  The links with screens are ensured:
   By structure created under ZxG ( CHELM)
   or
   By STAT variables implemented at the level of the FB on Robot Sub assembly

FAULT CODE :
**********
 Not used

****************************ODIL_ID****************************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 17
Dernier ID mis en oeuvre / Last ID implemented : 1997_18
            (Ajout reseau0 surV2-2 / Neetwork0 added in V2-2)
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : sans objet / NO  (V2-2 : decalage de tous les reseaux/ V2-2 all
neetwork moving of one )

";""
"********************************************************************************
*                                BF MMC                                        *
*                                                                              *
*         PERMET LA SAUVEGARDE MANUELLE DES ETATS DES INFO PIECES              *
*                 AINSI QUE LA RESTITUTION DES ETATS                           *
*                                                                              *
*      USED FOR MANUAL BACK-UP COPY OF PART DATA AS WELL AS RESTORATION        *
********************************************************************************
( In English further below)
DESCRIPTION:
************
LE FB MMC ASSURE:
-LA SAUVEGARDE MANUELLE DES ETATS DE DB VERS DES DB SUR LA MMC
-LA RESTITUTION MANUELLE DES ETATS DE DB MMC VERS DES DB AUTOMATE

CETTE SAUVEGARDE ou RESTITUTION EST UNIQUEMENT POSSIBLE QUAND MODE MANUEL SUR
L'INSTALATION

MISE EN OEUVRE
***************
- La sauvegarde des donnees dans la MMC est assuree par Le DB2000 ""DB_MMC"" qui
  doit etre cree avec l'attribut UNLINKED.
- Il est conseille d'utilliser la meme structure entre le DB_MMC et le ou les
  DBs a sauvegarder pour facilite la lecture dans le DB2000
- Pour garantir la coherence des donnees, vous ne devez pas modifier la zone
  source durant l'execution du bloc.
  Pour cela l'entree Manu de la BF doit recevoir l'information de toutes les
  zones de l'ilot en Manuel (somme des ZxG.manu issue des BF_zone_modes_IHM).
- L'entree Iadf recevoir l'image de l'annulation des defaut sur l'ilot
  ( IG.iadf issue de la BF_ILOT)
- l'activation de l'entree Pilot.IhmDde_Trf lance une ecriture sur la MMC
(Pilot.IhmSens=1) ou une lecture de la MMC (Pilot.IhmSens=0). Il faut au
prealable renseigner les autres informations de l'entree Pilot (voir
documentation de la BF_MMC sur modification du script sous Wincc.)
- La mise en oeuvre de la BF est associe a des ecrans Wincc

CODES de defaut :
****************
1) Diag .codedef :
1 = Defaut de la fonction sauvegarde (API --> MMC)
2 = Defaut de restitution (MMC --> API)

2) Diag.Ihmerreur: N° de defaut ou d'etat en hexa des fonctions SFC83 ou 84
(Lecture ecriture)

a) information d'etat :
0000 = Pas d'erreur
0081 = La zone cible est plus grande que la zone source. La zone source est
       inscrite entierement dans la zone cible, les octets restants de la zone

     cible n'etant pas modifies.
7000 = Premier appel avec REQ=0 : pas de transmission de donnees active ; BUSY
       a la valeur 0.
7001 = Premier appel avec REQ=1 : la transmission de donnees a ete lancee ;
      BUSY a la valeur 1.
7002 = Appel intermediaire (REQ insignifiant) : la transmission de donnees est
       deja active ; BUSY a la valeur 1.

b) information de defaut
8081 = La zone source est plus grande que la zone cible. La zone cible est
     entierement ecrasee, les octets restants de la zone source etant ignores.
8093 = Aucun bloc de donnees ou un bloc de donnees ne se trouvant pas dans la
      memoire de travail est indique au parametre DSTBLK.
80B1 = Aucun bloc de donnees n'est indique au parametre SRCBLK, ou le bloc de
      donnees qui y est indique n'est pas un objet de la memoire de chargement
      (p. ex.un DB cree par la SFC 22).
80B4 = Il n'est pas permis de lire un DB a attribut F.
80C0 = Le DB cible est en cours de traitement par une autre SFC ou une fonction
       de communication.
80C3 = Le nombre maximum de SFC 83 simultanement actives est momentanement deja
       atteint.

c) Informations d'erreur generales
8x7F = Erreur interne Ce code d'erreur signale une erreur interne au niveau du
       parametre x.
8x01 = Identificateur de syntaxe illicite pour un parametre ANY
8x22 = Erreur de longueur de zone a la lecture d'un parametre
8x23 = Erreur de longueur de zone a l'ecriture d'un parametre
      Ce code d'erreur signale que le parametre x est entierement ou
       partiellement situe hors de la zone d'operandes ou que la longueur d'un

     champ de bits n'est pas divisible par 8 dans un parametre ANY.
8x24 = Erreur de zone a la lecture d'un parametre
8x25 = Erreur de zone a l'ecriture d'un parametre
      Ce code d'erreur signale que le parametre x est situe dans une zone
      illicite pour cette fonction systeme. La description de chaque fonction

   precise les zones illicites pour cette fonction.
8x26 = Le parametre contient un numero de cellule de temporisation trop
      grand.Ce code d'erreur signale que la cellule de temporisation precisee

   dans le parametre x n'existe pas.
8x27 = Le parametre contient un numero de cellule de comptage trop grand
       (numero de compteur errone).Ce code d'erreur signale que la cellule de

     comptage precisee dans le parametre x n'existe pas.
8x28 = Erreur d'alignement a la lecture d'un parametre
8x29 = Erreur d'alignement a l'ecriture d'un parametre
      Ce code d'erreur signale que la reference au parametre x est un operande
      dont l'adresse de bit n'est pas 0.
8x30 = Le parametre se trouve dans le bloc de donnees global protege en
       ecriture.
8x31 = Le parametre se trouve dans le bloc de donnees d'instance protege en
       ecriture.Ce code d'erreur signale que le parametre x se trouve dans un

    bloc de donnees protege en ecriture. Si ce bloc de donnees a ete ouvert

 par la fonction systeme elle-meme, elle sort toujours la valeur W#16#8x30.
8x32 = Le parametre contient un numero de DB trop grand (numero de DB errone).
8x34 = Le parametre contient un numero de FC trop grand (numero de FC errone).
8x35 = Le parametre contient un numero de FB trop grand (numero de FB errone).
      Ce code d'erreur signale que le parametre x contient un numero de bloc
       superieur au plus grand numero admis.
8x3A = Le parametre contient le numero d'un DB qui n'est pas charge.
8x3C = Le parametre contient le numero d'une FC qui n'est pas chargee.
8x3E = Le parametre contient le numero d'un FB qui n'est pas charge.
8x42 = Erreur d'acces lors d'une tentative de lecture d'un parametre dans la
       zone de peripherie des entrees
8x43 = Erreur d'acces lors d'une tentative d'ecriture d'un parametre dans la
       zone de peripherie des sorties
8x44 = Erreur lors du n-ieme (n > 1) acces en lecture apres l'apparition d'une
       erreur
8x45 = Erreur lors du n-ieme (n > 1) acces en ecriture apres l'apparition d'une
       erreur ce code d'erreur signale que l'acces au parametre souhaite est
refuse.

************************** ENGLISH INFORMATION  ****************************
DESCRIPTION :
*************
 THE FB MMC ENSURES:
- THE MANUAL BACK-UP COPY OF THE STATES OF PLC DB TOWARDS MMC DB
- The MANUAL RESTORATION OF THE STATES OF MMC DB TOWARDS PLC DB

THIS BACK-UP COPY or RESTORATION IS ONLY POSSIBLE IF THE INSTALATION IS IN
MANUAL MODE

OPERATING :
***********
- The back-up copy of the data in the MMC is ensured by The DB2000 ""DB_MMC"".
  This DB must be created with the attribute UNLINKED (For more details see BF
  documentation).
- To make easier data reading in the DB 2000 we recommend using the same
structure (format) as the one of the DB or DBs to be backed up.
- To guarantee the coherence of the data, you can not modify source data during
  the execution of this block.
  That's why, Manu input of BF must receive all Manual Mode informations of the
  facility (sum of the ZxG.manu coming from BF_zone_modes_IHM).
- The Iadf input receive the image of Facility Fault reset (IG.iadf coming from
  the BF_ILOT)
- The activation of Pilot.IhmDde_Trf input launches a back-up copy on the MMC
(with Pilot.IhmSens=1) or a PLC restoration from the MMC (With Pilot.
IhmSens=0). (this activation comes from MMC Wincc screen)
It is beforehand necessary to fill the other information of Pilot input
(For more information see The BF_MMC documentation in Wincc script chapter)
- the implementation of the BF is associated to MMC Wincc screen.

FAULT CODES :
*************
1) Diag .codedef : ( For HMI)
1 = Back-up copy Fault (PLC -(to)-> MMC)
2 = Restoration Fault  (MMC -(to)-> PLC)

2) Diag.Ihmerreur: Fault or Status values of SFC83 or 84 in Hexadecimal
(Reading or writing function )

a) Status information :
0000 = No error
0081 = The target zone is larger than the source zone. The source zone is
       entirely written in the target zone, the remaining bytes in the target
       zone are not modified.
7000 = First call with REQ=0: data transmission not activated: BUSY is set to

       the value 0.
7001 = First call with REQ=1: data transmission has been started: BUSY is set
to
       the value 1.
7002 = Intermediate call (REQ not significant): data transmission is already
       activated: BUSY is set to the value 1.

b) Fault informations :
8081 = The source zone is larger than the target zone. The target zone is
     completely overwritten, the remaining bytes in the source zone are ignored.
8093 =  There is no Data Block or a Data Block that is not in the work buffer
is
        indicated in the DSTBLK setting.
80B1 = There is no Data Block indicated in the SRCBLK setting, or the Data
Block
       that is indicated in SRCBLK is not an object in the loading buffer
       (e.g. a DB created by the SFC 22).
80B4 = It is forbidden to read a DB with the F attribute.
80C0 = The target DB is being processed by another SFC or by a communication
       function.
80C3 = The maximum number of SFC 83 active at the same time has been reached at
       the present time.

C) General Fault informations
   X represents the Setting No. in the SFC 83 or 84 function
8x7F = Internal error. This error code signals an internal error for setting x.
8x01 = Illicit syntax identifier for an Any setting
8x22 = Zone length error on a setting read
8x23 = Zone length error on a setting write. This error code means that the

      setting x is completely or partly located outside the operand zone or

     that the length of a field of bits is not divisible by 8 in an Any setting.
8x24 = Zone error on a setting read
8x25 = Zone error on a setting write. This error code means that the setting x

     is located in an illicit zone for this system function. The description

   of each function specifies the illicit zones for the function.
8x26 = The setting contains a timeout cell number that is too large. This error

    code means that the timeout cell specified in setting x does not exist.
8x27 = The setting contains a counting cell number that is too large (incorrect

      counter number). This error code means that the counting cell specified

    in setting x does not exist.
8x28 = Alignment error on a setting read
8x29 = Alignment error on a setting write. This error code means that the
       reference to setting x is an operand whose bit address is not 0.
8x30 = The setting is located in the write-protected global data block.
8x31 = The setting is located in the write-protected instance data block. This
       error code means that the setting x is located in a write-protected data

      block. If this data block was opened by the system function itself it
       always has the value W#16#8x30.
8x32 = The setting contains a DB number that is too large (incorrect DB number).
8x34 = The setting contains an FC number that is too large
       (incorrect FC number).
8x35 = The setting contains an FB number that is too large
     (incorrect FB number). This error code means that the setting x contains a
      block number greater than the largest permitted number.
8x3A = The setting contains the number of a DB that is not loaded.
8x3C = The setting contains the number of an FC that is not loaded.
8x3A = The setting contains the number of an FB that is not loaded.
8x42 = Access error when trying to read a setting in the input peripheral zone
8x43 = Access error when trying to write a setting in the output peripheral zone
8x44 = Error during the nth (n > 1) read access after an error occurs
8x45 = Error during the nth (n > 1) write access after an error occurs. This
       error code means that the access to the desired setting is refused.

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 19
Dernier ID mis en oeuvre / Last ID implemented : 2000_19
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"********************************************************************************
*                                BF MMC                                        *
*                                                                              *
*         PERMET LA SAUVEGARDE MANUELLE DES ETATS DES INFO PIECES              *
*                 AINSI QUE LA RESTITUTION DES ETATS                           *
*                                                                              *
*      USED FOR MANUAL BACK-UP COPY OF PART DATA AS WELL AS RESTORATION        *
********************************************************************************
( In English further below)
DESCRIPTION:
************
LE FB MMC ASSURE:
-LA SAUVEGARDE MANUELLE DES ETATS DE DB VERS DES DB SUR LA MMC
-LA RESTITUTION MANUELLE DES ETATS DE DB MMC VERS DES DB AUTOMATE

CETTE SAUVEGARDE ou RESTITUTION EST UNIQUEMENT POSSIBLE QUAND MODE MANUEL SUR
L'INSTALATION

MISE EN OEUVRE
***************
- La sauvegarde des donnees dans la MMC est assuree par Le DB2000 ""DB_MMC"" qui
  doit etre cree avec l'attribut UNLINKED.
- Il est conseille d'utilliser la meme structure entre le DB_MMC et le ou les
  DBs a sauvegarder pour facilite la lecture dans le DB2000
- Pour garantir la coherence des donnees, vous ne devez pas modifier la zone
  source durant l'execution du bloc.
  Pour cela l'entree Manu de la BF doit recevoir l'information de toutes les
  zones de l'ilot en Manuel (somme des ZxG.manu issue des BF_zone_modes_IHM).
- L'entree Iadf recevoir l'image de l'annulation des defaut sur l'ilot
  ( IG.iadf issue de la BF_ILOT)
- l'activation de l'entree Pilot.IhmDde_Trf lance une ecriture sur la MMC
(Pilot.IhmSens=1) ou une lecture de la MMC (Pilot.IhmSens=0). Il faut au
prealable renseigner les autres informations de l'entree Pilot (voir
documentation de la BF_MMC sur modification du script sous Wincc.)
- La mise en oeuvre de la BF est associe a des ecrans Wincc

CODES de defaut :
****************
1) Diag .codedef :
1 = Defaut de la fonction sauvegarde (API --> MMC)
2 = Defaut de restitution (MMC --> API)

2) Diag.Ihmerreur: N° de defaut ou d'etat en hexa des fonctions SFC83 ou 84
(Lecture ecriture)

a) information d'etat :
0000 = Pas d'erreur
0081 = La zone cible est plus grande que la zone source. La zone source est
       inscrite entierement dans la zone cible, les octets restants de la zone

     cible n'etant pas modifies.
7000 = Premier appel avec REQ=0 : pas de transmission de donnees active ; BUSY
       a la valeur 0.
7001 = Premier appel avec REQ=1 : la transmission de donnees a ete lancee ;
      BUSY a la valeur 1.
7002 = Appel intermediaire (REQ insignifiant) : la transmission de donnees est
       deja active ; BUSY a la valeur 1.

b) information de defaut
8081 = La zone source est plus grande que la zone cible. La zone cible est
     entierement ecrasee, les octets restants de la zone source etant ignores.
8093 = Aucun bloc de donnees ou un bloc de donnees ne se trouvant pas dans la
      memoire de travail est indique au parametre DSTBLK.
80B1 = Aucun bloc de donnees n'est indique au parametre SRCBLK, ou le bloc de
      donnees qui y est indique n'est pas un objet de la memoire de chargement
      (p. ex.un DB cree par la SFC 22).
80B4 = Il n'est pas permis de lire un DB a attribut F.
80C0 = Le DB cible est en cours de traitement par une autre SFC ou une fonction
       de communication.
80C3 = Le nombre maximum de SFC 83 simultanement actives est momentanement deja
       atteint.

c) Informations d'erreur generales
8x7F = Erreur interne Ce code d'erreur signale une erreur interne au niveau du
       parametre x.
8x01 = Identificateur de syntaxe illicite pour un parametre ANY
8x22 = Erreur de longueur de zone a la lecture d'un parametre
8x23 = Erreur de longueur de zone a l'ecriture d'un parametre
      Ce code d'erreur signale que le parametre x est entierement ou
       partiellement situe hors de la zone d'operandes ou que la longueur d'un

     champ de bits n'est pas divisible par 8 dans un parametre ANY.
8x24 = Erreur de zone a la lecture d'un parametre
8x25 = Erreur de zone a l'ecriture d'un parametre
      Ce code d'erreur signale que le parametre x est situe dans une zone
      illicite pour cette fonction systeme. La description de chaque fonction

   precise les zones illicites pour cette fonction.
8x26 = Le parametre contient un numero de cellule de temporisation trop
      grand.Ce code d'erreur signale que la cellule de temporisation precisee

   dans le parametre x n'existe pas.
8x27 = Le parametre contient un numero de cellule de comptage trop grand
       (numero de compteur errone).Ce code d'erreur signale que la cellule de

     comptage precisee dans le parametre x n'existe pas.
8x28 = Erreur d'alignement a la lecture d'un parametre
8x29 = Erreur d'alignement a l'ecriture d'un parametre
      Ce code d'erreur signale que la reference au parametre x est un operande
      dont l'adresse de bit n'est pas 0.
8x30 = Le parametre se trouve dans le bloc de donnees global protege en
       ecriture.
8x31 = Le parametre se trouve dans le bloc de donnees d'instance protege en
       ecriture.Ce code d'erreur signale que le parametre x se trouve dans un

    bloc de donnees protege en ecriture. Si ce bloc de donnees a ete ouvert

 par la fonction systeme elle-meme, elle sort toujours la valeur W#16#8x30.
8x32 = Le parametre contient un numero de DB trop grand (numero de DB errone).
8x34 = Le parametre contient un numero de FC trop grand (numero de FC errone).
8x35 = Le parametre contient un numero de FB trop grand (numero de FB errone).
      Ce code d'erreur signale que le parametre x contient un numero de bloc
       superieur au plus grand numero admis.
8x3A = Le parametre contient le numero d'un DB qui n'est pas charge.
8x3C = Le parametre contient le numero d'une FC qui n'est pas chargee.
8x3E = Le parametre contient le numero d'un FB qui n'est pas charge.
8x42 = Erreur d'acces lors d'une tentative de lecture d'un parametre dans la
       zone de peripherie des entrees
8x43 = Erreur d'acces lors d'une tentative d'ecriture d'un parametre dans la
       zone de peripherie des sorties
8x44 = Erreur lors du n-ieme (n > 1) acces en lecture apres l'apparition d'une
       erreur
8x45 = Erreur lors du n-ieme (n > 1) acces en ecriture apres l'apparition d'une
       erreur ce code d'erreur signale que l'acces au parametre souhaite est
refuse.

************************** ENGLISH INFORMATION  ****************************
DESCRIPTION :
*************
 THE FB MMC ENSURES:
- THE MANUAL BACK-UP COPY OF THE STATES OF PLC DB TOWARDS MMC DB
- The MANUAL RESTORATION OF THE STATES OF MMC DB TOWARDS PLC DB

THIS BACK-UP COPY or RESTORATION IS ONLY POSSIBLE IF THE INSTALATION IS IN
MANUAL MODE

OPERATING :
***********
- The back-up copy of the data in the MMC is ensured by The DB2000 ""DB_MMC"".
  This DB must be created with the attribute UNLINKED (For more details see BF
  documentation).
- To make easier data reading in the DB 2000 we recommend using the same
structure (format) as the one of the DB or DBs to be backed up.
- To guarantee the coherence of the data, you can not modify source data during
  the execution of this block.
  That's why, Manu input of BF must receive all Manual Mode informations of the
  facility (sum of the ZxG.manu coming from BF_zone_modes_IHM).
- The Iadf input receive the image of Facility Fault reset (IG.iadf coming from
  the BF_ILOT)
- The activation of Pilot.IhmDde_Trf input launches a back-up copy on the MMC
(with Pilot.IhmSens=1) or a PLC restoration from the MMC (With Pilot.
IhmSens=0). (this activation comes from MMC Wincc screen)
It is beforehand necessary to fill the other information of Pilot input
(For more information see The BF_MMC documentation in Wincc script chapter)
- the implementation of the BF is associated to MMC Wincc screen.

FAULT CODES :
*************
1) Diag .codedef : ( For HMI)
1 = Back-up copy Fault (PLC -(to)-> MMC)
2 = Restoration Fault  (MMC -(to)-> PLC)

2) Diag.Ihmerreur: Fault or Status values of SFC83 or 84 in Hexadecimal
(Reading or writing function )

a) Status information :
0000 = No error
0081 = The target zone is larger than the source zone. The source zone is
       entirely written in the target zone, the remaining bytes in the target
       zone are not modified.
7000 = First call with REQ=0: data transmission not activated: BUSY is set to

       the value 0.
7001 = First call with REQ=1: data transmission has been started: BUSY is set
to
       the value 1.
7002 = Intermediate call (REQ not significant): data transmission is already
       activated: BUSY is set to the value 1.

b) Fault informations :
8081 = The source zone is larger than the target zone. The target zone is
     completely overwritten, the remaining bytes in the source zone are ignored.
8093 =  There is no Data Block or a Data Block that is not in the work buffer
is
        indicated in the DSTBLK setting.
80B1 = There is no Data Block indicated in the SRCBLK setting, or the Data
Block
       that is indicated in SRCBLK is not an object in the loading buffer
       (e.g. a DB created by the SFC 22).
80B4 = It is forbidden to read a DB with the F attribute.
80C0 = The target DB is being processed by another SFC or by a communication
       function.
80C3 = The maximum number of SFC 83 active at the same time has been reached at
       the present time.

C) General Fault informations
   X represents the Setting No. in the SFC 83 or 84 function
8x7F = Internal error. This error code signals an internal error for setting x.
8x01 = Illicit syntax identifier for an Any setting
8x22 = Zone length error on a setting read
8x23 = Zone length error on a setting write. This error code means that the

      setting x is completely or partly located outside the operand zone or

     that the length of a field of bits is not divisible by 8 in an Any setting.
8x24 = Zone error on a setting read
8x25 = Zone error on a setting write. This error code means that the setting x

     is located in an illicit zone for this system function. The description

   of each function specifies the illicit zones for the function.
8x26 = The setting contains a timeout cell number that is too large. This error

    code means that the timeout cell specified in setting x does not exist.
8x27 = The setting contains a counting cell number that is too large (incorrect

      counter number). This error code means that the counting cell specified

    in setting x does not exist.
8x28 = Alignment error on a setting read
8x29 = Alignment error on a setting write. This error code means that the
       reference to setting x is an operand whose bit address is not 0.
8x30 = The setting is located in the write-protected global data block.
8x31 = The setting is located in the write-protected instance data block. This
       error code means that the setting x is located in a write-protected data

      block. If this data block was opened by the system function itself it
       always has the value W#16#8x30.
8x32 = The setting contains a DB number that is too large (incorrect DB number).
8x34 = The setting contains an FC number that is too large
       (incorrect FC number).
8x35 = The setting contains an FB number that is too large
     (incorrect FB number). This error code means that the setting x contains a
      block number greater than the largest permitted number.
8x3A = The setting contains the number of a DB that is not loaded.
8x3C = The setting contains the number of an FC that is not loaded.
8x3A = The setting contains the number of an FB that is not loaded.
8x42 = Access error when trying to read a setting in the input peripheral zone
8x43 = Access error when trying to write a setting in the output peripheral zone
8x44 = Error during the nth (n > 1) read access after an error occurs
8x45 = Error during the nth (n > 1) write access after an error occurs. This
       error code means that the access to the desired setting is refused.

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 19
Dernier ID mis en oeuvre / Last ID implemented : 2000_19
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"********************************************************************************
*                                BF MMC                                        *
*                                                                              *
*         PERMET LA SAUVEGARDE MANUELLE DES ETATS DES INFO PIECES              *
*                 AINSI QUE LA RESTITUTION DES ETATS                           *
*                                                                              *
*      USED FOR MANUAL BACK-UP COPY OF PART DATA AS WELL AS RESTORATION        *
********************************************************************************
( In English further below)
DESCRIPTION:
************
LE FB MMC ASSURE:
-LA SAUVEGARDE MANUELLE DES ETATS DE DB VERS DES DB SUR LA MMC
-LA RESTITUTION MANUELLE DES ETATS DE DB MMC VERS DES DB AUTOMATE

CETTE SAUVEGARDE ou RESTITUTION EST UNIQUEMENT POSSIBLE QUAND MODE MANUEL SUR
L'INSTALATION

MISE EN OEUVRE
***************
- La sauvegarde des donnees dans la MMC est assuree par Le DB2000 ""DB_MMC"" qui
  doit etre cree avec l'attribut UNLINKED.
- Il est conseille d'utilliser la meme structure entre le DB_MMC et le ou les
  DBs a sauvegarder pour facilite la lecture dans le DB2000
- Pour garantir la coherence des donnees, vous ne devez pas modifier la zone
  source durant l'execution du bloc.
  Pour cela l'entree Manu de la BF doit recevoir l'information de toutes les
  zones de l'ilot en Manuel (somme des ZxG.manu issue des BF_zone_modes_IHM).
- L'entree Iadf recevoir l'image de l'annulation des defaut sur l'ilot
  ( IG.iadf issue de la BF_ILOT)
- l'activation de l'entree Pilot.IhmDde_Trf lance une ecriture sur la MMC
(Pilot.IhmSens=1) ou une lecture de la MMC (Pilot.IhmSens=0). Il faut au
prealable renseigner les autres informations de l'entree Pilot (voir
documentation de la BF_MMC sur modification du script sous Wincc.)
- La mise en oeuvre de la BF est associe a des ecrans Wincc

CODES de defaut :
****************
1) Diag .codedef :
1 = Defaut de la fonction sauvegarde (API --> MMC)
2 = Defaut de restitution (MMC --> API)

2) Diag.Ihmerreur: N° de defaut ou d'etat en hexa des fonctions SFC83 ou 84
(Lecture ecriture)

a) information d'etat :
0000 = Pas d'erreur
0081 = La zone cible est plus grande que la zone source. La zone source est
       inscrite entierement dans la zone cible, les octets restants de la zone

     cible n'etant pas modifies.
7000 = Premier appel avec REQ=0 : pas de transmission de donnees active ; BUSY
       a la valeur 0.
7001 = Premier appel avec REQ=1 : la transmission de donnees a ete lancee ;
      BUSY a la valeur 1.
7002 = Appel intermediaire (REQ insignifiant) : la transmission de donnees est
       deja active ; BUSY a la valeur 1.

b) information de defaut
8081 = La zone source est plus grande que la zone cible. La zone cible est
     entierement ecrasee, les octets restants de la zone source etant ignores.
8093 = Aucun bloc de donnees ou un bloc de donnees ne se trouvant pas dans la
      memoire de travail est indique au parametre DSTBLK.
80B1 = Aucun bloc de donnees n'est indique au parametre SRCBLK, ou le bloc de
      donnees qui y est indique n'est pas un objet de la memoire de chargement
      (p. ex.un DB cree par la SFC 22).
80B4 = Il n'est pas permis de lire un DB a attribut F.
80C0 = Le DB cible est en cours de traitement par une autre SFC ou une fonction
       de communication.
80C3 = Le nombre maximum de SFC 83 simultanement actives est momentanement deja
       atteint.

c) Informations d'erreur generales
8x7F = Erreur interne Ce code d'erreur signale une erreur interne au niveau du
       parametre x.
8x01 = Identificateur de syntaxe illicite pour un parametre ANY
8x22 = Erreur de longueur de zone a la lecture d'un parametre
8x23 = Erreur de longueur de zone a l'ecriture d'un parametre
      Ce code d'erreur signale que le parametre x est entierement ou
       partiellement situe hors de la zone d'operandes ou que la longueur d'un

     champ de bits n'est pas divisible par 8 dans un parametre ANY.
8x24 = Erreur de zone a la lecture d'un parametre
8x25 = Erreur de zone a l'ecriture d'un parametre
      Ce code d'erreur signale que le parametre x est situe dans une zone
      illicite pour cette fonction systeme. La description de chaque fonction

   precise les zones illicites pour cette fonction.
8x26 = Le parametre contient un numero de cellule de temporisation trop
      grand.Ce code d'erreur signale que la cellule de temporisation precisee

   dans le parametre x n'existe pas.
8x27 = Le parametre contient un numero de cellule de comptage trop grand
       (numero de compteur errone).Ce code d'erreur signale que la cellule de

     comptage precisee dans le parametre x n'existe pas.
8x28 = Erreur d'alignement a la lecture d'un parametre
8x29 = Erreur d'alignement a l'ecriture d'un parametre
      Ce code d'erreur signale que la reference au parametre x est un operande
      dont l'adresse de bit n'est pas 0.
8x30 = Le parametre se trouve dans le bloc de donnees global protege en
       ecriture.
8x31 = Le parametre se trouve dans le bloc de donnees d'instance protege en
       ecriture.Ce code d'erreur signale que le parametre x se trouve dans un

    bloc de donnees protege en ecriture. Si ce bloc de donnees a ete ouvert

 par la fonction systeme elle-meme, elle sort toujours la valeur W#16#8x30.
8x32 = Le parametre contient un numero de DB trop grand (numero de DB errone).
8x34 = Le parametre contient un numero de FC trop grand (numero de FC errone).
8x35 = Le parametre contient un numero de FB trop grand (numero de FB errone).
      Ce code d'erreur signale que le parametre x contient un numero de bloc
       superieur au plus grand numero admis.
8x3A = Le parametre contient le numero d'un DB qui n'est pas charge.
8x3C = Le parametre contient le numero d'une FC qui n'est pas chargee.
8x3E = Le parametre contient le numero d'un FB qui n'est pas charge.
8x42 = Erreur d'acces lors d'une tentative de lecture d'un parametre dans la
       zone de peripherie des entrees
8x43 = Erreur d'acces lors d'une tentative d'ecriture d'un parametre dans la
       zone de peripherie des sorties
8x44 = Erreur lors du n-ieme (n > 1) acces en lecture apres l'apparition d'une
       erreur
8x45 = Erreur lors du n-ieme (n > 1) acces en ecriture apres l'apparition d'une
       erreur ce code d'erreur signale que l'acces au parametre souhaite est
refuse.

************************** ENGLISH INFORMATION  ****************************
DESCRIPTION :
*************
 THE FB MMC ENSURES:
- THE MANUAL BACK-UP COPY OF THE STATES OF PLC DB TOWARDS MMC DB
- The MANUAL RESTORATION OF THE STATES OF MMC DB TOWARDS PLC DB

THIS BACK-UP COPY or RESTORATION IS ONLY POSSIBLE IF THE INSTALATION IS IN
MANUAL MODE

OPERATING :
***********
- The back-up copy of the data in the MMC is ensured by The DB2000 ""DB_MMC"".
  This DB must be created with the attribute UNLINKED (For more details see BF
  documentation).
- To make easier data reading in the DB 2000 we recommend using the same
structure (format) as the one of the DB or DBs to be backed up.
- To guarantee the coherence of the data, you can not modify source data during
  the execution of this block.
  That's why, Manu input of BF must receive all Manual Mode informations of the
  facility (sum of the ZxG.manu coming from BF_zone_modes_IHM).
- The Iadf input receive the image of Facility Fault reset (IG.iadf coming from
  the BF_ILOT)
- The activation of Pilot.IhmDde_Trf input launches a back-up copy on the MMC
(with Pilot.IhmSens=1) or a PLC restoration from the MMC (With Pilot.
IhmSens=0). (this activation comes from MMC Wincc screen)
It is beforehand necessary to fill the other information of Pilot input
(For more information see The BF_MMC documentation in Wincc script chapter)
- the implementation of the BF is associated to MMC Wincc screen.

FAULT CODES :
*************
1) Diag .codedef : ( For HMI)
1 = Back-up copy Fault (PLC -(to)-> MMC)
2 = Restoration Fault  (MMC -(to)-> PLC)

2) Diag.Ihmerreur: Fault or Status values of SFC83 or 84 in Hexadecimal
(Reading or writing function )

a) Status information :
0000 = No error
0081 = The target zone is larger than the source zone. The source zone is
       entirely written in the target zone, the remaining bytes in the target
       zone are not modified.
7000 = First call with REQ=0: data transmission not activated: BUSY is set to

       the value 0.
7001 = First call with REQ=1: data transmission has been started: BUSY is set
to
       the value 1.
7002 = Intermediate call (REQ not significant): data transmission is already
       activated: BUSY is set to the value 1.

b) Fault informations :
8081 = The source zone is larger than the target zone. The target zone is
     completely overwritten, the remaining bytes in the source zone are ignored.
8093 =  There is no Data Block or a Data Block that is not in the work buffer
is
        indicated in the DSTBLK setting.
80B1 = There is no Data Block indicated in the SRCBLK setting, or the Data
Block
       that is indicated in SRCBLK is not an object in the loading buffer
       (e.g. a DB created by the SFC 22).
80B4 = It is forbidden to read a DB with the F attribute.
80C0 = The target DB is being processed by another SFC or by a communication
       function.
80C3 = The maximum number of SFC 83 active at the same time has been reached at
       the present time.

C) General Fault informations
   X represents the Setting No. in the SFC 83 or 84 function
8x7F = Internal error. This error code signals an internal error for setting x.
8x01 = Illicit syntax identifier for an Any setting
8x22 = Zone length error on a setting read
8x23 = Zone length error on a setting write. This error code means that the

      setting x is completely or partly located outside the operand zone or

     that the length of a field of bits is not divisible by 8 in an Any setting.
8x24 = Zone error on a setting read
8x25 = Zone error on a setting write. This error code means that the setting x

     is located in an illicit zone for this system function. The description

   of each function specifies the illicit zones for the function.
8x26 = The setting contains a timeout cell number that is too large. This error

    code means that the timeout cell specified in setting x does not exist.
8x27 = The setting contains a counting cell number that is too large (incorrect

      counter number). This error code means that the counting cell specified

    in setting x does not exist.
8x28 = Alignment error on a setting read
8x29 = Alignment error on a setting write. This error code means that the
       reference to setting x is an operand whose bit address is not 0.
8x30 = The setting is located in the write-protected global data block.
8x31 = The setting is located in the write-protected instance data block. This
       error code means that the setting x is located in a write-protected data

      block. If this data block was opened by the system function itself it
       always has the value W#16#8x30.
8x32 = The setting contains a DB number that is too large (incorrect DB number).
8x34 = The setting contains an FC number that is too large
       (incorrect FC number).
8x35 = The setting contains an FB number that is too large
     (incorrect FB number). This error code means that the setting x contains a
      block number greater than the largest permitted number.
8x3A = The setting contains the number of a DB that is not loaded.
8x3C = The setting contains the number of an FC that is not loaded.
8x3A = The setting contains the number of an FB that is not loaded.
8x42 = Access error when trying to read a setting in the input peripheral zone
8x43 = Access error when trying to write a setting in the output peripheral zone
8x44 = Error during the nth (n > 1) read access after an error occurs
8x45 = Error during the nth (n > 1) write access after an error occurs. This
       error code means that the access to the desired setting is refused.

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 19
Dernier ID mis en oeuvre / Last ID implemented : 2000_19
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";""
"*******************************************************************************
*                           FB MB_CHAINE1                                     *
*                                                                             *
*    PERMET DE PILOTER LE MOTEUR DU MEUBLE ET DE SURVEILLER LES DEFAUTS       *
*                CONTROLS RACK MOTOR AND MONITORE FAULTS                      *
*******************************************************************************
(In English further below)

DESCRIPTION:  LE FB ""MB_CHAINE1"" ASSURE:
************
- LE PILOTAGE DU MOTEUR DE LA CHAINE DU MEUBLE
   . Pilotage du relais de commande de la rotation de la chaine
   . Gestion des informations de seuil maxi et mini.
   . Gestion de linformation de defaut du meuble.
   . Gestion de la temporisation fin de quart.

- LA SURVEILLANCE DES DEFAUTS MOTEUR DU MEUBLE :


POUR LA DESCRIPTION DETAILLEE DE LA FB : VOIR LA DOCUMENTATION du BLOC

MISE en OEUVRE:
******************
ENTREES
   - AU: Commun actionneur moteur, issu du contacteur KAU (Arret d'urgence
ZONE)
et AU exterieurs.
   - MS: Mot securite, mot regroupant les informations de securite documentees
a l'exterieur de la FB
              Ssm    = Selecteurs de securite meuble ou Safety
              Climef = Limiteur d'effort
              Cdjm   = Disjoncteur moteur
              Csil   = Silhouette
              Cvirch = Condition de transit de la navette dans le virage du
                       poste de chargement
              Cvirdch = Condition de transit de la navette dans le virage du
                        poste de dechargement
              Ch_ok   = Bon fonctionnement du meuble au poste de chargement
                        (pour les meubles inter-zones)
              Cexam   = Condition exterieure d'arret moteur  (si info a un,
                        alors arret moteur)
   - Finquart:Condition fin de quart,Sert a stopper le fonctionnement de la
              chaîne suite a une inactivite du meuble dune duree parametrable.
   - DSsmax  :Detecteur seuil maxi (Saturation)
   - Dsmin   :Detecteur seuil mini
   - Z_ir    :Info rearmement zone
   - Iadf    :Info annulation defaut

   - TEMPOS :
              - TP_Fquar (Fin de quart) => valeur en minute,
              - TP_Smax  (SEUIL MAX) => Valeur en seconde
              - TP_Smin  (SEUIL MIN) => valeur en seconde
              - TP_Vir  (TEMPO DE VIRAGE) => valeur en seconde

SORTIES
   - Rme     :CONTACTEUR MARCHE CHAINE MEUBLE (Sortie API)
   - Ismaxi  :INFO DE SEUIL MAXI (Traitement Programme)
   - Ismini  :INFO DE SEUIL MINI (Traitement Programme)
   - Def     :DEFAUT CONTACTEUR OU SECURITE MARCHE CHAINE MEUBLE (Lien SMP)

CODE DEFAUT :
************
Valeur de Diag.codedef :
 1 : DEFAUT LIMITEUR EFFORT MOTEUR
 2 : DEFAUT DISJONCTEUR MOTEUR
 4 : DEFAUT SILHOUETTE
 8 : DEFAUT VIRAGE AU CHARGEMENT
16 : DEFAUT VIRAGE AU DECHARGEMENT
32 : DEFAUT CHARGEMENT ZONE AMONT (CAS D'UN MEUBLE INTER ZONES)

******************** ENGLISH DESCRIPTION*********************************

DESCRIPTION:  The FB ""MB_CHAINE1"" handles:
************
- The rack's chain motor control with
   . Chain rotation control relay
   . Min and max threshold information management
   . Rack's fault information management
   . End of quarter timer management
- Rack's motor faults monitoring with

- End of quarter timer control

For more information, see the block documentation
OPERATING :
************
INPUTS
   - AU: Motor actuator common 24V, from KAU (Emergency stop contactor of zone)
        and external AU
   - MS: Safety word, includins safety information. Parameter before FB call.
              Ssm    = Zone or rack safety selector
              Climef = Torque limiter
              Cdjm   = Motor circuit breaker
              Csil   = Shape
              Cvirch = Loading turn shuttle transit condition
              Cvirdch = Unloading turn shuttle transit condition
              Ch_ok   = Loading stage correct working (for inter-zone racks)
              Cexam   = Rack motor stop external conditions (if set, motor
stops)

   - Finquart: End of quarter condition , used for stop the chain after a idle
time.
   - DSsmax  : Max threshold sensor (Saturation)
   - Dsmin   : Min threshold sensor
   - Z_ir    : Zone control on (reset) information
   - Iadf    : Fault reset information

   - Timers :
              - TP_Fquar (End of quarter) => value in minutes
              - TP_Smax (MAX threshold) => value  in seconds
              - TP_Smin (MIN threshold) => value in seconds
              - TP_vir (Turn timer) => value in seconds

OUTPUTS
   - Rme     : Rack chain motor relay control (PLC out)
   - Ismaxi  : Max thershold information (Program)
   - Ismini  : Max thershold information (Program)
   - Def     : Rack's chain contactor or safety fault (SMP link)

FAULT CODE :
************
Value of Diag.codedef :
 1 : Motor torque limiter fault
 2 : Motor circuit breaker fault
 4 : Shape fault
 8 : Loading turn fault
16 : Unloading turn fault
32 : Inter zone racks upstream fault

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 48
Dernier ID mis en oeuvre / Last ID implemented : 2001_48
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"*******************************************************************************
*                           FB MB_CHAINE1                                     *
*                                                                             *
*    PERMET DE PILOTER LE MOTEUR DU MEUBLE ET DE SURVEILLER LES DEFAUTS       *
*                CONTROLS RACK MOTOR AND MONITORE FAULTS                      *
*******************************************************************************
(In English further below)

DESCRIPTION:  LE FB ""MB_CHAINE1"" ASSURE:
************
- LE PILOTAGE DU MOTEUR DE LA CHAINE DU MEUBLE
   . Pilotage du relais de commande de la rotation de la chaine
   . Gestion des informations de seuil maxi et mini.
   . Gestion de linformation de defaut du meuble.
   . Gestion de la temporisation fin de quart.

- LA SURVEILLANCE DES DEFAUTS MOTEUR DU MEUBLE :


POUR LA DESCRIPTION DETAILLEE DE LA FB : VOIR LA DOCUMENTATION du BLOC

MISE en OEUVRE:
******************
ENTREES
   - AU: Commun actionneur moteur, issu du contacteur KAU (Arret d'urgence
ZONE)
et AU exterieurs.
   - MS: Mot securite, mot regroupant les informations de securite documentees
a l'exterieur de la FB
              Ssm    = Selecteurs de securite meuble ou Safety
              Climef = Limiteur d'effort
              Cdjm   = Disjoncteur moteur
              Csil   = Silhouette
              Cvirch = Condition de transit de la navette dans le virage du
                       poste de chargement
              Cvirdch = Condition de transit de la navette dans le virage du
                        poste de dechargement
              Ch_ok   = Bon fonctionnement du meuble au poste de chargement
                        (pour les meubles inter-zones)
              Cexam   = Condition exterieure d'arret moteur  (si info a un,
                        alors arret moteur)
   - Finquart:Condition fin de quart,Sert a stopper le fonctionnement de la
              chaîne suite a une inactivite du meuble dune duree parametrable.
   - DSsmax  :Detecteur seuil maxi (Saturation)
   - Dsmin   :Detecteur seuil mini
   - Z_ir    :Info rearmement zone
   - Iadf    :Info annulation defaut

   - TEMPOS :
              - TP_Fquar (Fin de quart) => valeur en minute,
              - TP_Smax  (SEUIL MAX) => Valeur en seconde
              - TP_Smin  (SEUIL MIN) => valeur en seconde
              - TP_Vir  (TEMPO DE VIRAGE) => valeur en seconde

SORTIES
   - Rme     :CONTACTEUR MARCHE CHAINE MEUBLE (Sortie API)
   - Ismaxi  :INFO DE SEUIL MAXI (Traitement Programme)
   - Ismini  :INFO DE SEUIL MINI (Traitement Programme)
   - Def     :DEFAUT CONTACTEUR OU SECURITE MARCHE CHAINE MEUBLE (Lien SMP)

CODE DEFAUT :
************
Valeur de Diag.codedef :
 1 : DEFAUT LIMITEUR EFFORT MOTEUR
 2 : DEFAUT DISJONCTEUR MOTEUR
 4 : DEFAUT SILHOUETTE
 8 : DEFAUT VIRAGE AU CHARGEMENT
16 : DEFAUT VIRAGE AU DECHARGEMENT
32 : DEFAUT CHARGEMENT ZONE AMONT (CAS D'UN MEUBLE INTER ZONES)

******************** ENGLISH DESCRIPTION*********************************

DESCRIPTION:  The FB ""MB_CHAINE1"" handles:
************
- The rack's chain motor control with
   . Chain rotation control relay
   . Min and max threshold information management
   . Rack's fault information management
   . End of quarter timer management
- Rack's motor faults monitoring with

- End of quarter timer control

For more information, see the block documentation
OPERATING :
************
INPUTS
   - AU: Motor actuator common 24V, from KAU (Emergency stop contactor of zone)
        and external AU
   - MS: Safety word, includins safety information. Parameter before FB call.
              Ssm    = Zone or rack safety selector
              Climef = Torque limiter
              Cdjm   = Motor circuit breaker
              Csil   = Shape
              Cvirch = Loading turn shuttle transit condition
              Cvirdch = Unloading turn shuttle transit condition
              Ch_ok   = Loading stage correct working (for inter-zone racks)
              Cexam   = Rack motor stop external conditions (if set, motor
stops)

   - Finquart: End of quarter condition , used for stop the chain after a idle
time.
   - DSsmax  : Max threshold sensor (Saturation)
   - Dsmin   : Min threshold sensor
   - Z_ir    : Zone control on (reset) information
   - Iadf    : Fault reset information

   - Timers :
              - TP_Fquar (End of quarter) => value in minutes
              - TP_Smax (MAX threshold) => value  in seconds
              - TP_Smin (MIN threshold) => value in seconds
              - TP_vir (Turn timer) => value in seconds

OUTPUTS
   - Rme     : Rack chain motor relay control (PLC out)
   - Ismaxi  : Max thershold information (Program)
   - Ismini  : Max thershold information (Program)
   - Def     : Rack's chain contactor or safety fault (SMP link)

FAULT CODE :
************
Value of Diag.codedef :
 1 : Motor torque limiter fault
 2 : Motor circuit breaker fault
 4 : Shape fault
 8 : Loading turn fault
16 : Unloading turn fault
32 : Inter zone racks upstream fault

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 48
Dernier ID mis en oeuvre / Last ID implemented : 2001_48
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"*******************************************************************************
*                           FB MB_CHAINE1                                     *
*                                                                             *
*    PERMET DE PILOTER LE MOTEUR DU MEUBLE ET DE SURVEILLER LES DEFAUTS       *
*                CONTROLS RACK MOTOR AND MONITORE FAULTS                      *
*******************************************************************************
(In English further below)

DESCRIPTION:  LE FB ""MB_CHAINE1"" ASSURE:
************
- LE PILOTAGE DU MOTEUR DE LA CHAINE DU MEUBLE
   . Pilotage du relais de commande de la rotation de la chaine
   . Gestion des informations de seuil maxi et mini.
   . Gestion de linformation de defaut du meuble.
   . Gestion de la temporisation fin de quart.

- LA SURVEILLANCE DES DEFAUTS MOTEUR DU MEUBLE :


POUR LA DESCRIPTION DETAILLEE DE LA FB : VOIR LA DOCUMENTATION du BLOC

MISE en OEUVRE:
******************
ENTREES
   - AU: Commun actionneur moteur, issu du contacteur KAU (Arret d'urgence
ZONE)
et AU exterieurs.
   - MS: Mot securite, mot regroupant les informations de securite documentees
a l'exterieur de la FB
              Ssm    = Selecteurs de securite meuble ou Safety
              Climef = Limiteur d'effort
              Cdjm   = Disjoncteur moteur
              Csil   = Silhouette
              Cvirch = Condition de transit de la navette dans le virage du
                       poste de chargement
              Cvirdch = Condition de transit de la navette dans le virage du
                        poste de dechargement
              Ch_ok   = Bon fonctionnement du meuble au poste de chargement
                        (pour les meubles inter-zones)
              Cexam   = Condition exterieure d'arret moteur  (si info a un,
                        alors arret moteur)
   - Finquart:Condition fin de quart,Sert a stopper le fonctionnement de la
              chaîne suite a une inactivite du meuble dune duree parametrable.
   - DSsmax  :Detecteur seuil maxi (Saturation)
   - Dsmin   :Detecteur seuil mini
   - Z_ir    :Info rearmement zone
   - Iadf    :Info annulation defaut

   - TEMPOS :
              - TP_Fquar (Fin de quart) => valeur en minute,
              - TP_Smax  (SEUIL MAX) => Valeur en seconde
              - TP_Smin  (SEUIL MIN) => valeur en seconde
              - TP_Vir  (TEMPO DE VIRAGE) => valeur en seconde

SORTIES
   - Rme     :CONTACTEUR MARCHE CHAINE MEUBLE (Sortie API)
   - Ismaxi  :INFO DE SEUIL MAXI (Traitement Programme)
   - Ismini  :INFO DE SEUIL MINI (Traitement Programme)
   - Def     :DEFAUT CONTACTEUR OU SECURITE MARCHE CHAINE MEUBLE (Lien SMP)

CODE DEFAUT :
************
Valeur de Diag.codedef :
 1 : DEFAUT LIMITEUR EFFORT MOTEUR
 2 : DEFAUT DISJONCTEUR MOTEUR
 4 : DEFAUT SILHOUETTE
 8 : DEFAUT VIRAGE AU CHARGEMENT
16 : DEFAUT VIRAGE AU DECHARGEMENT
32 : DEFAUT CHARGEMENT ZONE AMONT (CAS D'UN MEUBLE INTER ZONES)

******************** ENGLISH DESCRIPTION*********************************

DESCRIPTION:  The FB ""MB_CHAINE1"" handles:
************
- The rack's chain motor control with
   . Chain rotation control relay
   . Min and max threshold information management
   . Rack's fault information management
   . End of quarter timer management
- Rack's motor faults monitoring with

- End of quarter timer control

For more information, see the block documentation
OPERATING :
************
INPUTS
   - AU: Motor actuator common 24V, from KAU (Emergency stop contactor of zone)
        and external AU
   - MS: Safety word, includins safety information. Parameter before FB call.
              Ssm    = Zone or rack safety selector
              Climef = Torque limiter
              Cdjm   = Motor circuit breaker
              Csil   = Shape
              Cvirch = Loading turn shuttle transit condition
              Cvirdch = Unloading turn shuttle transit condition
              Ch_ok   = Loading stage correct working (for inter-zone racks)
              Cexam   = Rack motor stop external conditions (if set, motor
stops)

   - Finquart: End of quarter condition , used for stop the chain after a idle
time.
   - DSsmax  : Max threshold sensor (Saturation)
   - Dsmin   : Min threshold sensor
   - Z_ir    : Zone control on (reset) information
   - Iadf    : Fault reset information

   - Timers :
              - TP_Fquar (End of quarter) => value in minutes
              - TP_Smax (MAX threshold) => value  in seconds
              - TP_Smin (MIN threshold) => value in seconds
              - TP_vir (Turn timer) => value in seconds

OUTPUTS
   - Rme     : Rack chain motor relay control (PLC out)
   - Ismaxi  : Max thershold information (Program)
   - Ismini  : Max thershold information (Program)
   - Def     : Rack's chain contactor or safety fault (SMP link)

FAULT CODE :
************
Value of Diag.codedef :
 1 : Motor torque limiter fault
 2 : Motor circuit breaker fault
 4 : Shape fault
 8 : Loading turn fault
16 : Unloading turn fault
32 : Inter zone racks upstream fault

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 48
Dernier ID mis en oeuvre / Last ID implemented : 2001_48
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";""
"**********************************************************************
*                           FB MB_BUTEE1                             *
*                  GESTION D UNE BUTEE D UN MEUBLE                   *
*                     CONTROLS A RACK STOPPER                        *
**********************************************************************
(In English further below)

DESCRIPTION:
************
LA FB ASSURE:
-LA GENERATION DES MEMOIRES SUPPORT
-LA GENERATION DES INFOS SUPPORT
-LA GENERATION DES INFOS OUVERTURE/FERMETURE BUTEE
-LE PILOTAGE DES EV DE LA BUTEE
-LE CONTROLE DE CONCORDANCE MEMOIRE / DETECTEUR
-LE CONTROLE D'EXECUTION DU MOUVEMENT COMMANDE
-LE CONTROLE DE L'EVACUATION DU SUPPORT
-LE CONTROLE DES DETECTEURS DE LA BUTEE

POUR LA DESCRIPTION DETAILLEE Du BF : VOIR la documentation du Bloc


MISE EN OEUVRE:
****************
- Pour des raisons de disponibilite des meubles a accumulation les butees ne
sont pas gerees par les modes de marche de la zone concernee.
- Pour des raisons de securite les butees de travail des meubles a chargement
ou
dechargement automatique ne pourront fonctionner que zone fermee.

- COM  : COMMUN SAfety et CONTROLE ROTATION CHAINE MEUBLE

- MSEA : MEMOIRE SUPPORT EVACUE AMONT contenue dans La structure Info support

          de la butee Ammont IIS (DB97) si butee d'attente.
          Si la buttee n'est pas une Butee d'attente = 1 (BA1)

- MSP  : Structure Mot support de la Butee contenue dans IIS

- BVVP : BUTEE AVAL VIDE PRETE. Si pas de  butee aval = 1 (BA1)

- POS_MSE : Position de l'information MSE (Memoire support evacuee ) dans la
            struct IIS de la butee.

- Variable Statique:
  TDES: VALEUR TEMPO DEFAUT EVACUATION SUPPORT;
        Variable pre-positionnee a 20s,
        possibilite de forcage externe suivant besoin

CODE DEFAUT :
************
Valeur de Diag.codedef :

- 1  : Decyclage butee ou defaut detecteur support present
       (mem presence=0,detecteur=1)
- 2  : Decyclage butee ou defaut detecteur support present
       (mem presence=1detecteur=0)
- 4  : Decyclage butee (mem evacuation=1,butee fermee)
- 8  : Defaut mouvement(pas d'info de position de la butee)
- 16 : Defaut a l'ouverture de la butee (coincee en position de fermeture)
- 32 : Defaut a la fermeture de la butee (coincee en position d ouverture)
- 64 : Defaut evacuation support (support coince sur la butee)
- 128 : Defaut evacuation support (pas recul de contrôle de l'evacuation)
- 512 : Defaut parametrage Pos_MSE

************************  ENGLISH INFORMATION  *************************

DESCRIPTION:
************
THE FB CREATES:
    - SUPPORT MEMORY
    - SUPPORT INFORMATION
    - STOPPER CLOSING/OPENING INFORMATION
THE FB CONTROLS:
    - THE STOPPER SOLENOID VALVES
THE FB CHECKS:
    - MEMORY AND SENSORS CONSISTENCY
    - THE CONTROLLED MOVEMENT EXECUTION
    - SUPPORT UNLOADING
    - STOPPER SENSORS

MORE INFORMATION :  See the block documentation


OPERATING :
***********
- Due to accumulation Rack availability considerations, the stoppers are not
managed by the operating modes of the zone concerned.
- For safety reasons, automatic loading or unloading rack work stoppers can
only
operate in closed zones.

- COM  :  Rack chain rotation check and Safety common 24V

- MSEA :  Upstream unloaded support memory, Contained in IIS Support structure

          (DB97) of upstream stopper if waiting stopper.
             if stopper is not a waitting stopper = 1 (BA1)

- MSP  :  Word support structure of stopper in IIS

- BVVP :  Ready empty downstream stopper. If no downstream stopper = 1 (BA1)

- POS_MSE: Bool position of MSE ( Evacuated support memory)  in IIS struct of
           Stopper

- STAT Variable:
         TDES: Support unloading fault timer;
                Variable is preset at 20sec,
                It is possible to force it externally depending on facility

FAULT CODE :
***********
Diag.codedef values :
- 1 : Stopper out of cycle or support present detector fault
     (presence memory =0, detector=1)
- 2 : Stopper out of cycle or support present detector fault
     (presence memory =1, detector=0)
- 4 : Stopper out of cycle (evacuation memory =1,stopper closed)
- 8 : Movement fault (no stopper position data)
- 16: Fault when the stopper opens (blocked in closed position)
- 32: Fault when the stopper closes (blocked in open position)
- 64: Support evacuation fault (support blocked on the stopper)
- 128: Support evacuation fault (evacuation check not received)
- 512: POS_MSE Parameter setting fault

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 28
Dernier ID mis en oeuvre / Last ID implemented : 2002_28
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"**********************************************************************
*                           FB MB_BUTEE1                             *
*                  GESTION D UNE BUTEE D UN MEUBLE                   *
*                     CONTROLS A RACK STOPPER                        *
**********************************************************************
(In English further below)

DESCRIPTION:
************
LA FB ASSURE:
-LA GENERATION DES MEMOIRES SUPPORT
-LA GENERATION DES INFOS SUPPORT
-LA GENERATION DES INFOS OUVERTURE/FERMETURE BUTEE
-LE PILOTAGE DES EV DE LA BUTEE
-LE CONTROLE DE CONCORDANCE MEMOIRE / DETECTEUR
-LE CONTROLE D'EXECUTION DU MOUVEMENT COMMANDE
-LE CONTROLE DE L'EVACUATION DU SUPPORT
-LE CONTROLE DES DETECTEURS DE LA BUTEE

POUR LA DESCRIPTION DETAILLEE Du BF : VOIR la documentation du Bloc


MISE EN OEUVRE:
****************
- Pour des raisons de disponibilite des meubles a accumulation les butees ne
sont pas gerees par les modes de marche de la zone concernee.
- Pour des raisons de securite les butees de travail des meubles a chargement
ou
dechargement automatique ne pourront fonctionner que zone fermee.

- COM  : COMMUN SAfety et CONTROLE ROTATION CHAINE MEUBLE

- MSEA : MEMOIRE SUPPORT EVACUE AMONT contenue dans La structure Info support

          de la butee Ammont IIS (DB97) si butee d'attente.
          Si la buttee n'est pas une Butee d'attente = 1 (BA1)

- MSP  : Structure Mot support de la Butee contenue dans IIS

- BVVP : BUTEE AVAL VIDE PRETE. Si pas de  butee aval = 1 (BA1)

- POS_MSE : Position de l'information MSE (Memoire support evacuee ) dans la
            struct IIS de la butee.

- Variable Statique:
  TDES: VALEUR TEMPO DEFAUT EVACUATION SUPPORT;
        Variable pre-positionnee a 20s,
        possibilite de forcage externe suivant besoin

CODE DEFAUT :
************
Valeur de Diag.codedef :

- 1  : Decyclage butee ou defaut detecteur support present
       (mem presence=0,detecteur=1)
- 2  : Decyclage butee ou defaut detecteur support present
       (mem presence=1detecteur=0)
- 4  : Decyclage butee (mem evacuation=1,butee fermee)
- 8  : Defaut mouvement(pas d'info de position de la butee)
- 16 : Defaut a l'ouverture de la butee (coincee en position de fermeture)
- 32 : Defaut a la fermeture de la butee (coincee en position d ouverture)
- 64 : Defaut evacuation support (support coince sur la butee)
- 128 : Defaut evacuation support (pas recul de contrôle de l'evacuation)
- 512 : Defaut parametrage Pos_MSE

************************  ENGLISH INFORMATION  *************************

DESCRIPTION:
************
THE FB CREATES:
    - SUPPORT MEMORY
    - SUPPORT INFORMATION
    - STOPPER CLOSING/OPENING INFORMATION
THE FB CONTROLS:
    - THE STOPPER SOLENOID VALVES
THE FB CHECKS:
    - MEMORY AND SENSORS CONSISTENCY
    - THE CONTROLLED MOVEMENT EXECUTION
    - SUPPORT UNLOADING
    - STOPPER SENSORS

MORE INFORMATION :  See the block documentation


OPERATING :
***********
- Due to accumulation Rack availability considerations, the stoppers are not
managed by the operating modes of the zone concerned.
- For safety reasons, automatic loading or unloading rack work stoppers can
only
operate in closed zones.

- COM  :  Rack chain rotation check and Safety common 24V

- MSEA :  Upstream unloaded support memory, Contained in IIS Support structure

          (DB97) of upstream stopper if waiting stopper.
             if stopper is not a waitting stopper = 1 (BA1)

- MSP  :  Word support structure of stopper in IIS

- BVVP :  Ready empty downstream stopper. If no downstream stopper = 1 (BA1)

- POS_MSE: Bool position of MSE ( Evacuated support memory)  in IIS struct of
           Stopper

- STAT Variable:
         TDES: Support unloading fault timer;
                Variable is preset at 20sec,
                It is possible to force it externally depending on facility

FAULT CODE :
***********
Diag.codedef values :
- 1 : Stopper out of cycle or support present detector fault
     (presence memory =0, detector=1)
- 2 : Stopper out of cycle or support present detector fault
     (presence memory =1, detector=0)
- 4 : Stopper out of cycle (evacuation memory =1,stopper closed)
- 8 : Movement fault (no stopper position data)
- 16: Fault when the stopper opens (blocked in closed position)
- 32: Fault when the stopper closes (blocked in open position)
- 64: Support evacuation fault (support blocked on the stopper)
- 128: Support evacuation fault (evacuation check not received)
- 512: POS_MSE Parameter setting fault

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 28
Dernier ID mis en oeuvre / Last ID implemented : 2002_28
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"**********************************************************************
*                           FB MB_BUTEE1                             *
*                  GESTION D UNE BUTEE D UN MEUBLE                   *
*                     CONTROLS A RACK STOPPER                        *
**********************************************************************
(In English further below)

DESCRIPTION:
************
LA FB ASSURE:
-LA GENERATION DES MEMOIRES SUPPORT
-LA GENERATION DES INFOS SUPPORT
-LA GENERATION DES INFOS OUVERTURE/FERMETURE BUTEE
-LE PILOTAGE DES EV DE LA BUTEE
-LE CONTROLE DE CONCORDANCE MEMOIRE / DETECTEUR
-LE CONTROLE D'EXECUTION DU MOUVEMENT COMMANDE
-LE CONTROLE DE L'EVACUATION DU SUPPORT
-LE CONTROLE DES DETECTEURS DE LA BUTEE

POUR LA DESCRIPTION DETAILLEE Du BF : VOIR la documentation du Bloc


MISE EN OEUVRE:
****************
- Pour des raisons de disponibilite des meubles a accumulation les butees ne
sont pas gerees par les modes de marche de la zone concernee.
- Pour des raisons de securite les butees de travail des meubles a chargement
ou
dechargement automatique ne pourront fonctionner que zone fermee.

- COM  : COMMUN SAfety et CONTROLE ROTATION CHAINE MEUBLE

- MSEA : MEMOIRE SUPPORT EVACUE AMONT contenue dans La structure Info support

          de la butee Ammont IIS (DB97) si butee d'attente.
          Si la buttee n'est pas une Butee d'attente = 1 (BA1)

- MSP  : Structure Mot support de la Butee contenue dans IIS

- BVVP : BUTEE AVAL VIDE PRETE. Si pas de  butee aval = 1 (BA1)

- POS_MSE : Position de l'information MSE (Memoire support evacuee ) dans la
            struct IIS de la butee.

- Variable Statique:
  TDES: VALEUR TEMPO DEFAUT EVACUATION SUPPORT;
        Variable pre-positionnee a 20s,
        possibilite de forcage externe suivant besoin

CODE DEFAUT :
************
Valeur de Diag.codedef :

- 1  : Decyclage butee ou defaut detecteur support present
       (mem presence=0,detecteur=1)
- 2  : Decyclage butee ou defaut detecteur support present
       (mem presence=1detecteur=0)
- 4  : Decyclage butee (mem evacuation=1,butee fermee)
- 8  : Defaut mouvement(pas d'info de position de la butee)
- 16 : Defaut a l'ouverture de la butee (coincee en position de fermeture)
- 32 : Defaut a la fermeture de la butee (coincee en position d ouverture)
- 64 : Defaut evacuation support (support coince sur la butee)
- 128 : Defaut evacuation support (pas recul de contrôle de l'evacuation)
- 512 : Defaut parametrage Pos_MSE

************************  ENGLISH INFORMATION  *************************

DESCRIPTION:
************
THE FB CREATES:
    - SUPPORT MEMORY
    - SUPPORT INFORMATION
    - STOPPER CLOSING/OPENING INFORMATION
THE FB CONTROLS:
    - THE STOPPER SOLENOID VALVES
THE FB CHECKS:
    - MEMORY AND SENSORS CONSISTENCY
    - THE CONTROLLED MOVEMENT EXECUTION
    - SUPPORT UNLOADING
    - STOPPER SENSORS

MORE INFORMATION :  See the block documentation


OPERATING :
***********
- Due to accumulation Rack availability considerations, the stoppers are not
managed by the operating modes of the zone concerned.
- For safety reasons, automatic loading or unloading rack work stoppers can
only
operate in closed zones.

- COM  :  Rack chain rotation check and Safety common 24V

- MSEA :  Upstream unloaded support memory, Contained in IIS Support structure

          (DB97) of upstream stopper if waiting stopper.
             if stopper is not a waitting stopper = 1 (BA1)

- MSP  :  Word support structure of stopper in IIS

- BVVP :  Ready empty downstream stopper. If no downstream stopper = 1 (BA1)

- POS_MSE: Bool position of MSE ( Evacuated support memory)  in IIS struct of
           Stopper

- STAT Variable:
         TDES: Support unloading fault timer;
                Variable is preset at 20sec,
                It is possible to force it externally depending on facility

FAULT CODE :
***********
Diag.codedef values :
- 1 : Stopper out of cycle or support present detector fault
     (presence memory =0, detector=1)
- 2 : Stopper out of cycle or support present detector fault
     (presence memory =1, detector=0)
- 4 : Stopper out of cycle (evacuation memory =1,stopper closed)
- 8 : Movement fault (no stopper position data)
- 16: Fault when the stopper opens (blocked in closed position)
- 32: Fault when the stopper closes (blocked in open position)
- 64: Support evacuation fault (support blocked on the stopper)
- 128: Support evacuation fault (evacuation check not received)
- 512: POS_MSE Parameter setting fault

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 28
Dernier ID mis en oeuvre / Last ID implemented : 2002_28
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";""
"****************************************************************************
*                              BF MARIAGE_API                              *
*        ASSURE LA GESTION DU MARIAGE DE PIECE VENANT DE 2 FLUX A ET B     *
*                 MANAGEMENT OF 2 PARTS FROM FLOW A AND FLOW B             *
****************************************************************************
(In English further below)

DESCRIPTION:
************
En fonction de :
l'egalite ou non des tables d'identification flux A et flux B
des entrees SP_FA : sans process flux A
et SP_FB : sans process flux B
le FB assure le pilotage des sorties :
- mariage flux A-flux B
- sortie flux A
- sortie flux B
- defaut mariage flux A-flux B

En Tolerie, ce FB est utilise pour assurer le mariage des pieces
diversifiees au film
POUR LA DESCRIPTION DETAILLEE DU FB : VOIR GUIDE GE03.FP.236

MISE EN OEUVRE:
************
- Le flux A correspond toujours au  flux principale de l'ilot
- Le flux B correspond au flux secondaire (piece complementaire a marier) de l
ilot

- La ou les BF de mariage sont a mettre en oeuvre dans le FB du sous ensemble
associe au flux A (Flux principale sur l'ilot)
- La Longueur des 3 Tables  TABLE_FA, TABLE_FB, SV_DTAB doivent etre identiques
- Ces trois tables doivent etre dans des blocs de donnees ou d'instance
sinon la sortie DEF du FB passe a 1 et le mot de diagnostic DIAG = 1

-Les tables flux_A, Flux_B et Sv_dtab sont des Struct de 6 mots (maxi) declarees
 au niveau Stat du sous ensemble hebergeant la ou les BF (si mariage a
plusieurs)
 Les informations de tables flux doivent obligatoirement etres construites
 dans lordre suivant pour garantir lordre daffichage des donnees sous IHMP :
1er information de la struct = Numero dordre de lOF
2eme information de la struct = Numero de Famille /phase
3eme information = 1er mot de diversite utilise sur lilot
4eme information = 2eme mot de diversite utilise sur lilot
5eme information = 3eme mot de diversite utilise sur lilot
6eme information = 4eme mot de diversite utilise sur lilot


Le nom symbolique des structures est
Pour table FluxA et table fluxB = TM_f<NomSE correspondant au flux >
Pour la table SV_dtab = TM_sv <NomSE FluxA><NomSE FluxB>


PRINCIPE DE FONCTIONNEMENT DETAILLE DU MARIAGE:
***********************************************
Le mariage des flux A et B est traite par la DFB si les conditions suivantes
sont reunies :
- Autorisation Mariage Flux A = 1 (entree DFB Am_fa=1)
- Autorisation Mariage Flux B = 1 (entree DFB Am_fb=1)
- Les tables Identification Flux A et B (Table_fa et Table_fb) sont de longueur
identiques
- Si aucun mots de la table identification du flux A et du flux B n'est egal a 0
- Si aucune decision n'a encore ete prise
8 cas differents peuvent apparaitre suivant l'etat des entrees DFB Sp_fa et
Sp_fb :

*** Si EGALITE des Tables identification du flux A et du flux B : 4 cas a
traiter :
- 1 er cas : sans process flux A (Sp_fa=1) et sans process flux B (Sp_fb=1) :
=> Decision sortie Flux A
=> Decision sortie Flux B
- 2 eme cas : sans process flux A (Sp_fa=1) et avec process flux B (Sp_fb=0) :
=> Decision sortie Flux A
=> Decision sortie Flux B
- 3 eme cas : avec process flux A (Sp_fa=0) et sans process flux B (Sp_fb=1) :
=> Decision sortie Flux A
=> Decision sortie Flux B
- 4 eme cas : avec process flux A (Sp_fa=0) et avec process flux B (Sp_fb=0) :
=> Decision Mariage Flux A-Flux B

*** Si INEGALITE des Tables identification du flux A et du flux B : 4 cas a
traiter :
- 1 er cas : sans process flux A (Sp_fa=1) et sans process flux B (Sp_fb=1) :
=> Decision sortie Flux A
- 2 eme cas : sans process flux A (Sp_fa=1) et avec process flux B (Sp_fb=0) :
=> Decision sortie Flux A
- 3 eme cas : avec process flux A (Sp_fa=0) et sans process flux B (Sp_fb=1) :
=> Decision sortie Flux B
- 4 eme cas : avec process flux A (Sp_fa=0) et avec process flux B (Sp_fb=0) :
=> Attente Decision Operateur
   => Appui Bouton Demande de Sortie Flux A (Bds_fa=1) :
      => Decision sortie Flux A
   => Appui Bouton Demande de Sortie Flux B (Bds_fb=1) :
      => Decision sortie Flux B

CODE DE DEFAUT :
***************
Valeur de diag.codedef :
1 = Parametrage incorrect
      -Les tables ne sont pas de meme longueur
      -Une au moins des tables n'est pas dans un DB
      -Le format d'un des parametres n'est pas correct (Word)
2 =  au moins 1 mot de la table didentification du Flux A est a 0
4 =  au moins 1 mot de la table didentification du Flux B est a 0

****************************ENGLISH INFORMATION*********************************
DESCRIPTION:
************
-If identification tables from Flow A and B are equal or not,
-Depending on Input SP_FA = without process flow A
- and on SP_FB = without process flow B
the FB give the following outputs:
- Flow A-B matching
- Flow A exit
- Flow B exit
Flow A-flow B matching fault

In Body Shop, this FB make the sequenced and diversified parts matching
For detailed FB description : see GE03.FP.236 guide

OPERATING:
********
- A Flow is always the main flow on facility
- B Flow is the complementary part to be match
- BF_Mariage_API must be integrated in the sub-assembly of the maint flow
  (A flow)
- The lenght of the 3 tables TABLE_FA, TABLE_FB, SV_DTAB must be the same
- These 3 tables must be in DB (Global or Instance).
 If not, the ""DEF"" output is set for fault, and DIAG Fault code is =1 .
- The tables Flux_A, Flux_B and SV_dtab use a structure of 6 words (maxi)
  are defined in the STAT variables in the sub_assembly Function Block who use
  the BF_Mariage_API

  The Flow tables information must be made in this order to
  guarantee the IHMP screen informations :

 1st information in the struct = OF Order number
 2nd information in the struct = Family Number
 3rd information in the struct = 1st diversity part Word used in facility.
 4th information in the struct = 2nd diversity part Word used in facility
 5th information in the struct = 3rd diversity part Word used in facility
 6th information in the struct = 4th diversity part Word used in facility

The symbolic name of the Struct is :
For the table Flux_A and Flux_B = TM_f<sub-assembly Name attached to the flow>
For the table SV_dtab = TM_sv<Sub-assembly Name A flow><Sub-assembly Name B
flow>


DETAILED MATCHING OPERATION :
******************************
To match flow A and flow B, FB operates when :
- Flow A Matching Authorization =1 (Am_fa=1)
- Flow B Matching Authorization =1 (Am_fb=1)
- Length of flow A identification table = length flow B identification table
- No word in flow A or flow B tables is null
- No decision has been registered for the moment

Depending on Sp_fa and Sp_fb, there are 8 cases:
***If flow A and flow B Identification tables are EQUAL (""COK""), there are 4
cases:
- Case1 : no process in flow A and no process in flow B (Sp_fa=1, Sp_fb=1)
=> Flow A exit
=> Flow B exit
- Case2: no process in flow A and process in flow B (Sp_fa=1, Sp_fb=0)
=> Flow A exit
=> Flow B exit
- Case3: process in flow A and no process in flow B (Sp_fa=0, Sp_fb=1)
=> Flow A exit
=> Flow B exit
- Case4: process in flow A and process in flow B (Sp_fa=0, Sp_fb=0)
=> Matching Flow A and B

***If flow A and flow B Identification tables are DIFFERENT (""CNK""), there are
4
cases:
- Case1: no process in flow A and no process in flow B (Sp_fa=1, Sp_fb=1)
=> Flow A exit
- Case2: no process in flow A and process in flow B (Sp_fa=1, Sp_fb=0)
=> Flow A exit
- Case3: process in flow A and no process in flow B (Sp_fa=0, Sp_fb=1)
=> Flow B exit
- Case4: process in flow A and process in flow B (Sp_fa=0, Sp_fb=0)
=> Waiting for operator decision
     => If button Flow A exit is pushed (Bds_fa=1) then=> Flow A exit
     => If button Flow B exit is pushed (Bds_fb=1) then=> Flow B exit

FAULT CODE :
***********
Diag.codedef values :
1 = Parameter fault
      -Flows Tables are not the same size (lenght)
      -a Flow Table is not in a DB
      -Type of variable is not correct(Word)
2 = at least 1 word in the Workflow A identification table is set to 0
4 = at least 1 word in the Workflow B identification table is set to 0


*************************  ODIL_ID *********************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 21
Dernier ID mis en oeuvre / Last ID implemented : 2003_21
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"****************************************************************************
*                              BF MARIAGE_API                              *
*        ASSURE LA GESTION DU MARIAGE DE PIECE VENANT DE 2 FLUX A ET B     *
*                 MANAGEMENT OF 2 PARTS FROM FLOW A AND FLOW B             *
****************************************************************************
(In English further below)

DESCRIPTION:
************
En fonction de :
l'egalite ou non des tables d'identification flux A et flux B
des entrees SP_FA : sans process flux A
et SP_FB : sans process flux B
le FB assure le pilotage des sorties :
- mariage flux A-flux B
- sortie flux A
- sortie flux B
- defaut mariage flux A-flux B

En Tolerie, ce FB est utilise pour assurer le mariage des pieces
diversifiees au film
POUR LA DESCRIPTION DETAILLEE DU FB : VOIR GUIDE GE03.FP.236

MISE EN OEUVRE:
************
- Le flux A correspond toujours au  flux principale de l'ilot
- Le flux B correspond au flux secondaire (piece complementaire a marier) de l
ilot

- La ou les BF de mariage sont a mettre en oeuvre dans le FB du sous ensemble
associe au flux A (Flux principale sur l'ilot)
- La Longueur des 3 Tables  TABLE_FA, TABLE_FB, SV_DTAB doivent etre identiques
- Ces trois tables doivent etre dans des blocs de donnees ou d'instance
sinon la sortie DEF du FB passe a 1 et le mot de diagnostic DIAG = 1

-Les tables flux_A, Flux_B et Sv_dtab sont des Struct de 6 mots (maxi) declarees
 au niveau Stat du sous ensemble hebergeant la ou les BF (si mariage a
plusieurs)
 Les informations de tables flux doivent obligatoirement etres construites
 dans lordre suivant pour garantir lordre daffichage des donnees sous IHMP :
1er information de la struct = Numero dordre de lOF
2eme information de la struct = Numero de Famille /phase
3eme information = 1er mot de diversite utilise sur lilot
4eme information = 2eme mot de diversite utilise sur lilot
5eme information = 3eme mot de diversite utilise sur lilot
6eme information = 4eme mot de diversite utilise sur lilot


Le nom symbolique des structures est
Pour table FluxA et table fluxB = TM_f<NomSE correspondant au flux >
Pour la table SV_dtab = TM_sv <NomSE FluxA><NomSE FluxB>


PRINCIPE DE FONCTIONNEMENT DETAILLE DU MARIAGE:
***********************************************
Le mariage des flux A et B est traite par la DFB si les conditions suivantes
sont reunies :
- Autorisation Mariage Flux A = 1 (entree DFB Am_fa=1)
- Autorisation Mariage Flux B = 1 (entree DFB Am_fb=1)
- Les tables Identification Flux A et B (Table_fa et Table_fb) sont de longueur
identiques
- Si aucun mots de la table identification du flux A et du flux B n'est egal a 0
- Si aucune decision n'a encore ete prise
8 cas differents peuvent apparaitre suivant l'etat des entrees DFB Sp_fa et
Sp_fb :

*** Si EGALITE des Tables identification du flux A et du flux B : 4 cas a
traiter :
- 1 er cas : sans process flux A (Sp_fa=1) et sans process flux B (Sp_fb=1) :
=> Decision sortie Flux A
=> Decision sortie Flux B
- 2 eme cas : sans process flux A (Sp_fa=1) et avec process flux B (Sp_fb=0) :
=> Decision sortie Flux A
=> Decision sortie Flux B
- 3 eme cas : avec process flux A (Sp_fa=0) et sans process flux B (Sp_fb=1) :
=> Decision sortie Flux A
=> Decision sortie Flux B
- 4 eme cas : avec process flux A (Sp_fa=0) et avec process flux B (Sp_fb=0) :
=> Decision Mariage Flux A-Flux B

*** Si INEGALITE des Tables identification du flux A et du flux B : 4 cas a
traiter :
- 1 er cas : sans process flux A (Sp_fa=1) et sans process flux B (Sp_fb=1) :
=> Decision sortie Flux A
- 2 eme cas : sans process flux A (Sp_fa=1) et avec process flux B (Sp_fb=0) :
=> Decision sortie Flux A
- 3 eme cas : avec process flux A (Sp_fa=0) et sans process flux B (Sp_fb=1) :
=> Decision sortie Flux B
- 4 eme cas : avec process flux A (Sp_fa=0) et avec process flux B (Sp_fb=0) :
=> Attente Decision Operateur
   => Appui Bouton Demande de Sortie Flux A (Bds_fa=1) :
      => Decision sortie Flux A
   => Appui Bouton Demande de Sortie Flux B (Bds_fb=1) :
      => Decision sortie Flux B

CODE DE DEFAUT :
***************
Valeur de diag.codedef :
1 = Parametrage incorrect
      -Les tables ne sont pas de meme longueur
      -Une au moins des tables n'est pas dans un DB
      -Le format d'un des parametres n'est pas correct (Word)
2 =  au moins 1 mot de la table didentification du Flux A est a 0
4 =  au moins 1 mot de la table didentification du Flux B est a 0

****************************ENGLISH INFORMATION*********************************
DESCRIPTION:
************
-If identification tables from Flow A and B are equal or not,
-Depending on Input SP_FA = without process flow A
- and on SP_FB = without process flow B
the FB give the following outputs:
- Flow A-B matching
- Flow A exit
- Flow B exit
Flow A-flow B matching fault

In Body Shop, this FB make the sequenced and diversified parts matching
For detailed FB description : see GE03.FP.236 guide

OPERATING:
********
- A Flow is always the main flow on facility
- B Flow is the complementary part to be match
- BF_Mariage_API must be integrated in the sub-assembly of the maint flow
  (A flow)
- The lenght of the 3 tables TABLE_FA, TABLE_FB, SV_DTAB must be the same
- These 3 tables must be in DB (Global or Instance).
 If not, the ""DEF"" output is set for fault, and DIAG Fault code is =1 .
- The tables Flux_A, Flux_B and SV_dtab use a structure of 6 words (maxi)
  are defined in the STAT variables in the sub_assembly Function Block who use
  the BF_Mariage_API

  The Flow tables information must be made in this order to
  guarantee the IHMP screen informations :

 1st information in the struct = OF Order number
 2nd information in the struct = Family Number
 3rd information in the struct = 1st diversity part Word used in facility.
 4th information in the struct = 2nd diversity part Word used in facility
 5th information in the struct = 3rd diversity part Word used in facility
 6th information in the struct = 4th diversity part Word used in facility

The symbolic name of the Struct is :
For the table Flux_A and Flux_B = TM_f<sub-assembly Name attached to the flow>
For the table SV_dtab = TM_sv<Sub-assembly Name A flow><Sub-assembly Name B
flow>


DETAILED MATCHING OPERATION :
******************************
To match flow A and flow B, FB operates when :
- Flow A Matching Authorization =1 (Am_fa=1)
- Flow B Matching Authorization =1 (Am_fb=1)
- Length of flow A identification table = length flow B identification table
- No word in flow A or flow B tables is null
- No decision has been registered for the moment

Depending on Sp_fa and Sp_fb, there are 8 cases:
***If flow A and flow B Identification tables are EQUAL (""COK""), there are 4
cases:
- Case1 : no process in flow A and no process in flow B (Sp_fa=1, Sp_fb=1)
=> Flow A exit
=> Flow B exit
- Case2: no process in flow A and process in flow B (Sp_fa=1, Sp_fb=0)
=> Flow A exit
=> Flow B exit
- Case3: process in flow A and no process in flow B (Sp_fa=0, Sp_fb=1)
=> Flow A exit
=> Flow B exit
- Case4: process in flow A and process in flow B (Sp_fa=0, Sp_fb=0)
=> Matching Flow A and B

***If flow A and flow B Identification tables are DIFFERENT (""CNK""), there are
4
cases:
- Case1: no process in flow A and no process in flow B (Sp_fa=1, Sp_fb=1)
=> Flow A exit
- Case2: no process in flow A and process in flow B (Sp_fa=1, Sp_fb=0)
=> Flow A exit
- Case3: process in flow A and no process in flow B (Sp_fa=0, Sp_fb=1)
=> Flow B exit
- Case4: process in flow A and process in flow B (Sp_fa=0, Sp_fb=0)
=> Waiting for operator decision
     => If button Flow A exit is pushed (Bds_fa=1) then=> Flow A exit
     => If button Flow B exit is pushed (Bds_fb=1) then=> Flow B exit

FAULT CODE :
***********
Diag.codedef values :
1 = Parameter fault
      -Flows Tables are not the same size (lenght)
      -a Flow Table is not in a DB
      -Type of variable is not correct(Word)
2 = at least 1 word in the Workflow A identification table is set to 0
4 = at least 1 word in the Workflow B identification table is set to 0


*************************  ODIL_ID *********************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 21
Dernier ID mis en oeuvre / Last ID implemented : 2003_21
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"****************************************************************************
*                              BF MARIAGE_API                              *
*        ASSURE LA GESTION DU MARIAGE DE PIECE VENANT DE 2 FLUX A ET B     *
*                 MANAGEMENT OF 2 PARTS FROM FLOW A AND FLOW B             *
****************************************************************************
(In English further below)

DESCRIPTION:
************
En fonction de :
l'egalite ou non des tables d'identification flux A et flux B
des entrees SP_FA : sans process flux A
et SP_FB : sans process flux B
le FB assure le pilotage des sorties :
- mariage flux A-flux B
- sortie flux A
- sortie flux B
- defaut mariage flux A-flux B

En Tolerie, ce FB est utilise pour assurer le mariage des pieces
diversifiees au film
POUR LA DESCRIPTION DETAILLEE DU FB : VOIR GUIDE GE03.FP.236

MISE EN OEUVRE:
************
- Le flux A correspond toujours au  flux principale de l'ilot
- Le flux B correspond au flux secondaire (piece complementaire a marier) de l
ilot

- La ou les BF de mariage sont a mettre en oeuvre dans le FB du sous ensemble
associe au flux A (Flux principale sur l'ilot)
- La Longueur des 3 Tables  TABLE_FA, TABLE_FB, SV_DTAB doivent etre identiques
- Ces trois tables doivent etre dans des blocs de donnees ou d'instance
sinon la sortie DEF du FB passe a 1 et le mot de diagnostic DIAG = 1

-Les tables flux_A, Flux_B et Sv_dtab sont des Struct de 6 mots (maxi) declarees
 au niveau Stat du sous ensemble hebergeant la ou les BF (si mariage a
plusieurs)
 Les informations de tables flux doivent obligatoirement etres construites
 dans lordre suivant pour garantir lordre daffichage des donnees sous IHMP :
1er information de la struct = Numero dordre de lOF
2eme information de la struct = Numero de Famille /phase
3eme information = 1er mot de diversite utilise sur lilot
4eme information = 2eme mot de diversite utilise sur lilot
5eme information = 3eme mot de diversite utilise sur lilot
6eme information = 4eme mot de diversite utilise sur lilot


Le nom symbolique des structures est
Pour table FluxA et table fluxB = TM_f<NomSE correspondant au flux >
Pour la table SV_dtab = TM_sv <NomSE FluxA><NomSE FluxB>


PRINCIPE DE FONCTIONNEMENT DETAILLE DU MARIAGE:
***********************************************
Le mariage des flux A et B est traite par la DFB si les conditions suivantes
sont reunies :
- Autorisation Mariage Flux A = 1 (entree DFB Am_fa=1)
- Autorisation Mariage Flux B = 1 (entree DFB Am_fb=1)
- Les tables Identification Flux A et B (Table_fa et Table_fb) sont de longueur
identiques
- Si aucun mots de la table identification du flux A et du flux B n'est egal a 0
- Si aucune decision n'a encore ete prise
8 cas differents peuvent apparaitre suivant l'etat des entrees DFB Sp_fa et
Sp_fb :

*** Si EGALITE des Tables identification du flux A et du flux B : 4 cas a
traiter :
- 1 er cas : sans process flux A (Sp_fa=1) et sans process flux B (Sp_fb=1) :
=> Decision sortie Flux A
=> Decision sortie Flux B
- 2 eme cas : sans process flux A (Sp_fa=1) et avec process flux B (Sp_fb=0) :
=> Decision sortie Flux A
=> Decision sortie Flux B
- 3 eme cas : avec process flux A (Sp_fa=0) et sans process flux B (Sp_fb=1) :
=> Decision sortie Flux A
=> Decision sortie Flux B
- 4 eme cas : avec process flux A (Sp_fa=0) et avec process flux B (Sp_fb=0) :
=> Decision Mariage Flux A-Flux B

*** Si INEGALITE des Tables identification du flux A et du flux B : 4 cas a
traiter :
- 1 er cas : sans process flux A (Sp_fa=1) et sans process flux B (Sp_fb=1) :
=> Decision sortie Flux A
- 2 eme cas : sans process flux A (Sp_fa=1) et avec process flux B (Sp_fb=0) :
=> Decision sortie Flux A
- 3 eme cas : avec process flux A (Sp_fa=0) et sans process flux B (Sp_fb=1) :
=> Decision sortie Flux B
- 4 eme cas : avec process flux A (Sp_fa=0) et avec process flux B (Sp_fb=0) :
=> Attente Decision Operateur
   => Appui Bouton Demande de Sortie Flux A (Bds_fa=1) :
      => Decision sortie Flux A
   => Appui Bouton Demande de Sortie Flux B (Bds_fb=1) :
      => Decision sortie Flux B

CODE DE DEFAUT :
***************
Valeur de diag.codedef :
1 = Parametrage incorrect
      -Les tables ne sont pas de meme longueur
      -Une au moins des tables n'est pas dans un DB
      -Le format d'un des parametres n'est pas correct (Word)
2 =  au moins 1 mot de la table didentification du Flux A est a 0
4 =  au moins 1 mot de la table didentification du Flux B est a 0

****************************ENGLISH INFORMATION*********************************
DESCRIPTION:
************
-If identification tables from Flow A and B are equal or not,
-Depending on Input SP_FA = without process flow A
- and on SP_FB = without process flow B
the FB give the following outputs:
- Flow A-B matching
- Flow A exit
- Flow B exit
Flow A-flow B matching fault

In Body Shop, this FB make the sequenced and diversified parts matching
For detailed FB description : see GE03.FP.236 guide

OPERATING:
********
- A Flow is always the main flow on facility
- B Flow is the complementary part to be match
- BF_Mariage_API must be integrated in the sub-assembly of the maint flow
  (A flow)
- The lenght of the 3 tables TABLE_FA, TABLE_FB, SV_DTAB must be the same
- These 3 tables must be in DB (Global or Instance).
 If not, the ""DEF"" output is set for fault, and DIAG Fault code is =1 .
- The tables Flux_A, Flux_B and SV_dtab use a structure of 6 words (maxi)
  are defined in the STAT variables in the sub_assembly Function Block who use
  the BF_Mariage_API

  The Flow tables information must be made in this order to
  guarantee the IHMP screen informations :

 1st information in the struct = OF Order number
 2nd information in the struct = Family Number
 3rd information in the struct = 1st diversity part Word used in facility.
 4th information in the struct = 2nd diversity part Word used in facility
 5th information in the struct = 3rd diversity part Word used in facility
 6th information in the struct = 4th diversity part Word used in facility

The symbolic name of the Struct is :
For the table Flux_A and Flux_B = TM_f<sub-assembly Name attached to the flow>
For the table SV_dtab = TM_sv<Sub-assembly Name A flow><Sub-assembly Name B
flow>


DETAILED MATCHING OPERATION :
******************************
To match flow A and flow B, FB operates when :
- Flow A Matching Authorization =1 (Am_fa=1)
- Flow B Matching Authorization =1 (Am_fb=1)
- Length of flow A identification table = length flow B identification table
- No word in flow A or flow B tables is null
- No decision has been registered for the moment

Depending on Sp_fa and Sp_fb, there are 8 cases:
***If flow A and flow B Identification tables are EQUAL (""COK""), there are 4
cases:
- Case1 : no process in flow A and no process in flow B (Sp_fa=1, Sp_fb=1)
=> Flow A exit
=> Flow B exit
- Case2: no process in flow A and process in flow B (Sp_fa=1, Sp_fb=0)
=> Flow A exit
=> Flow B exit
- Case3: process in flow A and no process in flow B (Sp_fa=0, Sp_fb=1)
=> Flow A exit
=> Flow B exit
- Case4: process in flow A and process in flow B (Sp_fa=0, Sp_fb=0)
=> Matching Flow A and B

***If flow A and flow B Identification tables are DIFFERENT (""CNK""), there are
4
cases:
- Case1: no process in flow A and no process in flow B (Sp_fa=1, Sp_fb=1)
=> Flow A exit
- Case2: no process in flow A and process in flow B (Sp_fa=1, Sp_fb=0)
=> Flow A exit
- Case3: process in flow A and no process in flow B (Sp_fa=0, Sp_fb=1)
=> Flow B exit
- Case4: process in flow A and process in flow B (Sp_fa=0, Sp_fb=0)
=> Waiting for operator decision
     => If button Flow A exit is pushed (Bds_fa=1) then=> Flow A exit
     => If button Flow B exit is pushed (Bds_fb=1) then=> Flow B exit

FAULT CODE :
***********
Diag.codedef values :
1 = Parameter fault
      -Flows Tables are not the same size (lenght)
      -a Flow Table is not in a DB
      -Type of variable is not correct(Word)
2 = at least 1 word in the Workflow A identification table is set to 0
4 = at least 1 word in the Workflow B identification table is set to 0


*************************  ODIL_ID *********************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 21
Dernier ID mis en oeuvre / Last ID implemented : 2003_21
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";""
"**********************************************************************
*                            BF_ILOT                                 *
*                           **********                               *
*                PERMET DE GENERER LES INFOS ILOT                    *
*           USE FOR GENERATING FACILITY INFORMATIONS                 *
*
*********************************************************************

(In english further below)
DESCRIPTION:  LE FB ""ILOT"" ASSURE:
************
- La generation des infos ILOT
(rearmement, annulation defaut,test lampes, info clignotement, arret fin de
journee,defaut ilot)

- La mise en forme dans un mot des infos ILOT (UDT LIEN_ILOT)

MISE En OEUVRE :
**************
- IN :
- Bri ,Btl, Badi, Bafj sont reservees pour la connexion de Boutons
poussoirs hard. les Boutons logiciels correspondant pour les ihm sont
disponibles dans l'entree Pilot (Sauf BRi = BP reamement Ilot du pupitre)
- Inf_def : recois l'information d'une zone en defaut sur l'ilot qui est
generee par la BF_Zone_Modes_Ihm de chaque zone et mise en oeuvre dans le DB
global Z$G (exemple Z1G.Ihmz1def or Z2G.IhmZ2def or ...)
- Idcarte : A personaliser suivant l'installation (elle peu recevoir les
informations de defaut des cartes de communication, passerelles ... necessaires
au bon fonctionnement de l'ilot)

OUT :
- Ir : si cpu Non Safety a mettre en oeuvre dans le DB99 ""IG"" (IG.Ir)
       si Cpu Safety mettre en oeuvre dirrectement le memento safety associe
- Itlg : a mettre en oeuvre dans le DB99 ""IG"" (IG.Itlg)
- Iadf : si cpu Non Safety a mettre en oeuvre dans le DB99 ""IG"" (IG.Iadf)
       si Cpu Safety mettre en oeuvre dirrectement le memento safety associe
- Mafj, Icl, Def_api,Df_ilot  : A mettre en oeuvre dans le DB99 ""IG""
- S_vieapi : Variable SMP ( Mot de vie de la liaison entre SMP et L'api)
- Vdefi et Vafj sont reservees pour la connexion de Voyants hard. les
voyants logiciels correspondant pour les ihm sont disponibles
dans le sortie Diag

Informations de suivi SMP par rapport a la sortie Def_api :
Pour le suivi SMP des Variables STAT sont a mettre en oeuvre dans le FB1 .
La sortie Def_api est a associer a la zone de mise en oeuvre du Pupitre (MOP ou
LOP)de l'ilot.
La variable stat associee a pour Nom symbolique S<N°Zone du pupitre>dfapi
(exemple si Pupitre mis en oeuvre dans la zone 4 = S4dfapi)
A cette variable le suivi a besoins d'une copie de l'image de defaut pour
toutes
les Zones de l'ilot.
Le nom de ces variable est le suivant : S$def_api  avec $ = N° de la zone
Ainsi suivant l'exemple il faut rajouter les variables S1def_api, S2def_api,
S3def_api et S4def_api.

L'equation suivante est a mettre en oeuvre en aval de la BF :
IG.def_api       S4dfal24V           S4defapi
--| |------------|/|-----------------( )-----|  <-- Pour pupitre Mis en oeuvre
              |              |       S4def_api      Dans la zone 4
              |              |-------( )-----|
              |   S1dfal24V          S1def_api
              |---|/|----------------( )-----|
              |   S2dfal24V          S2def_api
              |---|/|----------------( )-----|
              |   S3dfal24V          S3def_api
              |---|/|----------------( )-----|
S$dfal24v = defaut d'alimentation 24 Volts de la zone concerne

  POUR LA DESCRIPTION DETAILLEE DE LA FB : VOIR GUIDE GE03.FP.235

CODE de DEFAUT :
***************
Valeur de Diag.codedef
1 = Defaut Ilot

************************** ENGLISH DESCRIPTION ***********************
DESCRIPTION :
*************
- Ensure generation of facility information
(Control On, Fault Reset, Lamp test, Blincking information, end of Production
stop, facility fault)
- organisation of facility information into a dedicated word (UDT LIEN_ILOT)

OPERATING :
***********
- IN:
- Bri, Btl, Badi, Bafj are reserved for the connection of hard Pushbuttons.
Software Buttons (for ihm) are available in the input Pilot
(Except BRI = Pushbutton on Panel)
- Inf_def: receive the information of a faulty zone in the Facility which is
generated by the BF_Zone_Modes_Ihm of every zone and implementation in the
global DB Z$G (example Z1G.Ihmz1def OR Z2G.IhmZ2def)
- Idcarte:  According to the Facility it receives the information of defect
of the communication cards, gateway ... that is necessary for its good
functioning of the facility

OUT:
- Ir: if no Safety CPU use the DB99 "" IG "" ( IG.Ir)
      if Safety CPU use the Memento associated to safety code
- Itlg: operate in the DB99 "" IG "" ( IG.Itlg)
- Iadf: if no Safety CPU use the DB99 "" IG "" ( IG.Iadf)
      if Safety CPU use the Memento associated to safety code
- Mafj, Icl, Def_api, Df_ilot: implement in the DB99 "" IG ""
- S_vieapi: SMP Variable (Word of life for SMP/PLC communication check)
- Vdefi and Vafj is reserved for the connection of hard lamp. Software Lamp for
HMI are available in Diag output

Information of follow-up SMP depending on Def_api output:
for the follow-up SMP, STAT Variables must be defined in the FB1.
The Def_api output must be associated with the zone of implementation of the
panel
(MOP or LOP) in the facility.
The STAT variable associated take this symbolic Name S<panel zone Number>dfapi
(examples with panel located in the zone 4 = S4dfapi)
the follow-up needs a copy of the image of defect for all the Zones
The name of these variable is the following one: $Sdef_api with $ = Zone Number.
 So according to the example it is necessary to add variables
S1def_api, S2def_api, S3def_api and S4def_api.

The following equation must be implemented downstream to the BF:
IG.def_api       S4dfal24V           S4defapi
--| |------------|/|-----------------( )-----|  <-- for a MOP Panel located in
              |              |       S4def_api  <---zone 4
              |              |-------( )-----|
              |   S1dfal24V          S1def_api
              |---|/|----------------( )-----|
              |   S2dfal24V          S2def_api
              |---|/|----------------( )-----|
              |   S3dfal24V          S3def_api
              |---|/|----------------( )-----|
S$dfal24v =  24 Volts Fault in the Zone
See GE03.FP.235 for details

FAULT CODE  :
***************
Value of Diag.codedef
1 = Facility Fault

******************************** _ODIL_ID_ ***************************
NB Reseaux BF 1er Version / Network Number in 1ft version : 20
Dernier ID mis en oeuvre / Last ID implemented : 2004_20
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"**********************************************************************
*                            BF_ILOT                                 *
*                           **********                               *
*                PERMET DE GENERER LES INFOS ILOT                    *
*           USE FOR GENERATING FACILITY INFORMATIONS                 *
*
*********************************************************************

(In english further below)
DESCRIPTION:  LE FB ""ILOT"" ASSURE:
************
- La generation des infos ILOT
(rearmement, annulation defaut,test lampes, info clignotement, arret fin de
journee,defaut ilot)

- La mise en forme dans un mot des infos ILOT (UDT LIEN_ILOT)

MISE En OEUVRE :
**************
- IN :
- Bri ,Btl, Badi, Bafj sont reservees pour la connexion de Boutons
poussoirs hard. les Boutons logiciels correspondant pour les ihm sont
disponibles dans l'entree Pilot (Sauf BRi = BP reamement Ilot du pupitre)
- Inf_def : recois l'information d'une zone en defaut sur l'ilot qui est
generee par la BF_Zone_Modes_Ihm de chaque zone et mise en oeuvre dans le DB
global Z$G (exemple Z1G.Ihmz1def or Z2G.IhmZ2def or ...)
- Idcarte : A personaliser suivant l'installation (elle peu recevoir les
informations de defaut des cartes de communication, passerelles ... necessaires
au bon fonctionnement de l'ilot)

OUT :
- Ir : si cpu Non Safety a mettre en oeuvre dans le DB99 ""IG"" (IG.Ir)
       si Cpu Safety mettre en oeuvre dirrectement le memento safety associe
- Itlg : a mettre en oeuvre dans le DB99 ""IG"" (IG.Itlg)
- Iadf : si cpu Non Safety a mettre en oeuvre dans le DB99 ""IG"" (IG.Iadf)
       si Cpu Safety mettre en oeuvre dirrectement le memento safety associe
- Mafj, Icl, Def_api,Df_ilot  : A mettre en oeuvre dans le DB99 ""IG""
- S_vieapi : Variable SMP ( Mot de vie de la liaison entre SMP et L'api)
- Vdefi et Vafj sont reservees pour la connexion de Voyants hard. les
voyants logiciels correspondant pour les ihm sont disponibles
dans le sortie Diag

Informations de suivi SMP par rapport a la sortie Def_api :
Pour le suivi SMP des Variables STAT sont a mettre en oeuvre dans le FB1 .
La sortie Def_api est a associer a la zone de mise en oeuvre du Pupitre (MOP ou
LOP)de l'ilot.
La variable stat associee a pour Nom symbolique S<N°Zone du pupitre>dfapi
(exemple si Pupitre mis en oeuvre dans la zone 4 = S4dfapi)
A cette variable le suivi a besoins d'une copie de l'image de defaut pour
toutes
les Zones de l'ilot.
Le nom de ces variable est le suivant : S$def_api  avec $ = N° de la zone
Ainsi suivant l'exemple il faut rajouter les variables S1def_api, S2def_api,
S3def_api et S4def_api.

L'equation suivante est a mettre en oeuvre en aval de la BF :
IG.def_api       S4dfal24V           S4defapi
--| |------------|/|-----------------( )-----|  <-- Pour pupitre Mis en oeuvre
              |              |       S4def_api      Dans la zone 4
              |              |-------( )-----|
              |   S1dfal24V          S1def_api
              |---|/|----------------( )-----|
              |   S2dfal24V          S2def_api
              |---|/|----------------( )-----|
              |   S3dfal24V          S3def_api
              |---|/|----------------( )-----|
S$dfal24v = defaut d'alimentation 24 Volts de la zone concerne

  POUR LA DESCRIPTION DETAILLEE DE LA FB : VOIR GUIDE GE03.FP.235

CODE de DEFAUT :
***************
Valeur de Diag.codedef
1 = Defaut Ilot

************************** ENGLISH DESCRIPTION ***********************
DESCRIPTION :
*************
- Ensure generation of facility information
(Control On, Fault Reset, Lamp test, Blincking information, end of Production
stop, facility fault)
- organisation of facility information into a dedicated word (UDT LIEN_ILOT)

OPERATING :
***********
- IN:
- Bri, Btl, Badi, Bafj are reserved for the connection of hard Pushbuttons.
Software Buttons (for ihm) are available in the input Pilot
(Except BRI = Pushbutton on Panel)
- Inf_def: receive the information of a faulty zone in the Facility which is
generated by the BF_Zone_Modes_Ihm of every zone and implementation in the
global DB Z$G (example Z1G.Ihmz1def OR Z2G.IhmZ2def)
- Idcarte:  According to the Facility it receives the information of defect
of the communication cards, gateway ... that is necessary for its good
functioning of the facility

OUT:
- Ir: if no Safety CPU use the DB99 "" IG "" ( IG.Ir)
      if Safety CPU use the Memento associated to safety code
- Itlg: operate in the DB99 "" IG "" ( IG.Itlg)
- Iadf: if no Safety CPU use the DB99 "" IG "" ( IG.Iadf)
      if Safety CPU use the Memento associated to safety code
- Mafj, Icl, Def_api, Df_ilot: implement in the DB99 "" IG ""
- S_vieapi: SMP Variable (Word of life for SMP/PLC communication check)
- Vdefi and Vafj is reserved for the connection of hard lamp. Software Lamp for
HMI are available in Diag output

Information of follow-up SMP depending on Def_api output:
for the follow-up SMP, STAT Variables must be defined in the FB1.
The Def_api output must be associated with the zone of implementation of the
panel
(MOP or LOP) in the facility.
The STAT variable associated take this symbolic Name S<panel zone Number>dfapi
(examples with panel located in the zone 4 = S4dfapi)
the follow-up needs a copy of the image of defect for all the Zones
The name of these variable is the following one: $Sdef_api with $ = Zone Number.
 So according to the example it is necessary to add variables
S1def_api, S2def_api, S3def_api and S4def_api.

The following equation must be implemented downstream to the BF:
IG.def_api       S4dfal24V           S4defapi
--| |------------|/|-----------------( )-----|  <-- for a MOP Panel located in
              |              |       S4def_api  <---zone 4
              |              |-------( )-----|
              |   S1dfal24V          S1def_api
              |---|/|----------------( )-----|
              |   S2dfal24V          S2def_api
              |---|/|----------------( )-----|
              |   S3dfal24V          S3def_api
              |---|/|----------------( )-----|
S$dfal24v =  24 Volts Fault in the Zone
See GE03.FP.235 for details

FAULT CODE  :
***************
Value of Diag.codedef
1 = Facility Fault

******************************** _ODIL_ID_ ***************************
NB Reseaux BF 1er Version / Network Number in 1ft version : 20
Dernier ID mis en oeuvre / Last ID implemented : 2004_20
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"**********************************************************************
*                            BF_ILOT                                 *
*                           **********                               *
*                PERMET DE GENERER LES INFOS ILOT                    *
*           USE FOR GENERATING FACILITY INFORMATIONS                 *
*
*********************************************************************

(In english further below)
DESCRIPTION:  LE FB ""ILOT"" ASSURE:
************
- La generation des infos ILOT
(rearmement, annulation defaut,test lampes, info clignotement, arret fin de
journee,defaut ilot)

- La mise en forme dans un mot des infos ILOT (UDT LIEN_ILOT)

MISE En OEUVRE :
**************
- IN :
- Bri ,Btl, Badi, Bafj sont reservees pour la connexion de Boutons
poussoirs hard. les Boutons logiciels correspondant pour les ihm sont
disponibles dans l'entree Pilot (Sauf BRi = BP reamement Ilot du pupitre)
- Inf_def : recois l'information d'une zone en defaut sur l'ilot qui est
generee par la BF_Zone_Modes_Ihm de chaque zone et mise en oeuvre dans le DB
global Z$G (exemple Z1G.Ihmz1def or Z2G.IhmZ2def or ...)
- Idcarte : A personaliser suivant l'installation (elle peu recevoir les
informations de defaut des cartes de communication, passerelles ... necessaires
au bon fonctionnement de l'ilot)

OUT :
- Ir : si cpu Non Safety a mettre en oeuvre dans le DB99 ""IG"" (IG.Ir)
       si Cpu Safety mettre en oeuvre dirrectement le memento safety associe
- Itlg : a mettre en oeuvre dans le DB99 ""IG"" (IG.Itlg)
- Iadf : si cpu Non Safety a mettre en oeuvre dans le DB99 ""IG"" (IG.Iadf)
       si Cpu Safety mettre en oeuvre dirrectement le memento safety associe
- Mafj, Icl, Def_api,Df_ilot  : A mettre en oeuvre dans le DB99 ""IG""
- S_vieapi : Variable SMP ( Mot de vie de la liaison entre SMP et L'api)
- Vdefi et Vafj sont reservees pour la connexion de Voyants hard. les
voyants logiciels correspondant pour les ihm sont disponibles
dans le sortie Diag

Informations de suivi SMP par rapport a la sortie Def_api :
Pour le suivi SMP des Variables STAT sont a mettre en oeuvre dans le FB1 .
La sortie Def_api est a associer a la zone de mise en oeuvre du Pupitre (MOP ou
LOP)de l'ilot.
La variable stat associee a pour Nom symbolique S<N°Zone du pupitre>dfapi
(exemple si Pupitre mis en oeuvre dans la zone 4 = S4dfapi)
A cette variable le suivi a besoins d'une copie de l'image de defaut pour
toutes
les Zones de l'ilot.
Le nom de ces variable est le suivant : S$def_api  avec $ = N° de la zone
Ainsi suivant l'exemple il faut rajouter les variables S1def_api, S2def_api,
S3def_api et S4def_api.

L'equation suivante est a mettre en oeuvre en aval de la BF :
IG.def_api       S4dfal24V           S4defapi
--| |------------|/|-----------------( )-----|  <-- Pour pupitre Mis en oeuvre
              |              |       S4def_api      Dans la zone 4
              |              |-------( )-----|
              |   S1dfal24V          S1def_api
              |---|/|----------------( )-----|
              |   S2dfal24V          S2def_api
              |---|/|----------------( )-----|
              |   S3dfal24V          S3def_api
              |---|/|----------------( )-----|
S$dfal24v = defaut d'alimentation 24 Volts de la zone concerne

  POUR LA DESCRIPTION DETAILLEE DE LA FB : VOIR GUIDE GE03.FP.235

CODE de DEFAUT :
***************
Valeur de Diag.codedef
1 = Defaut Ilot

************************** ENGLISH DESCRIPTION ***********************
DESCRIPTION :
*************
- Ensure generation of facility information
(Control On, Fault Reset, Lamp test, Blincking information, end of Production
stop, facility fault)
- organisation of facility information into a dedicated word (UDT LIEN_ILOT)

OPERATING :
***********
- IN:
- Bri, Btl, Badi, Bafj are reserved for the connection of hard Pushbuttons.
Software Buttons (for ihm) are available in the input Pilot
(Except BRI = Pushbutton on Panel)
- Inf_def: receive the information of a faulty zone in the Facility which is
generated by the BF_Zone_Modes_Ihm of every zone and implementation in the
global DB Z$G (example Z1G.Ihmz1def OR Z2G.IhmZ2def)
- Idcarte:  According to the Facility it receives the information of defect
of the communication cards, gateway ... that is necessary for its good
functioning of the facility

OUT:
- Ir: if no Safety CPU use the DB99 "" IG "" ( IG.Ir)
      if Safety CPU use the Memento associated to safety code
- Itlg: operate in the DB99 "" IG "" ( IG.Itlg)
- Iadf: if no Safety CPU use the DB99 "" IG "" ( IG.Iadf)
      if Safety CPU use the Memento associated to safety code
- Mafj, Icl, Def_api, Df_ilot: implement in the DB99 "" IG ""
- S_vieapi: SMP Variable (Word of life for SMP/PLC communication check)
- Vdefi and Vafj is reserved for the connection of hard lamp. Software Lamp for
HMI are available in Diag output

Information of follow-up SMP depending on Def_api output:
for the follow-up SMP, STAT Variables must be defined in the FB1.
The Def_api output must be associated with the zone of implementation of the
panel
(MOP or LOP) in the facility.
The STAT variable associated take this symbolic Name S<panel zone Number>dfapi
(examples with panel located in the zone 4 = S4dfapi)
the follow-up needs a copy of the image of defect for all the Zones
The name of these variable is the following one: $Sdef_api with $ = Zone Number.
 So according to the example it is necessary to add variables
S1def_api, S2def_api, S3def_api and S4def_api.

The following equation must be implemented downstream to the BF:
IG.def_api       S4dfal24V           S4defapi
--| |------------|/|-----------------( )-----|  <-- for a MOP Panel located in
              |              |       S4def_api  <---zone 4
              |              |-------( )-----|
              |   S1dfal24V          S1def_api
              |---|/|----------------( )-----|
              |   S2dfal24V          S2def_api
              |---|/|----------------( )-----|
              |   S3dfal24V          S3def_api
              |---|/|----------------( )-----|
S$dfal24v =  24 Volts Fault in the Zone
See GE03.FP.235 for details

FAULT CODE  :
***************
Value of Diag.codedef
1 = Facility Fault

******************************** _ODIL_ID_ ***************************
NB Reseaux BF 1er Version / Network Number in 1ft version : 20
Dernier ID mis en oeuvre / Last ID implemented : 2004_20
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";""
"***************************************************************************
*                     BF ""B_VIEAPI""                                       *
*    CONTROLE L'ACTIVITE DE DEUX AUTOMATES ECHANGEANT DES INFORMATIONS    *
*    Activity check for a link between two PLCs                           *
***************************************************************************
(In english further below)

DESCRIPTION:
************
Cette boite fonctionnelle assure :
- l'amination d'un bit de vie ""Emis"" de cet automate vers l'autre
- le contrôle d'activite d'un bit de vie ""Recu"" de l'autre autamate par celui-ci
En permanence, l'automate X met son bit de vie dans le meme etat que celui de
l'automate Y, et l'automate Y met son bit de vie dans l'etat oppose de celui de
l'automate X.
Ainsi les bits de vie changent d'etat continuellement, si cette activite
s'arrete alors la liaison n'est plus consideree fiable.

MISE en OEUVRE:
***********
- L'automate X contient une FB dont l'entree ""Mode"" est a 1 ;
=> il recopie l'etat de l'entree ""Recu"" dans la sortie ""Emis""
- L'automate Y contient une FB dont l'entree ""Mode"" est a 0 ;
=> il recopie le complement de l'etat de l'entree ""Recu"" dans la sortie ""Emis""
- Dans ces conditions ;
. Si l'entree ""Recu"" d'une FB ne change pas d'etat dans un temps indique par
l'entree ""Tavdf"" , alors sa sortie ""Def"" signale un defaut d'activite.
. Si l'entree ""Recu"" d'une FB change d'etat, alors sa sortie ""Def"" repasse a 0
CONTRAINTES:
************
- Chaque automate doit animer une FB ""B_VIEAPI"" avec;
. pour le premier, l'entree ""Mode"" a 1
. pour le second, l'entree ""Mode"" a 0
Une ""paire"" de FB sert pour une liaison entre deux automates seulement. Si un
automate communique avec plusieurs autres, il devra animer autant de FB et de
bits de vie que d'automates lies.
- La valeur de temps indiquee en entree ""Tavdf"" est en 1/100e de seconde, elle
est a regler suivant les temps de scrutation programme de l'automate le plus
lent et le temps de mise a jour des informations par le systeme d'echange de
donnees (prendre 0,5 seconde par defaut)

DIAGNOSTIC SUR SIGNALEMENT DU DEFAUT:
*************************************
- Les FB des automates X et Y sont mal parametrees, dans le meme mode de
fonctionnement;
. Entrees ""Mode"" a 0 ; les FB mettent les bits de vie en concordance et
attendent
=> au bout du temps ""Tavdf"" , le defaut est signale par les deux FB.
. Entrees ""Mode"" a 1 ; les FB mettent les bits de vie en discordance et
attendent
=> au bout du temps ""Tavdf"" , le defaut est signale par les deux FB.
- Les FB des automates X et Y sont bien parametrees dans des modes differents ;
. Si le systeme d'echange est hors service (ex : câble coupe), les deux
automates X et Y fonctionnant, les FB animent les bits de vie et attendent
=> au bout du temps ""Tavdf"" , le defaut est signale par les deux FB.
. Si la liaison est en service, l'automate X fonctionne et l'automate Y est
arrete, la FB de l'automate X anime son bit de vie et attend
=> au bout du temps ""Tavdf"" , elle signale l'automate Y en defaut
. Si la liaison est en service, les deux automates X et Y fonctionnent, mais
l'automate Y subit un temps de scrutation programme tres long, superieur au
temps ""Tavdf"", la FB de l'automate X anime son bit de vie et attend
=> au bout du temps ""Tavdf"" , elle signale l'automate Y en defaut jusqu'au
changement d'etat du bit de vie de ce dernier

*********************ENGLISH INFORMATION****************************************

DESCRIPTION :
**********
This FB checks the communication activity between two linked PLCs (parallel,
series, network, any bit exchanges).
Activity is continuously checked using the status changes of ""life bits"" sent
with the data exchanged. When inactivity is detected a fault is signalled,
which can, for example, be used to invalidate cycle.

PLC X continuously sets its life bit to the same status as that of the PLC Y.
PLC Y sets its life bit to the opposite status of that of PLC X. The life bits
therefore change status continuously. If this activity stops, we can then
consider the link to be defective and therefore unreliable.

OPERATING :
**********
-PLC X contains an FB whose ""Mode"" input is set to 1:
=> it copies the ""Recu"" (received) input's status into its ""Emis"" (transmitted)
output
-PLC Y contains an FB whose ""Mode"" input is set to 0:
=> it copies the complement of the ""Recu"" input's status into its ""Emis"" output
-Under these conditions:
. If an FB's ""Recu"" input does not change its status within the time
indicated by the ""Tavdf"" input its ""Def"" output signals an activity fault in
the linked PLC.
. If an FB's ""Recu"" input changes its status its ""Def"" output changes
back to 0

- Each PLC must order a BF _B_vieapi with :
For the first PLC , ""Mode"" imput at 1
For the second PLC, ""Mode"" input at 0
One ""pair"" of FB's is used for only one link between two PLCs. If a PLC
communicates with several others, it must control an FB and a life bit for each
linked PLC

- The ""Tavdf"" input time value is in Time format. It should be adjusted
according
to the slowest PLC's program polling time and the data exchange system's data
update time (use 0.5 second, i.e. T#500MS by default).

DIAGNOSTICS ON FAULT SIGNALLING:
*******************************
A) The FBs of PLCs X and Y are not correctly settings, they are both in the
same
operating mode:
. ""Mode"" inputs set to 0: the FBs set the life bits to the same value and then
wait
=> after the ""Tavdf"" time both FBs signal the fault.
. ""Mode"" inputs set to 1: the FBs set the life bits to the opposite value and
then wait
=> after the ""Tavdf"" time both FBs signal the fault.

The FBs of PLCs X and Y are correctly set with different operating modes:
-If the exchange system is defective (e.g.: broken cable), the two PLCs X
and Y work, the FBs set the life bits and then wait
=> after the ""Tavdf"" time both FBs signal the fault.
-If the link is working, PLC X working and PLC Y stopped, PLC X's FB sets
its life bit then waits
=> after the ""Tavdf"" time, it signals PLC Y as defective
-If the link is working, both PLCs X and Y are working, but PLC Y has
very long program polling time, exceeding the ""Tavdf"" time, the PLC X's FB sets
its life bit then waits
=> after the ""Tavdf"" time, it signals PLC Y as defective until PLC Y's life bit
changes status

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 4
Dernier ID mis en oeuvre / Last ID implemented : 2006_4
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"***************************************************************************
*                     BF ""B_VIEAPI""                                       *
*    CONTROLE L'ACTIVITE DE DEUX AUTOMATES ECHANGEANT DES INFORMATIONS    *
*    Activity check for a link between two PLCs                           *
***************************************************************************
(In english further below)

DESCRIPTION:
************
Cette boite fonctionnelle assure :
- l'amination d'un bit de vie ""Emis"" de cet automate vers l'autre
- le contrôle d'activite d'un bit de vie ""Recu"" de l'autre autamate par celui-ci
En permanence, l'automate X met son bit de vie dans le meme etat que celui de
l'automate Y, et l'automate Y met son bit de vie dans l'etat oppose de celui de
l'automate X.
Ainsi les bits de vie changent d'etat continuellement, si cette activite
s'arrete alors la liaison n'est plus consideree fiable.

MISE en OEUVRE:
***********
- L'automate X contient une FB dont l'entree ""Mode"" est a 1 ;
=> il recopie l'etat de l'entree ""Recu"" dans la sortie ""Emis""
- L'automate Y contient une FB dont l'entree ""Mode"" est a 0 ;
=> il recopie le complement de l'etat de l'entree ""Recu"" dans la sortie ""Emis""
- Dans ces conditions ;
. Si l'entree ""Recu"" d'une FB ne change pas d'etat dans un temps indique par
l'entree ""Tavdf"" , alors sa sortie ""Def"" signale un defaut d'activite.
. Si l'entree ""Recu"" d'une FB change d'etat, alors sa sortie ""Def"" repasse a 0
CONTRAINTES:
************
- Chaque automate doit animer une FB ""B_VIEAPI"" avec;
. pour le premier, l'entree ""Mode"" a 1
. pour le second, l'entree ""Mode"" a 0
Une ""paire"" de FB sert pour une liaison entre deux automates seulement. Si un
automate communique avec plusieurs autres, il devra animer autant de FB et de
bits de vie que d'automates lies.
- La valeur de temps indiquee en entree ""Tavdf"" est en 1/100e de seconde, elle
est a regler suivant les temps de scrutation programme de l'automate le plus
lent et le temps de mise a jour des informations par le systeme d'echange de
donnees (prendre 0,5 seconde par defaut)

DIAGNOSTIC SUR SIGNALEMENT DU DEFAUT:
*************************************
- Les FB des automates X et Y sont mal parametrees, dans le meme mode de
fonctionnement;
. Entrees ""Mode"" a 0 ; les FB mettent les bits de vie en concordance et
attendent
=> au bout du temps ""Tavdf"" , le defaut est signale par les deux FB.
. Entrees ""Mode"" a 1 ; les FB mettent les bits de vie en discordance et
attendent
=> au bout du temps ""Tavdf"" , le defaut est signale par les deux FB.
- Les FB des automates X et Y sont bien parametrees dans des modes differents ;
. Si le systeme d'echange est hors service (ex : câble coupe), les deux
automates X et Y fonctionnant, les FB animent les bits de vie et attendent
=> au bout du temps ""Tavdf"" , le defaut est signale par les deux FB.
. Si la liaison est en service, l'automate X fonctionne et l'automate Y est
arrete, la FB de l'automate X anime son bit de vie et attend
=> au bout du temps ""Tavdf"" , elle signale l'automate Y en defaut
. Si la liaison est en service, les deux automates X et Y fonctionnent, mais
l'automate Y subit un temps de scrutation programme tres long, superieur au
temps ""Tavdf"", la FB de l'automate X anime son bit de vie et attend
=> au bout du temps ""Tavdf"" , elle signale l'automate Y en defaut jusqu'au
changement d'etat du bit de vie de ce dernier

*********************ENGLISH INFORMATION****************************************

DESCRIPTION :
**********
This FB checks the communication activity between two linked PLCs (parallel,
series, network, any bit exchanges).
Activity is continuously checked using the status changes of ""life bits"" sent
with the data exchanged. When inactivity is detected a fault is signalled,
which can, for example, be used to invalidate cycle.

PLC X continuously sets its life bit to the same status as that of the PLC Y.
PLC Y sets its life bit to the opposite status of that of PLC X. The life bits
therefore change status continuously. If this activity stops, we can then
consider the link to be defective and therefore unreliable.

OPERATING :
**********
-PLC X contains an FB whose ""Mode"" input is set to 1:
=> it copies the ""Recu"" (received) input's status into its ""Emis"" (transmitted)
output
-PLC Y contains an FB whose ""Mode"" input is set to 0:
=> it copies the complement of the ""Recu"" input's status into its ""Emis"" output
-Under these conditions:
. If an FB's ""Recu"" input does not change its status within the time
indicated by the ""Tavdf"" input its ""Def"" output signals an activity fault in
the linked PLC.
. If an FB's ""Recu"" input changes its status its ""Def"" output changes
back to 0

- Each PLC must order a BF _B_vieapi with :
For the first PLC , ""Mode"" imput at 1
For the second PLC, ""Mode"" input at 0
One ""pair"" of FB's is used for only one link between two PLCs. If a PLC
communicates with several others, it must control an FB and a life bit for each
linked PLC

- The ""Tavdf"" input time value is in Time format. It should be adjusted
according
to the slowest PLC's program polling time and the data exchange system's data
update time (use 0.5 second, i.e. T#500MS by default).

DIAGNOSTICS ON FAULT SIGNALLING:
*******************************
A) The FBs of PLCs X and Y are not correctly settings, they are both in the
same
operating mode:
. ""Mode"" inputs set to 0: the FBs set the life bits to the same value and then
wait
=> after the ""Tavdf"" time both FBs signal the fault.
. ""Mode"" inputs set to 1: the FBs set the life bits to the opposite value and
then wait
=> after the ""Tavdf"" time both FBs signal the fault.

The FBs of PLCs X and Y are correctly set with different operating modes:
-If the exchange system is defective (e.g.: broken cable), the two PLCs X
and Y work, the FBs set the life bits and then wait
=> after the ""Tavdf"" time both FBs signal the fault.
-If the link is working, PLC X working and PLC Y stopped, PLC X's FB sets
its life bit then waits
=> after the ""Tavdf"" time, it signals PLC Y as defective
-If the link is working, both PLCs X and Y are working, but PLC Y has
very long program polling time, exceeding the ""Tavdf"" time, the PLC X's FB sets
its life bit then waits
=> after the ""Tavdf"" time, it signals PLC Y as defective until PLC Y's life bit
changes status

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 4
Dernier ID mis en oeuvre / Last ID implemented : 2006_4
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"***************************************************************************
*                     BF ""B_VIEAPI""                                       *
*    CONTROLE L'ACTIVITE DE DEUX AUTOMATES ECHANGEANT DES INFORMATIONS    *
*    Activity check for a link between two PLCs                           *
***************************************************************************
(In english further below)

DESCRIPTION:
************
Cette boite fonctionnelle assure :
- l'amination d'un bit de vie ""Emis"" de cet automate vers l'autre
- le contrôle d'activite d'un bit de vie ""Recu"" de l'autre autamate par celui-ci
En permanence, l'automate X met son bit de vie dans le meme etat que celui de
l'automate Y, et l'automate Y met son bit de vie dans l'etat oppose de celui de
l'automate X.
Ainsi les bits de vie changent d'etat continuellement, si cette activite
s'arrete alors la liaison n'est plus consideree fiable.

MISE en OEUVRE:
***********
- L'automate X contient une FB dont l'entree ""Mode"" est a 1 ;
=> il recopie l'etat de l'entree ""Recu"" dans la sortie ""Emis""
- L'automate Y contient une FB dont l'entree ""Mode"" est a 0 ;
=> il recopie le complement de l'etat de l'entree ""Recu"" dans la sortie ""Emis""
- Dans ces conditions ;
. Si l'entree ""Recu"" d'une FB ne change pas d'etat dans un temps indique par
l'entree ""Tavdf"" , alors sa sortie ""Def"" signale un defaut d'activite.
. Si l'entree ""Recu"" d'une FB change d'etat, alors sa sortie ""Def"" repasse a 0
CONTRAINTES:
************
- Chaque automate doit animer une FB ""B_VIEAPI"" avec;
. pour le premier, l'entree ""Mode"" a 1
. pour le second, l'entree ""Mode"" a 0
Une ""paire"" de FB sert pour une liaison entre deux automates seulement. Si un
automate communique avec plusieurs autres, il devra animer autant de FB et de
bits de vie que d'automates lies.
- La valeur de temps indiquee en entree ""Tavdf"" est en 1/100e de seconde, elle
est a regler suivant les temps de scrutation programme de l'automate le plus
lent et le temps de mise a jour des informations par le systeme d'echange de
donnees (prendre 0,5 seconde par defaut)

DIAGNOSTIC SUR SIGNALEMENT DU DEFAUT:
*************************************
- Les FB des automates X et Y sont mal parametrees, dans le meme mode de
fonctionnement;
. Entrees ""Mode"" a 0 ; les FB mettent les bits de vie en concordance et
attendent
=> au bout du temps ""Tavdf"" , le defaut est signale par les deux FB.
. Entrees ""Mode"" a 1 ; les FB mettent les bits de vie en discordance et
attendent
=> au bout du temps ""Tavdf"" , le defaut est signale par les deux FB.
- Les FB des automates X et Y sont bien parametrees dans des modes differents ;
. Si le systeme d'echange est hors service (ex : câble coupe), les deux
automates X et Y fonctionnant, les FB animent les bits de vie et attendent
=> au bout du temps ""Tavdf"" , le defaut est signale par les deux FB.
. Si la liaison est en service, l'automate X fonctionne et l'automate Y est
arrete, la FB de l'automate X anime son bit de vie et attend
=> au bout du temps ""Tavdf"" , elle signale l'automate Y en defaut
. Si la liaison est en service, les deux automates X et Y fonctionnent, mais
l'automate Y subit un temps de scrutation programme tres long, superieur au
temps ""Tavdf"", la FB de l'automate X anime son bit de vie et attend
=> au bout du temps ""Tavdf"" , elle signale l'automate Y en defaut jusqu'au
changement d'etat du bit de vie de ce dernier

*********************ENGLISH INFORMATION****************************************

DESCRIPTION :
**********
This FB checks the communication activity between two linked PLCs (parallel,
series, network, any bit exchanges).
Activity is continuously checked using the status changes of ""life bits"" sent
with the data exchanged. When inactivity is detected a fault is signalled,
which can, for example, be used to invalidate cycle.

PLC X continuously sets its life bit to the same status as that of the PLC Y.
PLC Y sets its life bit to the opposite status of that of PLC X. The life bits
therefore change status continuously. If this activity stops, we can then
consider the link to be defective and therefore unreliable.

OPERATING :
**********
-PLC X contains an FB whose ""Mode"" input is set to 1:
=> it copies the ""Recu"" (received) input's status into its ""Emis"" (transmitted)
output
-PLC Y contains an FB whose ""Mode"" input is set to 0:
=> it copies the complement of the ""Recu"" input's status into its ""Emis"" output
-Under these conditions:
. If an FB's ""Recu"" input does not change its status within the time
indicated by the ""Tavdf"" input its ""Def"" output signals an activity fault in
the linked PLC.
. If an FB's ""Recu"" input changes its status its ""Def"" output changes
back to 0

- Each PLC must order a BF _B_vieapi with :
For the first PLC , ""Mode"" imput at 1
For the second PLC, ""Mode"" input at 0
One ""pair"" of FB's is used for only one link between two PLCs. If a PLC
communicates with several others, it must control an FB and a life bit for each
linked PLC

- The ""Tavdf"" input time value is in Time format. It should be adjusted
according
to the slowest PLC's program polling time and the data exchange system's data
update time (use 0.5 second, i.e. T#500MS by default).

DIAGNOSTICS ON FAULT SIGNALLING:
*******************************
A) The FBs of PLCs X and Y are not correctly settings, they are both in the
same
operating mode:
. ""Mode"" inputs set to 0: the FBs set the life bits to the same value and then
wait
=> after the ""Tavdf"" time both FBs signal the fault.
. ""Mode"" inputs set to 1: the FBs set the life bits to the opposite value and
then wait
=> after the ""Tavdf"" time both FBs signal the fault.

The FBs of PLCs X and Y are correctly set with different operating modes:
-If the exchange system is defective (e.g.: broken cable), the two PLCs X
and Y work, the FBs set the life bits and then wait
=> after the ""Tavdf"" time both FBs signal the fault.
-If the link is working, PLC X working and PLC Y stopped, PLC X's FB sets
its life bit then waits
=> after the ""Tavdf"" time, it signals PLC Y as defective
-If the link is working, both PLCs X and Y are working, but PLC Y has
very long program polling time, exceeding the ""Tavdf"" time, the PLC X's FB sets
its life bit then waits
=> after the ""Tavdf"" time, it signals PLC Y as defective until PLC Y's life bit
changes status

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 4
Dernier ID mis en oeuvre / Last ID implemented : 2006_4
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";""
"********************************************************************************
*                                       BF_IDENT                               *
*                                    Identification (RFID)
*
********************************************************************************
(In English further below)

Description:
------------
Ce Bloc Fonctionnel permet de lire/ecrire des etiquettes RFID
Le parametrage par defaut permet de lire/ecire des etiquettes de la gamme RF 300


Pre requis:
----------
Un ASM correctement parametre doit se trouver dans la configuration materielle.
Attention aux parametres en fonction du materiel:
1)RF180 :
- Mode USER = FB45
- Mode MOBY = Adressage normal MOBY U/D / RF300
- Vitesse de transmission = 115,2 Kbaud
2)ASM 456 :
- Mode USER = FB45 / FC45
- Mode MOBY = Adressage normal MOBY U/D/P
- Vitesse de transmission = 115,2 Kbaud
3) ASM475 :
- Base parameter = Default ou MOBY U/D normal addressing
- Baudrate to SLG = Default ou 115,2 kBaud
Le non respect de ce parametrage conduit a une erreur systematique lors de la
phase d'initialisation du FB 2015 (CodeDef 13 dec - AddInf 21 dec)

Mise en Oeuvre
--------------------
1) Addresse de l'ASM dans la configuration materielle :
- L'adresse assignee dans la configuration materielle doit etre la meme pour
  les entrees et les sorties sous HW config.
- Cette adresse doit etre documentee sur l'entree ASMAddr du bloc.

2) Initialisation de la fonction :
Il est recommande pour chaque instance de BF_Ident de passer l'entree
Pilot.Init a 1 dans l'OB100.
exemple en langage LIST :
SET
= ""Nom du DB du sous ensemble"".nom d'intance du bloc.Pilot.init
= ""Nom du DB du sous ensemble"".nom d'intance du bloc.Pilot.init

3) DB global associe au BF_Ident :
- Dans la structure programme le DB93 est reserve aux fonctions Identification
   Nom symbolique = IDENT
- 2 formats sont possibles pour les donnees , Tableau de mot ou structure en
    fonction des besoins :
   - Tableau de mot : si pas d'exploitation direct du detail de l'information
   - Structure : si exploitation direct d'une information ( Nom de la variable
                en clair)
- Nom symbolique des Donnees = <Nom du SE>_<Fonction realisee> :
   avec Fonction realisee = lec (pour lecture) ou ecr (pour ecriture)
   exemple BF_ident pour lecture des donnees dans Sous Ensemble A0 = A0_lec

4) Entrees de la BF

   Mode:       Code de la commande
                  - 1 = Lecture (sur element statique)
                  - 2 = Ecriture (sur element statique)
                  - 257 = Lecture a la volee (sur element dynamique)
   Address:    Adresse sur l'etiquette (numero du mot)
   Len:        Longueur (en mot) des donnees
   DBNR:       Numero du bloc de donnees source ou destination
   Offset:     Position des donnees dans le DB

5) Parametres d'entree/sortie:

   Lock:       Synchronisation de plusieurs contrats sur une antenne
               Ce parametre doit etre renseigne avec la meme variable
               pour toutes les instances du bloc fonctionnel qui travaillent
               avec la meme antenne.

Defauts:
--------
Le defaut est maintenu jusqu'a son acquittement sur l'entree Reset.
Si apres acquittement l'entree Val est toujours positionnee, la commande est
relancee.
VERIFIER LE FORMAT DES DONNEES LORS DE L'AFFICHAGE DES CODES DE DEFAUT

Diag.codedef contient la description general du defaut.
en fonction de ce Defaut Diag.addinf peut contenir des informations
complementaires

Valeur de Diag.codedef :
 0 = Pas de defaut
 1 = Numero de voie incorrect (Erreur de parametrage).
 2 = Erreur d'acces
       Addresse de l'ASM incorrecte
       Probleme de communication
       ASM hors tension ou defectueux
    Diag.Addinf contient le code de l'erreur retourne par le SFC 14 (DPRD_DAT)
       8090 Hex = Addresse incorrecte
       80A0 Hex = Erreur d'acces
 3 = Valeur de mode incorrecte (Erreur de parametrage)
 4 = Numero de bloc de donnees incorrect
    Diag.Addinf contient le code de l'erreur retourne par le SFC 24 (TEST_DB) :
       80A1 Hex = Numero de DB nul ou superieur au maximum autorise pour la CPU
       80B1 Hex = Bloc de donnees inexistant
       80B2 Hex = Bloc de donnees dans la memoire de chargement (""UNLINKED"")
 5 = Longueur des donnees nulle
 6 = Bloc de donnees trop petit pour servir la requete
 7 = Bloc de donnees protege en ecriture (pour une commande de lecture)
 8 = Absence d'etiquette lors d'une commande statique
 9 = Erreur lors de la copie des donnees
    Diag.Addinf contient le code de l'erreur retourne par le SFC 20 (BLK_MOV)
       8122 Hex = Bloc de donnee trop petit pour servir la requete
       813A Hex = Bloc de donnee Inexistant
 10 (0A Hex) = Erreur lors de l'envoi de donnees a l'ASM
            Diag.Addinf contient le code de l'erreur retourne par le SFB 53

             (WRREC)Voir documentation du SFB 53
            80C3 Hex = Ressources CPU temporairement epuisees
            80C4 Hex = Erreur de communication temporaire
 11 (0B Hex) = Erreur lors de la reception de donnees depuis l'ASM
            Diag.Addinf contient le code de l'erreur retourne par le SFB 52
             (RDREC)Voir documentation du SFB 52
            80C3 Hex = Ressources CPU temporairement epuisees
            80C4 Hex = Erreur de communication temporaire
 12 (0C Hex) = Donnees recues inattendues
 13 (0D Hex) = Erreur lors du traitement de la commande par l'ASM
           Diag.Addinf contient le code de l'erreur retourne par l'ASM
           1 Hex = L'etiquette est sortie du champ prematurement
           3 Hex = Probleme liaison avec l'antenne
           6 Hex = Champ parasite sur l'antenne
           C Hex = Impossible d'ecrire dans l'etiquette (Etiquette defectueuse)
           D Hex = Acces en dehors de l'espace d'adressage de l'etiquette.
           13 Hex = Memoire de l'ASM ou de l'antenne insuffisante pour traiter
                    la commande
           15 Hex = Parametrage incorrect
 14 (0E Hex) = Pas de reponse de l'ASM
 15 (0F Hex) = Depassement du temps enveloppe
 16 (10 Hex) = Pas de liaison avec l'antenne (SLG)
 17 (11 Hex) = L'entree ""Val"" est retombee avant la fin du contrat
 18 (12 Hex) = Depassement du temps enveloppe pendant l'initialisation


************************** ENGLISH INFORMATION  ****************************

Description:
------------
This Functional Block is used to Read / Write the Siemens RFID TAG
The dafault parameter settings makes able to Read / Write the RF 300 TAG

PREREQUISITE :
**************
An ASM properly parametered has to be in the material configuration.
Alarms in the parameters according to the hardware :
1) RF180 :
- USER Mode = FB45
- MOBY Mode = Normal addressing MOBY U/D / RF300
- Transmission speed = 115,2 Kbps
2)ASM 456 :
- USER Mode = FB45
- MOBY Mode = Normal addressing MOBY U/D/P
- Transmission speed = 115,2 Kbps
3) ASM475 :
- Base parameter =  By Default or MOBY U/D normal addressing
- Bandwidth to SLG = By Default or 115,2 Kbps
If this parameter setting is not respected, there is a systematic error during
the initialization of FB2015 (Codedef=13 (DEC) and  Addinf = 21 (DEC))

OPERATING :
***********
1) Address of the ASM in the hardware configuration:
- The address assigned in the hardware configuration has to be the same for
Inputs and Outputs under HW config.
- This address must be filled on the ASMAddr input of the block.

2) Reset of the  function block:
It is recommended for every BF_IDENT to set Pilot.init input in the OB100.
Code Example in LIST language :
SET
=  ""DB name of sub assembly"".BF instance Name.Pilot.init
=  ""DB name of sub assembly"".BF instance Name.Pilot.init

3) Global DB associated with the BF_Ident:
- In the program structure the DB93 is reserved for the Identification
functions
 Symbolic name = IDENT
- 2 data types are possible for the data, Word Array or Structure according
to needs:
   - WORD ARRAY : if there is no direct use of the detailled information
   - Structure: if there is direct use of an information (if the code uses tha
name of the variable)
  - symbolic Name of the Data = < Sub assembly Name> _ < Function performed>:
   With Function performed = lec (for reading) or ecr (for writing).
   Example : BF_ident for reading the data in the sub-assembly A0 = A0_lec

4) BF inputs:
 Mode : Order code
        - 1 = Reading (for static reading)
        - 2 = Writing (for static reading)
        - 257 = Dynamic reading (reading while the tag is moving)
 Address : Word address in the tag (Word number)
 Len : length of word to be read or written
 DBNR : DB number of source data(for writting data to the tag) or destination
       (for writting data to the PLC)
 Offset : Data offset in the global DB

5) BF IN_OUT :
 Lock : Synchronization of several requests on an antenna.
        This parameter must be filled with the same variable for all the
        instance of the FB_Ident which work with the same antenna.

CODE FAULT :
************
The code fault is set ('1') until acknowledgement by the input ""Reset""
If after reset, the ""Val"" input is set, request starts again.
CHECK the format (DEC or HEX) of the codes faults

Diag.codedef is used for the generic Faults.
According to this Fault Diag.addinf can contain additional information.

Diag.codedef Values :
 0 = No fault
 1 = Bad line number (BF parameterization error)
 2 = Error of access
     ASM Address incorrect
     Communications problem
     ASM power off or defective
Diag.Addinf contain the error code returned by SFC 14 (DPRD_DAT)
       8090 Hex = Incorrect Address
       80A0 Hex = Error of access
 3 = Invalid ""Mode"" value (BF parameterization error)
 4 = Invalid Data Block number
    Diag.Addinf contains the code returned by SFC 24 (TEST_DB) :
       80A1 Hex = Db Number equal to 0 or higher to maximum number available by
PLC
       80B1 Hex = DB not exists
       80B2 Hex = DB in load memory (""UNLINKED"")
 5 = Length of data invalid (length = 0)
 6 = DB too small according to the request
 7 = DB write-protected (for a reading request)
 8 = Tag missing during the order (only in static Mode)
 9 = Data copy fault
    Diag.Addinf contain the code return by SFC 20 (BLK_MOV)
       8122 Hex = DB too small to serve the request
       813A Hex = DB No-existent
 10 (0A Hex) = sending data to ASM error
            Diag.Addinf contain the code return by SFB 53(WRREC)see SFB 53
            documentation in Step7
            80C3 Hex = CPU resources Temporarily exhausted
            80C4 Hex = temporary Comunication error
 11 (0B Hex) = reception of data to ASM error
            Diag.Addinf contain the code return by SFB 52
             (RDREC)see SFB 52 documentation in Step7
            80C3 Hex = CPU resources Temporarily exhausted
            80C4 Hex = temporary Comunication error
 12 (0C Hex) = Unexpected successful data
 13 (0D Hex) = ASM Order error
           Diag.Addinf contain the code return by ASM
           1 Hex = Tag is out of the RF field
           3 Hex = antenna link fault
           6 Hex = Stray radiation on the antenna
           C Hex = Impossible to write in the tag (Tag defective)
           D Hex = Access out of the address range
           13 Hex = Tag or antenna memory too small to process the request

           15 Hex = Invalid parameter
 14 (0E Hex) = No feedback from ASM
 15 (0F Hex) = Time out
 16 (10 Hex) = No link with antenna (SLG)
 17 (11 Hex) = Input ""Val"" has fallen before the end of request
 18 (12 Hex) = Initialization Time out

************************* _ODIL_ID_ ****************************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 17
Dernier ID mis en oeuvre / Last ID implemented : 2015_17
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"********************************************************************************
*                                       BF_IDENT                               *
*                                    Identification (RFID)
*
********************************************************************************
(In English further below)

Description:
------------
Ce Bloc Fonctionnel permet de lire/ecrire des etiquettes RFID
Le parametrage par defaut permet de lire/ecire des etiquettes de la gamme RF 300


Pre requis:
----------
Un ASM correctement parametre doit se trouver dans la configuration materielle.
Attention aux parametres en fonction du materiel:
1)RF180 :
- Mode USER = FB45
- Mode MOBY = Adressage normal MOBY U/D / RF300
- Vitesse de transmission = 115,2 Kbaud
2)ASM 456 :
- Mode USER = FB45 / FC45
- Mode MOBY = Adressage normal MOBY U/D/P
- Vitesse de transmission = 115,2 Kbaud
3) ASM475 :
- Base parameter = Default ou MOBY U/D normal addressing
- Baudrate to SLG = Default ou 115,2 kBaud
Le non respect de ce parametrage conduit a une erreur systematique lors de la
phase d'initialisation du FB 2015 (CodeDef 13 dec - AddInf 21 dec)

Mise en Oeuvre
--------------------
1) Addresse de l'ASM dans la configuration materielle :
- L'adresse assignee dans la configuration materielle doit etre la meme pour
  les entrees et les sorties sous HW config.
- Cette adresse doit etre documentee sur l'entree ASMAddr du bloc.

2) Initialisation de la fonction :
Il est recommande pour chaque instance de BF_Ident de passer l'entree
Pilot.Init a 1 dans l'OB100.
exemple en langage LIST :
SET
= ""Nom du DB du sous ensemble"".nom d'intance du bloc.Pilot.init
= ""Nom du DB du sous ensemble"".nom d'intance du bloc.Pilot.init

3) DB global associe au BF_Ident :
- Dans la structure programme le DB93 est reserve aux fonctions Identification
   Nom symbolique = IDENT
- 2 formats sont possibles pour les donnees , Tableau de mot ou structure en
    fonction des besoins :
   - Tableau de mot : si pas d'exploitation direct du detail de l'information
   - Structure : si exploitation direct d'une information ( Nom de la variable
                en clair)
- Nom symbolique des Donnees = <Nom du SE>_<Fonction realisee> :
   avec Fonction realisee = lec (pour lecture) ou ecr (pour ecriture)
   exemple BF_ident pour lecture des donnees dans Sous Ensemble A0 = A0_lec

4) Entrees de la BF

   Mode:       Code de la commande
                  - 1 = Lecture (sur element statique)
                  - 2 = Ecriture (sur element statique)
                  - 257 = Lecture a la volee (sur element dynamique)
   Address:    Adresse sur l'etiquette (numero du mot)
   Len:        Longueur (en mot) des donnees
   DBNR:       Numero du bloc de donnees source ou destination
   Offset:     Position des donnees dans le DB

5) Parametres d'entree/sortie:

   Lock:       Synchronisation de plusieurs contrats sur une antenne
               Ce parametre doit etre renseigne avec la meme variable
               pour toutes les instances du bloc fonctionnel qui travaillent
               avec la meme antenne.

Defauts:
--------
Le defaut est maintenu jusqu'a son acquittement sur l'entree Reset.
Si apres acquittement l'entree Val est toujours positionnee, la commande est
relancee.
VERIFIER LE FORMAT DES DONNEES LORS DE L'AFFICHAGE DES CODES DE DEFAUT

Diag.codedef contient la description general du defaut.
en fonction de ce Defaut Diag.addinf peut contenir des informations
complementaires

Valeur de Diag.codedef :
 0 = Pas de defaut
 1 = Numero de voie incorrect (Erreur de parametrage).
 2 = Erreur d'acces
       Addresse de l'ASM incorrecte
       Probleme de communication
       ASM hors tension ou defectueux
    Diag.Addinf contient le code de l'erreur retourne par le SFC 14 (DPRD_DAT)
       8090 Hex = Addresse incorrecte
       80A0 Hex = Erreur d'acces
 3 = Valeur de mode incorrecte (Erreur de parametrage)
 4 = Numero de bloc de donnees incorrect
    Diag.Addinf contient le code de l'erreur retourne par le SFC 24 (TEST_DB) :
       80A1 Hex = Numero de DB nul ou superieur au maximum autorise pour la CPU
       80B1 Hex = Bloc de donnees inexistant
       80B2 Hex = Bloc de donnees dans la memoire de chargement (""UNLINKED"")
 5 = Longueur des donnees nulle
 6 = Bloc de donnees trop petit pour servir la requete
 7 = Bloc de donnees protege en ecriture (pour une commande de lecture)
 8 = Absence d'etiquette lors d'une commande statique
 9 = Erreur lors de la copie des donnees
    Diag.Addinf contient le code de l'erreur retourne par le SFC 20 (BLK_MOV)
       8122 Hex = Bloc de donnee trop petit pour servir la requete
       813A Hex = Bloc de donnee Inexistant
 10 (0A Hex) = Erreur lors de l'envoi de donnees a l'ASM
            Diag.Addinf contient le code de l'erreur retourne par le SFB 53

             (WRREC)Voir documentation du SFB 53
            80C3 Hex = Ressources CPU temporairement epuisees
            80C4 Hex = Erreur de communication temporaire
 11 (0B Hex) = Erreur lors de la reception de donnees depuis l'ASM
            Diag.Addinf contient le code de l'erreur retourne par le SFB 52
             (RDREC)Voir documentation du SFB 52
            80C3 Hex = Ressources CPU temporairement epuisees
            80C4 Hex = Erreur de communication temporaire
 12 (0C Hex) = Donnees recues inattendues
 13 (0D Hex) = Erreur lors du traitement de la commande par l'ASM
           Diag.Addinf contient le code de l'erreur retourne par l'ASM
           1 Hex = L'etiquette est sortie du champ prematurement
           3 Hex = Probleme liaison avec l'antenne
           6 Hex = Champ parasite sur l'antenne
           C Hex = Impossible d'ecrire dans l'etiquette (Etiquette defectueuse)
           D Hex = Acces en dehors de l'espace d'adressage de l'etiquette.
           13 Hex = Memoire de l'ASM ou de l'antenne insuffisante pour traiter
                    la commande
           15 Hex = Parametrage incorrect
 14 (0E Hex) = Pas de reponse de l'ASM
 15 (0F Hex) = Depassement du temps enveloppe
 16 (10 Hex) = Pas de liaison avec l'antenne (SLG)
 17 (11 Hex) = L'entree ""Val"" est retombee avant la fin du contrat
 18 (12 Hex) = Depassement du temps enveloppe pendant l'initialisation


************************** ENGLISH INFORMATION  ****************************

Description:
------------
This Functional Block is used to Read / Write the Siemens RFID TAG
The dafault parameter settings makes able to Read / Write the RF 300 TAG

PREREQUISITE :
**************
An ASM properly parametered has to be in the material configuration.
Alarms in the parameters according to the hardware :
1) RF180 :
- USER Mode = FB45
- MOBY Mode = Normal addressing MOBY U/D / RF300
- Transmission speed = 115,2 Kbps
2)ASM 456 :
- USER Mode = FB45
- MOBY Mode = Normal addressing MOBY U/D/P
- Transmission speed = 115,2 Kbps
3) ASM475 :
- Base parameter =  By Default or MOBY U/D normal addressing
- Bandwidth to SLG = By Default or 115,2 Kbps
If this parameter setting is not respected, there is a systematic error during
the initialization of FB2015 (Codedef=13 (DEC) and  Addinf = 21 (DEC))

OPERATING :
***********
1) Address of the ASM in the hardware configuration:
- The address assigned in the hardware configuration has to be the same for
Inputs and Outputs under HW config.
- This address must be filled on the ASMAddr input of the block.

2) Reset of the  function block:
It is recommended for every BF_IDENT to set Pilot.init input in the OB100.
Code Example in LIST language :
SET
=  ""DB name of sub assembly"".BF instance Name.Pilot.init
=  ""DB name of sub assembly"".BF instance Name.Pilot.init

3) Global DB associated with the BF_Ident:
- In the program structure the DB93 is reserved for the Identification
functions
 Symbolic name = IDENT
- 2 data types are possible for the data, Word Array or Structure according
to needs:
   - WORD ARRAY : if there is no direct use of the detailled information
   - Structure: if there is direct use of an information (if the code uses tha
name of the variable)
  - symbolic Name of the Data = < Sub assembly Name> _ < Function performed>:
   With Function performed = lec (for reading) or ecr (for writing).
   Example : BF_ident for reading the data in the sub-assembly A0 = A0_lec

4) BF inputs:
 Mode : Order code
        - 1 = Reading (for static reading)
        - 2 = Writing (for static reading)
        - 257 = Dynamic reading (reading while the tag is moving)
 Address : Word address in the tag (Word number)
 Len : length of word to be read or written
 DBNR : DB number of source data(for writting data to the tag) or destination
       (for writting data to the PLC)
 Offset : Data offset in the global DB

5) BF IN_OUT :
 Lock : Synchronization of several requests on an antenna.
        This parameter must be filled with the same variable for all the
        instance of the FB_Ident which work with the same antenna.

CODE FAULT :
************
The code fault is set ('1') until acknowledgement by the input ""Reset""
If after reset, the ""Val"" input is set, request starts again.
CHECK the format (DEC or HEX) of the codes faults

Diag.codedef is used for the generic Faults.
According to this Fault Diag.addinf can contain additional information.

Diag.codedef Values :
 0 = No fault
 1 = Bad line number (BF parameterization error)
 2 = Error of access
     ASM Address incorrect
     Communications problem
     ASM power off or defective
Diag.Addinf contain the error code returned by SFC 14 (DPRD_DAT)
       8090 Hex = Incorrect Address
       80A0 Hex = Error of access
 3 = Invalid ""Mode"" value (BF parameterization error)
 4 = Invalid Data Block number
    Diag.Addinf contains the code returned by SFC 24 (TEST_DB) :
       80A1 Hex = Db Number equal to 0 or higher to maximum number available by
PLC
       80B1 Hex = DB not exists
       80B2 Hex = DB in load memory (""UNLINKED"")
 5 = Length of data invalid (length = 0)
 6 = DB too small according to the request
 7 = DB write-protected (for a reading request)
 8 = Tag missing during the order (only in static Mode)
 9 = Data copy fault
    Diag.Addinf contain the code return by SFC 20 (BLK_MOV)
       8122 Hex = DB too small to serve the request
       813A Hex = DB No-existent
 10 (0A Hex) = sending data to ASM error
            Diag.Addinf contain the code return by SFB 53(WRREC)see SFB 53
            documentation in Step7
            80C3 Hex = CPU resources Temporarily exhausted
            80C4 Hex = temporary Comunication error
 11 (0B Hex) = reception of data to ASM error
            Diag.Addinf contain the code return by SFB 52
             (RDREC)see SFB 52 documentation in Step7
            80C3 Hex = CPU resources Temporarily exhausted
            80C4 Hex = temporary Comunication error
 12 (0C Hex) = Unexpected successful data
 13 (0D Hex) = ASM Order error
           Diag.Addinf contain the code return by ASM
           1 Hex = Tag is out of the RF field
           3 Hex = antenna link fault
           6 Hex = Stray radiation on the antenna
           C Hex = Impossible to write in the tag (Tag defective)
           D Hex = Access out of the address range
           13 Hex = Tag or antenna memory too small to process the request

           15 Hex = Invalid parameter
 14 (0E Hex) = No feedback from ASM
 15 (0F Hex) = Time out
 16 (10 Hex) = No link with antenna (SLG)
 17 (11 Hex) = Input ""Val"" has fallen before the end of request
 18 (12 Hex) = Initialization Time out

************************* _ODIL_ID_ ****************************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 17
Dernier ID mis en oeuvre / Last ID implemented : 2015_17
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"********************************************************************************
*                                       BF_IDENT                               *
*                                    Identification (RFID)
*
********************************************************************************
(In English further below)

Description:
------------
Ce Bloc Fonctionnel permet de lire/ecrire des etiquettes RFID
Le parametrage par defaut permet de lire/ecire des etiquettes de la gamme RF 300


Pre requis:
----------
Un ASM correctement parametre doit se trouver dans la configuration materielle.
Attention aux parametres en fonction du materiel:
1)RF180 :
- Mode USER = FB45
- Mode MOBY = Adressage normal MOBY U/D / RF300
- Vitesse de transmission = 115,2 Kbaud
2)ASM 456 :
- Mode USER = FB45 / FC45
- Mode MOBY = Adressage normal MOBY U/D/P
- Vitesse de transmission = 115,2 Kbaud
3) ASM475 :
- Base parameter = Default ou MOBY U/D normal addressing
- Baudrate to SLG = Default ou 115,2 kBaud
Le non respect de ce parametrage conduit a une erreur systematique lors de la
phase d'initialisation du FB 2015 (CodeDef 13 dec - AddInf 21 dec)

Mise en Oeuvre
--------------------
1) Addresse de l'ASM dans la configuration materielle :
- L'adresse assignee dans la configuration materielle doit etre la meme pour
  les entrees et les sorties sous HW config.
- Cette adresse doit etre documentee sur l'entree ASMAddr du bloc.

2) Initialisation de la fonction :
Il est recommande pour chaque instance de BF_Ident de passer l'entree
Pilot.Init a 1 dans l'OB100.
exemple en langage LIST :
SET
= ""Nom du DB du sous ensemble"".nom d'intance du bloc.Pilot.init
= ""Nom du DB du sous ensemble"".nom d'intance du bloc.Pilot.init

3) DB global associe au BF_Ident :
- Dans la structure programme le DB93 est reserve aux fonctions Identification
   Nom symbolique = IDENT
- 2 formats sont possibles pour les donnees , Tableau de mot ou structure en
    fonction des besoins :
   - Tableau de mot : si pas d'exploitation direct du detail de l'information
   - Structure : si exploitation direct d'une information ( Nom de la variable
                en clair)
- Nom symbolique des Donnees = <Nom du SE>_<Fonction realisee> :
   avec Fonction realisee = lec (pour lecture) ou ecr (pour ecriture)
   exemple BF_ident pour lecture des donnees dans Sous Ensemble A0 = A0_lec

4) Entrees de la BF

   Mode:       Code de la commande
                  - 1 = Lecture (sur element statique)
                  - 2 = Ecriture (sur element statique)
                  - 257 = Lecture a la volee (sur element dynamique)
   Address:    Adresse sur l'etiquette (numero du mot)
   Len:        Longueur (en mot) des donnees
   DBNR:       Numero du bloc de donnees source ou destination
   Offset:     Position des donnees dans le DB

5) Parametres d'entree/sortie:

   Lock:       Synchronisation de plusieurs contrats sur une antenne
               Ce parametre doit etre renseigne avec la meme variable
               pour toutes les instances du bloc fonctionnel qui travaillent
               avec la meme antenne.

Defauts:
--------
Le defaut est maintenu jusqu'a son acquittement sur l'entree Reset.
Si apres acquittement l'entree Val est toujours positionnee, la commande est
relancee.
VERIFIER LE FORMAT DES DONNEES LORS DE L'AFFICHAGE DES CODES DE DEFAUT

Diag.codedef contient la description general du defaut.
en fonction de ce Defaut Diag.addinf peut contenir des informations
complementaires

Valeur de Diag.codedef :
 0 = Pas de defaut
 1 = Numero de voie incorrect (Erreur de parametrage).
 2 = Erreur d'acces
       Addresse de l'ASM incorrecte
       Probleme de communication
       ASM hors tension ou defectueux
    Diag.Addinf contient le code de l'erreur retourne par le SFC 14 (DPRD_DAT)
       8090 Hex = Addresse incorrecte
       80A0 Hex = Erreur d'acces
 3 = Valeur de mode incorrecte (Erreur de parametrage)
 4 = Numero de bloc de donnees incorrect
    Diag.Addinf contient le code de l'erreur retourne par le SFC 24 (TEST_DB) :
       80A1 Hex = Numero de DB nul ou superieur au maximum autorise pour la CPU
       80B1 Hex = Bloc de donnees inexistant
       80B2 Hex = Bloc de donnees dans la memoire de chargement (""UNLINKED"")
 5 = Longueur des donnees nulle
 6 = Bloc de donnees trop petit pour servir la requete
 7 = Bloc de donnees protege en ecriture (pour une commande de lecture)
 8 = Absence d'etiquette lors d'une commande statique
 9 = Erreur lors de la copie des donnees
    Diag.Addinf contient le code de l'erreur retourne par le SFC 20 (BLK_MOV)
       8122 Hex = Bloc de donnee trop petit pour servir la requete
       813A Hex = Bloc de donnee Inexistant
 10 (0A Hex) = Erreur lors de l'envoi de donnees a l'ASM
            Diag.Addinf contient le code de l'erreur retourne par le SFB 53

             (WRREC)Voir documentation du SFB 53
            80C3 Hex = Ressources CPU temporairement epuisees
            80C4 Hex = Erreur de communication temporaire
 11 (0B Hex) = Erreur lors de la reception de donnees depuis l'ASM
            Diag.Addinf contient le code de l'erreur retourne par le SFB 52
             (RDREC)Voir documentation du SFB 52
            80C3 Hex = Ressources CPU temporairement epuisees
            80C4 Hex = Erreur de communication temporaire
 12 (0C Hex) = Donnees recues inattendues
 13 (0D Hex) = Erreur lors du traitement de la commande par l'ASM
           Diag.Addinf contient le code de l'erreur retourne par l'ASM
           1 Hex = L'etiquette est sortie du champ prematurement
           3 Hex = Probleme liaison avec l'antenne
           6 Hex = Champ parasite sur l'antenne
           C Hex = Impossible d'ecrire dans l'etiquette (Etiquette defectueuse)
           D Hex = Acces en dehors de l'espace d'adressage de l'etiquette.
           13 Hex = Memoire de l'ASM ou de l'antenne insuffisante pour traiter
                    la commande
           15 Hex = Parametrage incorrect
 14 (0E Hex) = Pas de reponse de l'ASM
 15 (0F Hex) = Depassement du temps enveloppe
 16 (10 Hex) = Pas de liaison avec l'antenne (SLG)
 17 (11 Hex) = L'entree ""Val"" est retombee avant la fin du contrat
 18 (12 Hex) = Depassement du temps enveloppe pendant l'initialisation


************************** ENGLISH INFORMATION  ****************************

Description:
------------
This Functional Block is used to Read / Write the Siemens RFID TAG
The dafault parameter settings makes able to Read / Write the RF 300 TAG

PREREQUISITE :
**************
An ASM properly parametered has to be in the material configuration.
Alarms in the parameters according to the hardware :
1) RF180 :
- USER Mode = FB45
- MOBY Mode = Normal addressing MOBY U/D / RF300
- Transmission speed = 115,2 Kbps
2)ASM 456 :
- USER Mode = FB45
- MOBY Mode = Normal addressing MOBY U/D/P
- Transmission speed = 115,2 Kbps
3) ASM475 :
- Base parameter =  By Default or MOBY U/D normal addressing
- Bandwidth to SLG = By Default or 115,2 Kbps
If this parameter setting is not respected, there is a systematic error during
the initialization of FB2015 (Codedef=13 (DEC) and  Addinf = 21 (DEC))

OPERATING :
***********
1) Address of the ASM in the hardware configuration:
- The address assigned in the hardware configuration has to be the same for
Inputs and Outputs under HW config.
- This address must be filled on the ASMAddr input of the block.

2) Reset of the  function block:
It is recommended for every BF_IDENT to set Pilot.init input in the OB100.
Code Example in LIST language :
SET
=  ""DB name of sub assembly"".BF instance Name.Pilot.init
=  ""DB name of sub assembly"".BF instance Name.Pilot.init

3) Global DB associated with the BF_Ident:
- In the program structure the DB93 is reserved for the Identification
functions
 Symbolic name = IDENT
- 2 data types are possible for the data, Word Array or Structure according
to needs:
   - WORD ARRAY : if there is no direct use of the detailled information
   - Structure: if there is direct use of an information (if the code uses tha
name of the variable)
  - symbolic Name of the Data = < Sub assembly Name> _ < Function performed>:
   With Function performed = lec (for reading) or ecr (for writing).
   Example : BF_ident for reading the data in the sub-assembly A0 = A0_lec

4) BF inputs:
 Mode : Order code
        - 1 = Reading (for static reading)
        - 2 = Writing (for static reading)
        - 257 = Dynamic reading (reading while the tag is moving)
 Address : Word address in the tag (Word number)
 Len : length of word to be read or written
 DBNR : DB number of source data(for writting data to the tag) or destination
       (for writting data to the PLC)
 Offset : Data offset in the global DB

5) BF IN_OUT :
 Lock : Synchronization of several requests on an antenna.
        This parameter must be filled with the same variable for all the
        instance of the FB_Ident which work with the same antenna.

CODE FAULT :
************
The code fault is set ('1') until acknowledgement by the input ""Reset""
If after reset, the ""Val"" input is set, request starts again.
CHECK the format (DEC or HEX) of the codes faults

Diag.codedef is used for the generic Faults.
According to this Fault Diag.addinf can contain additional information.

Diag.codedef Values :
 0 = No fault
 1 = Bad line number (BF parameterization error)
 2 = Error of access
     ASM Address incorrect
     Communications problem
     ASM power off or defective
Diag.Addinf contain the error code returned by SFC 14 (DPRD_DAT)
       8090 Hex = Incorrect Address
       80A0 Hex = Error of access
 3 = Invalid ""Mode"" value (BF parameterization error)
 4 = Invalid Data Block number
    Diag.Addinf contains the code returned by SFC 24 (TEST_DB) :
       80A1 Hex = Db Number equal to 0 or higher to maximum number available by
PLC
       80B1 Hex = DB not exists
       80B2 Hex = DB in load memory (""UNLINKED"")
 5 = Length of data invalid (length = 0)
 6 = DB too small according to the request
 7 = DB write-protected (for a reading request)
 8 = Tag missing during the order (only in static Mode)
 9 = Data copy fault
    Diag.Addinf contain the code return by SFC 20 (BLK_MOV)
       8122 Hex = DB too small to serve the request
       813A Hex = DB No-existent
 10 (0A Hex) = sending data to ASM error
            Diag.Addinf contain the code return by SFB 53(WRREC)see SFB 53
            documentation in Step7
            80C3 Hex = CPU resources Temporarily exhausted
            80C4 Hex = temporary Comunication error
 11 (0B Hex) = reception of data to ASM error
            Diag.Addinf contain the code return by SFB 52
             (RDREC)see SFB 52 documentation in Step7
            80C3 Hex = CPU resources Temporarily exhausted
            80C4 Hex = temporary Comunication error
 12 (0C Hex) = Unexpected successful data
 13 (0D Hex) = ASM Order error
           Diag.Addinf contain the code return by ASM
           1 Hex = Tag is out of the RF field
           3 Hex = antenna link fault
           6 Hex = Stray radiation on the antenna
           C Hex = Impossible to write in the tag (Tag defective)
           D Hex = Access out of the address range
           13 Hex = Tag or antenna memory too small to process the request

           15 Hex = Invalid parameter
 14 (0E Hex) = No feedback from ASM
 15 (0F Hex) = Time out
 16 (10 Hex) = No link with antenna (SLG)
 17 (11 Hex) = Input ""Val"" has fallen before the end of request
 18 (12 Hex) = Initialization Time out

************************* _ODIL_ID_ ****************************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 17
Dernier ID mis en oeuvre / Last ID implemented : 2015_17
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";""
"*************************************************************************
*                               BF_ROBOT                                *
*        Pilotage Robot RENAULT    /    RENAULT Robot Control           *
*************************************************************************
( In English further below)

DESCRIPTION:
*************
Ce Bloc fonctionnel realise
1- le rearmement du robot et l'envoi des informations de pilotage
2- l'envoi du code cycle
3- l'elaboration de variables pour le suivi des moyens
4- l'elaboration de variables pour l IHM

INFORMATION DE FONCTIONNEMENT ROBOT
******************************
1-REARMEMENT
Lors d'une demande de rearmement (Rearm), si le Robot est pret,
le FB demande le rearmement de la puissance (DMSP),
attend la mise sous puissance (MOTORON),
et envoie trois impulsions de depart cycle (DDCY).

API           ROBOT

<------------ RCREADY
DMSP ------------>
<------------ MOTORON
DDCY (1) ------------> Rearmement depart Cycle
DDCY (2) ------------> Rearmement depart Cycle
DDCY (3) ------------> Pour le rearmement eventuel d'un defaut d'air

Les variables
""Tpulsor1"": Temps des creneaux emis a 1 (valeur standard: 0,7s).
""Tpulsor0"": Temps des creneaux emis a 0 (valeur standard: 0,4s).
peuvent etre modifiees si besoin via un acces direct a l'instance
Le FB Transmet egalement (AEVRB), (STOP), (DEV), (ENPRO) et (RFZ)
****
2- CODE CYCLE ROBOT
Chaque changement de code cycle (cod), entraine l'envoi d'un code 0 au robot
pendant une seconde. Pendant cette phase le bit de validation du code a zero
(CVC0) est positionne.
Apres cette attente et si le code cycle demande n'est pas nul, son bit
d'imparite (#clcBit_par) est calcule.
Sont alors transferes au robot, le code cycle, la validation du code a 1 (CVC1)
et le bit d'imparite (CPC0).

Ecriture des codes robot en amont de la BF avec un code sur 8 bits :
- En premier les codes des programmes de travail :
de 1 a 59
et de 64 a 255
- puis les codes des programmes de service :
Service libre = 60
Rodage d'electrode = 61
Changement d'electrode = 62
- puis le programme de Repli :
Repli = 63

Mise en oeuvre de la BF :
********************
- L'entrees Rearm utilise info de rearmement zone safety
- Les entrees Dever et S_prodok utilisent des informations generes par
la BF Zone_mode_IHM et disponible dans le DB ZxG (X = Numero de la zone)
- Les entrees Z_es et Z_fz utilisent les informations issues des DB safety
associes a la zone.
- les entrees Aevr, Stop, Enpro doivent etre mise a 1 si les fonctions ne sont
pas utilisees sur le robot.
- l'entree S_code_mx doit etre documentee avec la valeur du dernier numero de
code de travail utilise par le robot.
- Les entrees Iw_Rbe1 a Iw_rbe6 doivent etre documentees avec les Entrees API
au
format Mot du robot.
- Les entrees / Sortie Qw_Rbe1 a Qw_rbe6 doivent etre documentees avec les
Sorties API au format Mot du robot.
- Toutes les sorties S_xxx doivent etre documentees soit par des variable STAT
dans le FB de mise en oeuvre du BF_ROBOT. Soit etre en lien avec la BF_TCY_SUIV
(documentation  BF_TCY_SUIV pour plus de detail)
- La sortie Diag n'est pas raccordee a une variable du programme
- L'entree G_outils_API permet d'indiquer si des evenements outils sont geres
par l'api et necessite l'ecriture d'une equation en Amont de la BF.

CODES de DEFAUT
******************
Valeur Diag.codedef
1 = Defaut presence piece
2 =  Alarme Rodage
16 = Alarme changement electrode

************************** ENGLISH INFORMATION  ****************************
DESCRIPTION:
*************
This function block has the following tasks:
1- reset robot and transmit control information
2- transmit the cycle code
3- process variables for resource tracing
4- process variables for HMI

ROBOT FUNCTIONING INFORMATION :
*******************************
1-RESETTING
Upon a reset request (Rearm), and provided the robot is ready,
the function block requests the application of power (DMSP),
waits for power up (MOTORON),
and sends three start cycle pulses (DDCY).
PLC           ROBOT

<------------ RCREADY
DMSP ------------>
<------------ MOTORON
DDCY (1) ------------> Reset cycle start (Rearmement depart Cycle)
DDCY (2) ------------> Reset cycle start (Rearmement depart Cycle)
DDCY (3) ------------> For possible reset of air fault

The variables are as follows:
""Tpulsor1"": Time slices sent at 1 (default value: 0.7s).
""Tpulsor0"": Time slices sent at 0 (default value: 0.4s).
If required, these values can be modified using direct access at the instance.
The FB also transmits the values (AEVRB), (STOP), (DEV), (ENPRO) and (RFZ)
****
2- ROBOT CYCLE CODE
Every change of the cycle code (cod) is followed by the transmission of a code
0 to the robot
for a period of 1 second. During this delay, the validation bit of the zero
code (CVC0) is set.
After this waiting period and if the requested cycle code is not at zero, then
its uneven parity
bit (#clcBit_par) is calculated.
The following information is hence transmitted to the robot:
the cycle code, the validation of the code at 1 (CVC1) and the uneven parity
bit
(CPC0).

Robot code must be wrote before the block and her value must be on 8 Booleans.
- In first the Working program codes:1 to 59 and 64 to 255
- Then the service program codes:
Free service code = 60
Electrode Tip-Dressing code = 61
Electrode change code = 62
- Then the Main Fallback code :Main Fallback code = 63
****
BF OPERATING  :
****************
- Rearm use the Safety zone resetting.
- Dever and S_prodok Inputs use the BF_Zone_MODE_IHM informations., see
ZxG Global Data for find their. ( x= zone number)
- Z_es and Z_fz Inputs use the Safety DB informations.
- Aevr, Stop, Enpro Inputs must be set to 1 if the functions are not used on
the
Robot.
-  S_code_mx Input must be documented with the last value of theWorking program
code used by the robot..
- Iw_Rbe1 to Iw_rbe6 Inputs must be documented with the PLC word inputs of the
robot.
- Qw_Rbe1 a Qw_rbe6 Inputs/outputs must be documented with the PLC outputs of
the robot.
- All S_xxx output can be documented by Stat type variables in the FB where you
put the BF or can be used by the BF_TCY_SUIV (For more Detail See OAP or
BF_TCY_SUIV documentation)
- Diag output is not used in the PLC program (directly used by HMI system)
- The ""G_outils_API"" input allows to indicate if events tools are managed by
the PLC and require the writing of an equation upstream to the BF.

FAULT LIST  :
*************
Diag.codedef values:
1 = Part presence fault
2 = Tip_dressing Alarm
16 = Electrode Change Alarm
********************************************************************************
                                     ANNEXES
                                     APPENDIX
********************************************************************************

Mots d'echanges API <-> Robot
Sorties robot -> Entrees automate (Iw_rbsX)
Sorties automate (Qw_rbeX) -> Entrees robot
La table d'echange initiale de 4 mots d'entrees/sorties a ete etendue a 15
mots...
Six de ces mots sont exploites par ce Bloc Fonctionnel.
********
Exchange words  PLC <-> Robot
Outputs robot  ->  Inputs controller (Iw_rbsX)
Outputs controller (Qw_rbeX) -> Inputs robot
The initial exchange table comprising 4 input/output words has been extended to
15 words...
Six of these words are evaluated by this function block.

Iw_rbe1                    Iw_rbe2                   Iw_rbe3
+----------+-----------+  +----------+-----------+  +----------+-----------+
|Octet de Poids Fort   |  |Octet de Poids Fort   |  |Octet de Poids Fort   |
|Most significant byte |  |Most significant byte |  |Most significant byte |
|----------+-----------+  |----------+-----------+  +----------+-----------+
| E x   .0 | RC READY  |  | E x+2 .0 | OR1       |  | E x+4 .0 | Ctrl Ver  |
| E x   .1 | MOTORON   |  | E x+2 .1 | OR2       |  | E x+4 .1 | Ctrl Dev  |
| E x   .2 | AUTO      |  | E x+2 .2 | OR3       |  | E x+4 .2 | Pret Ver  |
| E x   .3 | MANU      |  | E x+2 .3 | OR4       |  | E x+4 .3 |           |
| E x   .4 | REPLI     |  | E x+2 .4 | OR5       |  | E x+4 .4 |           |
| E x   .5 |           |  | E x+2 .5 | OR6       |  | E x+4 .5 |           |
| E x   .6 |           |  | E x+2 .6 | OR7       |  | E x+4 .6 | FRO MS    |
| E x   .7 |           |  | E x+2 .7 | OR8       |  | E x+4 .7 | FRO1 FZ   |
+----------+-----------+  +----------+-----------+  +----------+-----------+
|Octet de poids faible |  |Octet de poids faible |  |Octet de poids faible |
|Least significant byte|  |Least significant byte|  |Least significant byte|
+----------------------+  +----------------------+  +----------------------+
| E x+1 .0 | HPR       |  | E x+3 .0 | OR9       |  | E x+5 .0 | FRO2 FZ   |
| E x+1 .1 | AOP       |  | E x+3 .1 | OR10      |  | E x+5 .1 | CP air    |
| E x+1 .2 | DE        |  | E x+3 .2 | OR11      |  | E x+5 .2 | DMR 1     |
| E x+1 .3 | TC        |  | E x+3 .3 | OR12      |  | E x+5 .3 | DMR 2     |
| E x+1 .4 | AI        |  | E x+3 .4 | OR13      |  | E x+5 .4 | DMR 3     |
| E x+1 .5 | APE       |  | E x+3 .5 | OR14      |  | E x+5 .5 | DMR 4     |
| E x+1 .6 | APF       |  | E x+3 .6 | OR15      |  | E x+5 .6 | DMR 5     |
| E x+1 .7 | APP       |  | E x+3 .7 | OR16      |  | E x+5 .7 | DMR 6     |
+----------+-----------+  +----------+-----------+  +----------+-----------+
Iw_rbe4                    Iw_rbe5                   Iw_rbe6
+----------+-----------+  +----------+-----------+  +----------+-----------+
|Octet de Poids Fort   |  |Octet de Poids Fort   |  |Octet de Poids Fort   |
|Most significant byte |  |Most significant byte |  |Most significant byte |
|----------+-----------+  |----------+-----------+  +----------+-----------+
| E x+6 .0 |           |  | E x+8 .0 | ORO1      |  | E x+10.0 | Ctrl Ver  |
| E x+6 .1 |           |  | E x+8 .1 | ORO2      |  | E x+10.1 | Ctrl Dev  |
| E x+6 .2 |   DEFAUT  |  | E x+8 .2 | ORO3      |  | E x+10.2 | Pret Ver  |
| E x+6 .3 |   FAULT   |  | E x+8 .3 | ORO4      |  | E x+10.3 | N.U.      |
| E x+6 .4 |    SMP    |  | E x+8 .4 | ORO5      |  | E x+10.4 | N.U.      |
| E x+6 .5 |           |  | E x+8 .5 | ORO6      |  | E x+10.5 | N.U.      |
| E x+6 .6 |    p f    |  | E x+8 .6 | ORO7      |  | E x+10.6 | FRO MS    |
| E x+6 .7 |           |  | E x+8 .7 | ORO8      |  | E x+10.7 | FRO1 FZ   |
+----------+-----------+  +----------+-----------+  +----------+-----------+
|Octet de poids faible |  |Octet de poids faible |  |Octet de poids faible |
|Least significant byte|  |Least significant byte|  |Least significant byte|
+----------------------+  +----------------------+  +----------------------+
| E x+7 .0 |           |  | E x+9 .0 | ORO9      |  | E x+11.0 | FRO2 FZ   |
| E x+7 .1 |           |  | E x+9 .1 | ORO10     |  | E x+11.1 | CP air    |
| E x+7 .2 |   DEFAUT  |  | E x+9 .2 | ORO11     |  | E x+11.2 | DMR 1     |
| E x+7 .3 |   FAULT   |  | E x+9 .3 | ORO12     |  | E x+11.3 | DMR 2     |
| E x+7 .4 |    SMP    |  | E x+9 .4 | ORO13     |  | E x+11.4 | DMR 4     |
| E x+7 .5 |           |  | E x+9 .5 | ORO14     |  | E x+11.5 | DMR 8     |
| E x+7 .6 |    P F    |  | E x+9 .6 | ORO15     |  | E x+11.6 | DMR 16    |
| E x+7 .7 |           |  | E x+9 .7 | ORO16     |  | E x+11.7 | DMR 32    |
+----------+-----------+  +----------+-----------+  +----------+-----------+

Qw_rbs1                   Qw_rbs2                   Qw_rbs3
+----------+-----------+  +----------+-----------+  +----------+-----------+
|Octet de Poids Fort   |  |Octet de Poids Fort   |  |Octet de Poids Fort   |
|Most significant byte |  |Most significant byte |  |Most significant byte |
|----------+-----------+  |----------+-----------+  +----------+-----------+
| A x   .0 | AEVRB     |  | A x+2 .0 | EV1       |  | A x+4 .0 | ENPRO     |
| A x   .1 | DMSP      |  | A x+2 .1 | EV2       |  | A x+4 .1 | RFZ       |
| A x   .2 | STOP      |  | A x+2 .2 | EV3       |  | A x+4 .2 |           |
| A x   .3 | DDCY      |  | A x+2 .3 | EV4       |  | A x+4 .3 |           |
| A x   .4 | DEV       |  | A x+2 .4 | EV5       |  | A x+4 .4 |           |
| A x   .5 | CVC0      |  | A x+2 .5 | EV6       |  | A x+4 .5 |           |
| A x   .6 | CVC1      |  | A x+2 .6 | EV7       |  | A x+4 .6 |           |
| A x   .7 | CPC0      |  | A x+2 .7 | EV8       |  | A x+4 .7 |           |
+----------+-----------+  +----------+-----------+  +----------+-----------+
|Octet de poids faible |  |Octet de poids faible |  |Octet de poids faible |
|Least significant byte|  |Least significant byte|  |Least significant byte|
+----------------------+  +----------------------+  +----------------------+
| A x+1 .0 | C1        |  | A x+3 .0 | EV9       |  | A x+5 .0 |           |
| A x+1 .1 | C2        |  | A x+3 .1 | EV10      |  | A x+5 .1 |           |
| A x+1 .2 | C4        |  | A x+3 .2 | EV11      |  | A x+5 .2 |           |
| A x+1 .3 | C8        |  | A x+3 .3 | EV12      |  | A x+5 .3 |           |
| A x+1 .4 | C16       |  | A x+3 .4 | EV13      |  | A x+5 .4 |           |
| A x+1 .5 | C32       |  | A x+3 .5 | EV14      |  | A x+5 .5 |           |
| A x+1 .6 | Res       |  | A x+3 .6 | EV15      |  | A x+5 .6 |           |
| A x+1 .7 | Res       |  | A x+3 .7 | EV16      |  | A x+5 .7 |           |
+----------+-----------+  +----------+-----------+  +----------+-----------+
Qw_rbs4                    Qw_rbs5                   Qw_rbs6
+----------+-----------+  +----------+-----------+  +----------+-----------+
|Octet de Poids Fort   |  |Octet de Poids Fort   |  |Octet de Poids Fort   |
|Most significant byte |  |Most significant byte |  |Most significant byte |
|----------+-----------+  |----------+-----------+  +----------+-----------+
| A x+6 .0 | GS1       |  | A x+8 .0 | EVO1      |  | A x+10.0 |           |
| A x+6 .1 | GS2       |  | A x+8 .1 | EVO2      |  | A x+10.1 |           |
| A x+6 .2 | GS4       |  | A x+8 .2 | EVO3      |  | A x+10.2 |           |
| A x+6 .3 | GS8       |  | A x+8 .3 | EVO4      |  | A x+10.3 |           |
| A x+6 .4 | E1S_RE    |  | A x+8 .4 | EVO5      |  | A x+10.4 |           |
| A x+6 .5 | E1S_AV    |  | A x+8 .5 | EVO6      |  | A x+10.5 |           |
| A x+6 .6 | E2S_RE    |  | A x+8 .6 | EVO7      |  | A x+10.6 |           |
| A x+6 .7 | E2S_AV    |  | A x+8 .7 | EVO8      |  | A x+10.7 |           |
+----------+-----------+  +----------+-----------+  +----------+-----------+
|Octet de poids faible |  |Octet de poids faible |  |Octet de poids faible |
|Least significant byte|  |Least significant byte|  |Least significant byte|
+----------------------+  +----------------------+  +----------------------+
| A x+7 .0 | Cde Dev   |  | A x+9 .0 | EVO9      |  | A x+11.0 |           |
| A x+7 .1 | Cde Ver   |  | A x+9 .1 | EVO10     |  | A x+11.1 |           |
| A x+7 .2 |           |  | A x+9 .2 | EVO11     |  | A x+11.2 |           |
| A x+7 .3 |           |  | A x+9 .3 | EVO12     |  | A x+11.3 |           |
| A x+7 .4 |           |  | A x+9 .4 | EVO13     |  | A x+11.4 |           |
| A x+7 .5 |           |  | A x+9 .5 | EVO14     |  | A x+11.5 |           |
| A x+7 .6 |           |  | A x+9 .6 | EVO15     |  | A x+11.6 |           |
| A x+7 .7 |           |  | A x+9 .7 | EVO16     |  | A x+11.7 |           |
+----------+-----------+  +----------+-----------+  +----------+-----------+

*************************** -ODIL_ID- ************************************
NB Reseaux BF 1er Version / Network Number in 1ft version : 55
Dernier ID mis en oeuvre / Last ID implemented : 2016_56
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....
";"*************************************************************************
*                               BF_ROBOT                                *
*        Pilotage Robot RENAULT    /    RENAULT Robot Control           *
*************************************************************************
( In English further below)

DESCRIPTION:
*************
Ce Bloc fonctionnel realise
1- le rearmement du robot et l'envoi des informations de pilotage
2- l'envoi du code cycle
3- l'elaboration de variables pour le suivi des moyens
4- l'elaboration de variables pour l IHM

INFORMATION DE FONCTIONNEMENT ROBOT
******************************
1-REARMEMENT
Lors d'une demande de rearmement (Rearm), si le Robot est pret,
le FB demande le rearmement de la puissance (DMSP),
attend la mise sous puissance (MOTORON),
et envoie trois impulsions de depart cycle (DDCY).

API           ROBOT

<------------ RCREADY
DMSP ------------>
<------------ MOTORON
DDCY (1) ------------> Rearmement depart Cycle
DDCY (2) ------------> Rearmement depart Cycle
DDCY (3) ------------> Pour le rearmement eventuel d'un defaut d'air

Les variables
""Tpulsor1"": Temps des creneaux emis a 1 (valeur standard: 0,7s).
""Tpulsor0"": Temps des creneaux emis a 0 (valeur standard: 0,4s).
peuvent etre modifiees si besoin via un acces direct a l'instance
Le FB Transmet egalement (AEVRB), (STOP), (DEV), (ENPRO) et (RFZ)
****
2- CODE CYCLE ROBOT
Chaque changement de code cycle (cod), entraine l'envoi d'un code 0 au robot
pendant une seconde. Pendant cette phase le bit de validation du code a zero
(CVC0) est positionne.
Apres cette attente et si le code cycle demande n'est pas nul, son bit
d'imparite (#clcBit_par) est calcule.
Sont alors transferes au robot, le code cycle, la validation du code a 1 (CVC1)
et le bit d'imparite (CPC0).

Ecriture des codes robot en amont de la BF avec un code sur 8 bits :
- En premier les codes des programmes de travail :
de 1 a 59
et de 64 a 255
- puis les codes des programmes de service :
Service libre = 60
Rodage d'electrode = 61
Changement d'electrode = 62
- puis le programme de Repli :
Repli = 63

Mise en oeuvre de la BF :
********************
- L'entrees Rearm utilise info de rearmement zone safety
- Les entrees Dever et S_prodok utilisent des informations generes par
la BF Zone_mode_IHM et disponible dans le DB ZxG (X = Numero de la zone)
- Les entrees Z_es et Z_fz utilisent les informations issues des DB safety
associes a la zone.
- les entrees Aevr, Stop, Enpro doivent etre mise a 1 si les fonctions ne sont
pas utilisees sur le robot.
- l'entree S_code_mx doit etre documentee avec la valeur du dernier numero de
code de travail utilise par le robot.
- Les entrees Iw_Rbe1 a Iw_rbe6 doivent etre documentees avec les Entrees API
au
format Mot du robot.
- Les entrees / Sortie Qw_Rbe1 a Qw_rbe6 doivent etre documentees avec les
Sorties API au format Mot du robot.
- Toutes les sorties S_xxx doivent etre documentees soit par des variable STAT
dans le FB de mise en oeuvre du BF_ROBOT. Soit etre en lien avec la BF_TCY_SUIV
(documentation  BF_TCY_SUIV pour plus de detail)
- La sortie Diag n'est pas raccordee a une variable du programme
- L'entree G_outils_API permet d'indiquer si des evenements outils sont geres
par l'api et necessite l'ecriture d'une equation en Amont de la BF.

CODES de DEFAUT
******************
Valeur Diag.codedef
1 = Defaut presence piece
2 =  Alarme Rodage
16 = Alarme changement electrode

************************** ENGLISH INFORMATION  ****************************
DESCRIPTION:
*************
This function block has the following tasks:
1- reset robot and transmit control information
2- transmit the cycle code
3- process variables for resource tracing
4- process variables for HMI

ROBOT FUNCTIONING INFORMATION :
*******************************
1-RESETTING
Upon a reset request (Rearm), and provided the robot is ready,
the function block requests the application of power (DMSP),
waits for power up (MOTORON),
and sends three start cycle pulses (DDCY).
PLC           ROBOT

<------------ RCREADY
DMSP ------------>
<------------ MOTORON
DDCY (1) ------------> Reset cycle start (Rearmement depart Cycle)
DDCY (2) ------------> Reset cycle start (Rearmement depart Cycle)
DDCY (3) ------------> For possible reset of air fault

The variables are as follows:
""Tpulsor1"": Time slices sent at 1 (default value: 0.7s).
""Tpulsor0"": Time slices sent at 0 (default value: 0.4s).
If required, these values can be modified using direct access at the instance.
The FB also transmits the values (AEVRB), (STOP), (DEV), (ENPRO) and (RFZ)
****
2- ROBOT CYCLE CODE
Every change of the cycle code (cod) is followed by the transmission of a code
0 to the robot
for a period of 1 second. During this delay, the validation bit of the zero
code (CVC0) is set.
After this waiting period and if the requested cycle code is not at zero, then
its uneven parity
bit (#clcBit_par) is calculated.
The following information is hence transmitted to the robot:
the cycle code, the validation of the code at 1 (CVC1) and the uneven parity
bit
(CPC0).

Robot code must be wrote before the block and her value must be on 8 Booleans.
- In first the Working program codes:1 to 59 and 64 to 255
- Then the service program codes:
Free service code = 60
Electrode Tip-Dressing code = 61
Electrode change code = 62
- Then the Main Fallback code :Main Fallback code = 63
****
BF OPERATING  :
****************
- Rearm use the Safety zone resetting.
- Dever and S_prodok Inputs use the BF_Zone_MODE_IHM informations., see
ZxG Global Data for find their. ( x= zone number)
- Z_es and Z_fz Inputs use the Safety DB informations.
- Aevr, Stop, Enpro Inputs must be set to 1 if the functions are not used on
the
Robot.
-  S_code_mx Input must be documented with the last value of theWorking program
code used by the robot..
- Iw_Rbe1 to Iw_rbe6 Inputs must be documented with the PLC word inputs of the
robot.
- Qw_Rbe1 a Qw_rbe6 Inputs/outputs must be documented with the PLC outputs of
the robot.
- All S_xxx output can be documented by Stat type variables in the FB where you
put the BF or can be used by the BF_TCY_SUIV (For more Detail See OAP or
BF_TCY_SUIV documentation)
- Diag output is not used in the PLC program (directly used by HMI system)
- The ""G_outils_API"" input allows to indicate if events tools are managed by
the PLC and require the writing of an equation upstream to the BF.

FAULT LIST  :
*************
Diag.codedef values:
1 = Part presence fault
2 = Tip_dressing Alarm
16 = Electrode Change Alarm
********************************************************************************
                                     ANNEXES
                                     APPENDIX
********************************************************************************

Mots d'echanges API <-> Robot
Sorties robot -> Entrees automate (Iw_rbsX)
Sorties automate (Qw_rbeX) -> Entrees robot
La table d'echange initiale de 4 mots d'entrees/sorties a ete etendue a 15
mots...
Six de ces mots sont exploites par ce Bloc Fonctionnel.
********
Exchange words  PLC <-> Robot
Outputs robot  ->  Inputs controller (Iw_rbsX)
Outputs controller (Qw_rbeX) -> Inputs robot
The initial exchange table comprising 4 input/output words has been extended to
15 words...
Six of these words are evaluated by this function block.

Iw_rbe1                    Iw_rbe2                   Iw_rbe3
+----------+-----------+  +----------+-----------+  +----------+-----------+
|Octet de Poids Fort   |  |Octet de Poids Fort   |  |Octet de Poids Fort   |
|Most significant byte |  |Most significant byte |  |Most significant byte |
|----------+-----------+  |----------+-----------+  +----------+-----------+
| E x   .0 | RC READY  |  | E x+2 .0 | OR1       |  | E x+4 .0 | Ctrl Ver  |
| E x   .1 | MOTORON   |  | E x+2 .1 | OR2       |  | E x+4 .1 | Ctrl Dev  |
| E x   .2 | AUTO      |  | E x+2 .2 | OR3       |  | E x+4 .2 | Pret Ver  |
| E x   .3 | MANU      |  | E x+2 .3 | OR4       |  | E x+4 .3 |           |
| E x   .4 | REPLI     |  | E x+2 .4 | OR5       |  | E x+4 .4 |           |
| E x   .5 |           |  | E x+2 .5 | OR6       |  | E x+4 .5 |           |
| E x   .6 |           |  | E x+2 .6 | OR7       |  | E x+4 .6 | FRO MS    |
| E x   .7 |           |  | E x+2 .7 | OR8       |  | E x+4 .7 | FRO1 FZ   |
+----------+-----------+  +----------+-----------+  +----------+-----------+
|Octet de poids faible |  |Octet de poids faible |  |Octet de poids faible |
|Least significant byte|  |Least significant byte|  |Least significant byte|
+----------------------+  +----------------------+  +----------------------+
| E x+1 .0 | HPR       |  | E x+3 .0 | OR9       |  | E x+5 .0 | FRO2 FZ   |
| E x+1 .1 | AOP       |  | E x+3 .1 | OR10      |  | E x+5 .1 | CP air    |
| E x+1 .2 | DE        |  | E x+3 .2 | OR11      |  | E x+5 .2 | DMR 1     |
| E x+1 .3 | TC        |  | E x+3 .3 | OR12      |  | E x+5 .3 | DMR 2     |
| E x+1 .4 | AI        |  | E x+3 .4 | OR13      |  | E x+5 .4 | DMR 3     |
| E x+1 .5 | APE       |  | E x+3 .5 | OR14      |  | E x+5 .5 | DMR 4     |
| E x+1 .6 | APF       |  | E x+3 .6 | OR15      |  | E x+5 .6 | DMR 5     |
| E x+1 .7 | APP       |  | E x+3 .7 | OR16      |  | E x+5 .7 | DMR 6     |
+----------+-----------+  +----------+-----------+  +----------+-----------+
Iw_rbe4                    Iw_rbe5                   Iw_rbe6
+----------+-----------+  +----------+-----------+  +----------+-----------+
|Octet de Poids Fort   |  |Octet de Poids Fort   |  |Octet de Poids Fort   |
|Most significant byte |  |Most significant byte |  |Most significant byte |
|----------+-----------+  |----------+-----------+  +----------+-----------+
| E x+6 .0 |           |  | E x+8 .0 | ORO1      |  | E x+10.0 | Ctrl Ver  |
| E x+6 .1 |           |  | E x+8 .1 | ORO2      |  | E x+10.1 | Ctrl Dev  |
| E x+6 .2 |   DEFAUT  |  | E x+8 .2 | ORO3      |  | E x+10.2 | Pret Ver  |
| E x+6 .3 |   FAULT   |  | E x+8 .3 | ORO4      |  | E x+10.3 | N.U.      |
| E x+6 .4 |    SMP    |  | E x+8 .4 | ORO5      |  | E x+10.4 | N.U.      |
| E x+6 .5 |           |  | E x+8 .5 | ORO6      |  | E x+10.5 | N.U.      |
| E x+6 .6 |    p f    |  | E x+8 .6 | ORO7      |  | E x+10.6 | FRO MS    |
| E x+6 .7 |           |  | E x+8 .7 | ORO8      |  | E x+10.7 | FRO1 FZ   |
+----------+-----------+  +----------+-----------+  +----------+-----------+
|Octet de poids faible |  |Octet de poids faible |  |Octet de poids faible |
|Least significant byte|  |Least significant byte|  |Least significant byte|
+----------------------+  +----------------------+  +----------------------+
| E x+7 .0 |           |  | E x+9 .0 | ORO9      |  | E x+11.0 | FRO2 FZ   |
| E x+7 .1 |           |  | E x+9 .1 | ORO10     |  | E x+11.1 | CP air    |
| E x+7 .2 |   DEFAUT  |  | E x+9 .2 | ORO11     |  | E x+11.2 | DMR 1     |
| E x+7 .3 |   FAULT   |  | E x+9 .3 | ORO12     |  | E x+11.3 | DMR 2     |
| E x+7 .4 |    SMP    |  | E x+9 .4 | ORO13     |  | E x+11.4 | DMR 4     |
| E x+7 .5 |           |  | E x+9 .5 | ORO14     |  | E x+11.5 | DMR 8     |
| E x+7 .6 |    P F    |  | E x+9 .6 | ORO15     |  | E x+11.6 | DMR 16    |
| E x+7 .7 |           |  | E x+9 .7 | ORO16     |  | E x+11.7 | DMR 32    |
+----------+-----------+  +----------+-----------+  +----------+-----------+

Qw_rbs1                   Qw_rbs2                   Qw_rbs3
+----------+-----------+  +----------+-----------+  +----------+-----------+
|Octet de Poids Fort   |  |Octet de Poids Fort   |  |Octet de Poids Fort   |
|Most significant byte |  |Most significant byte |  |Most significant byte |
|----------+-----------+  |----------+-----------+  +----------+-----------+
| A x   .0 | AEVRB     |  | A x+2 .0 | EV1       |  | A x+4 .0 | ENPRO     |
| A x   .1 | DMSP      |  | A x+2 .1 | EV2       |  | A x+4 .1 | RFZ       |
| A x   .2 | STOP      |  | A x+2 .2 | EV3       |  | A x+4 .2 |           |
| A x   .3 | DDCY      |  | A x+2 .3 | EV4       |  | A x+4 .3 |           |
| A x   .4 | DEV       |  | A x+2 .4 | EV5       |  | A x+4 .4 |           |
| A x   .5 | CVC0      |  | A x+2 .5 | EV6       |  | A x+4 .5 |           |
| A x   .6 | CVC1      |  | A x+2 .6 | EV7       |  | A x+4 .6 |           |
| A x   .7 | CPC0      |  | A x+2 .7 | EV8       |  | A x+4 .7 |           |
+----------+-----------+  +----------+-----------+  +----------+-----------+
|Octet de poids faible |  |Octet de poids faible |  |Octet de poids faible |
|Least significant byte|  |Least significant byte|  |Least significant byte|
+----------------------+  +----------------------+  +----------------------+
| A x+1 .0 | C1        |  | A x+3 .0 | EV9       |  | A x+5 .0 |           |
| A x+1 .1 | C2        |  | A x+3 .1 | EV10      |  | A x+5 .1 |           |
| A x+1 .2 | C4        |  | A x+3 .2 | EV11      |  | A x+5 .2 |           |
| A x+1 .3 | C8        |  | A x+3 .3 | EV12      |  | A x+5 .3 |           |
| A x+1 .4 | C16       |  | A x+3 .4 | EV13      |  | A x+5 .4 |           |
| A x+1 .5 | C32       |  | A x+3 .5 | EV14      |  | A x+5 .5 |           |
| A x+1 .6 | Res       |  | A x+3 .6 | EV15      |  | A x+5 .6 |           |
| A x+1 .7 | Res       |  | A x+3 .7 | EV16      |  | A x+5 .7 |           |
+----------+-----------+  +----------+-----------+  +----------+-----------+
Qw_rbs4                    Qw_rbs5                   Qw_rbs6
+----------+-----------+  +----------+-----------+  +----------+-----------+
|Octet de Poids Fort   |  |Octet de Poids Fort   |  |Octet de Poids Fort   |
|Most significant byte |  |Most significant byte |  |Most significant byte |
|----------+-----------+  |----------+-----------+  +----------+-----------+
| A x+6 .0 | GS1       |  | A x+8 .0 | EVO1      |  | A x+10.0 |           |
| A x+6 .1 | GS2       |  | A x+8 .1 | EVO2      |  | A x+10.1 |           |
| A x+6 .2 | GS4       |  | A x+8 .2 | EVO3      |  | A x+10.2 |           |
| A x+6 .3 | GS8       |  | A x+8 .3 | EVO4      |  | A x+10.3 |           |
| A x+6 .4 | E1S_RE    |  | A x+8 .4 | EVO5      |  | A x+10.4 |           |
| A x+6 .5 | E1S_AV    |  | A x+8 .5 | EVO6      |  | A x+10.5 |           |
| A x+6 .6 | E2S_RE    |  | A x+8 .6 | EVO7      |  | A x+10.6 |           |
| A x+6 .7 | E2S_AV    |  | A x+8 .7 | EVO8      |  | A x+10.7 |           |
+----------+-----------+  +----------+-----------+  +----------+-----------+
|Octet de poids faible |  |Octet de poids faible |  |Octet de poids faible |
|Least significant byte|  |Least significant byte|  |Least significant byte|
+----------------------+  +----------------------+  +----------------------+
| A x+7 .0 | Cde Dev   |  | A x+9 .0 | EVO9      |  | A x+11.0 |           |
| A x+7 .1 | Cde Ver   |  | A x+9 .1 | EVO10     |  | A x+11.1 |           |
| A x+7 .2 |           |  | A x+9 .2 | EVO11     |  | A x+11.2 |           |
| A x+7 .3 |           |  | A x+9 .3 | EVO12     |  | A x+11.3 |           |
| A x+7 .4 |           |  | A x+9 .4 | EVO13     |  | A x+11.4 |           |
| A x+7 .5 |           |  | A x+9 .5 | EVO14     |  | A x+11.5 |           |
| A x+7 .6 |           |  | A x+9 .6 | EVO15     |  | A x+11.6 |           |
| A x+7 .7 |           |  | A x+9 .7 | EVO16     |  | A x+11.7 |           |
+----------+-----------+  +----------+-----------+  +----------+-----------+

*************************** -ODIL_ID- ************************************
NB Reseaux BF 1er Version / Network Number in 1ft version : 55
Dernier ID mis en oeuvre / Last ID implemented : 2016_56
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....
";"*************************************************************************
*                               BF_ROBOT                                *
*        Pilotage Robot RENAULT    /    RENAULT Robot Control           *
*************************************************************************
( In English further below)

DESCRIPTION:
*************
Ce Bloc fonctionnel realise
1- le rearmement du robot et l'envoi des informations de pilotage
2- l'envoi du code cycle
3- l'elaboration de variables pour le suivi des moyens
4- l'elaboration de variables pour l IHM

INFORMATION DE FONCTIONNEMENT ROBOT
******************************
1-REARMEMENT
Lors d'une demande de rearmement (Rearm), si le Robot est pret,
le FB demande le rearmement de la puissance (DMSP),
attend la mise sous puissance (MOTORON),
et envoie trois impulsions de depart cycle (DDCY).

API           ROBOT

<------------ RCREADY
DMSP ------------>
<------------ MOTORON
DDCY (1) ------------> Rearmement depart Cycle
DDCY (2) ------------> Rearmement depart Cycle
DDCY (3) ------------> Pour le rearmement eventuel d'un defaut d'air

Les variables
""Tpulsor1"": Temps des creneaux emis a 1 (valeur standard: 0,7s).
""Tpulsor0"": Temps des creneaux emis a 0 (valeur standard: 0,4s).
peuvent etre modifiees si besoin via un acces direct a l'instance
Le FB Transmet egalement (AEVRB), (STOP), (DEV), (ENPRO) et (RFZ)
****
2- CODE CYCLE ROBOT
Chaque changement de code cycle (cod), entraine l'envoi d'un code 0 au robot
pendant une seconde. Pendant cette phase le bit de validation du code a zero
(CVC0) est positionne.
Apres cette attente et si le code cycle demande n'est pas nul, son bit
d'imparite (#clcBit_par) est calcule.
Sont alors transferes au robot, le code cycle, la validation du code a 1 (CVC1)
et le bit d'imparite (CPC0).

Ecriture des codes robot en amont de la BF avec un code sur 8 bits :
- En premier les codes des programmes de travail :
de 1 a 59
et de 64 a 255
- puis les codes des programmes de service :
Service libre = 60
Rodage d'electrode = 61
Changement d'electrode = 62
- puis le programme de Repli :
Repli = 63

Mise en oeuvre de la BF :
********************
- L'entrees Rearm utilise info de rearmement zone safety
- Les entrees Dever et S_prodok utilisent des informations generes par
la BF Zone_mode_IHM et disponible dans le DB ZxG (X = Numero de la zone)
- Les entrees Z_es et Z_fz utilisent les informations issues des DB safety
associes a la zone.
- les entrees Aevr, Stop, Enpro doivent etre mise a 1 si les fonctions ne sont
pas utilisees sur le robot.
- l'entree S_code_mx doit etre documentee avec la valeur du dernier numero de
code de travail utilise par le robot.
- Les entrees Iw_Rbe1 a Iw_rbe6 doivent etre documentees avec les Entrees API
au
format Mot du robot.
- Les entrees / Sortie Qw_Rbe1 a Qw_rbe6 doivent etre documentees avec les
Sorties API au format Mot du robot.
- Toutes les sorties S_xxx doivent etre documentees soit par des variable STAT
dans le FB de mise en oeuvre du BF_ROBOT. Soit etre en lien avec la BF_TCY_SUIV
(documentation  BF_TCY_SUIV pour plus de detail)
- La sortie Diag n'est pas raccordee a une variable du programme
- L'entree G_outils_API permet d'indiquer si des evenements outils sont geres
par l'api et necessite l'ecriture d'une equation en Amont de la BF.

CODES de DEFAUT
******************
Valeur Diag.codedef
1 = Defaut presence piece
2 =  Alarme Rodage
16 = Alarme changement electrode

************************** ENGLISH INFORMATION  ****************************
DESCRIPTION:
*************
This function block has the following tasks:
1- reset robot and transmit control information
2- transmit the cycle code
3- process variables for resource tracing
4- process variables for HMI

ROBOT FUNCTIONING INFORMATION :
*******************************
1-RESETTING
Upon a reset request (Rearm), and provided the robot is ready,
the function block requests the application of power (DMSP),
waits for power up (MOTORON),
and sends three start cycle pulses (DDCY).
PLC           ROBOT

<------------ RCREADY
DMSP ------------>
<------------ MOTORON
DDCY (1) ------------> Reset cycle start (Rearmement depart Cycle)
DDCY (2) ------------> Reset cycle start (Rearmement depart Cycle)
DDCY (3) ------------> For possible reset of air fault

The variables are as follows:
""Tpulsor1"": Time slices sent at 1 (default value: 0.7s).
""Tpulsor0"": Time slices sent at 0 (default value: 0.4s).
If required, these values can be modified using direct access at the instance.
The FB also transmits the values (AEVRB), (STOP), (DEV), (ENPRO) and (RFZ)
****
2- ROBOT CYCLE CODE
Every change of the cycle code (cod) is followed by the transmission of a code
0 to the robot
for a period of 1 second. During this delay, the validation bit of the zero
code (CVC0) is set.
After this waiting period and if the requested cycle code is not at zero, then
its uneven parity
bit (#clcBit_par) is calculated.
The following information is hence transmitted to the robot:
the cycle code, the validation of the code at 1 (CVC1) and the uneven parity
bit
(CPC0).

Robot code must be wrote before the block and her value must be on 8 Booleans.
- In first the Working program codes:1 to 59 and 64 to 255
- Then the service program codes:
Free service code = 60
Electrode Tip-Dressing code = 61
Electrode change code = 62
- Then the Main Fallback code :Main Fallback code = 63
****
BF OPERATING  :
****************
- Rearm use the Safety zone resetting.
- Dever and S_prodok Inputs use the BF_Zone_MODE_IHM informations., see
ZxG Global Data for find their. ( x= zone number)
- Z_es and Z_fz Inputs use the Safety DB informations.
- Aevr, Stop, Enpro Inputs must be set to 1 if the functions are not used on
the
Robot.
-  S_code_mx Input must be documented with the last value of theWorking program
code used by the robot..
- Iw_Rbe1 to Iw_rbe6 Inputs must be documented with the PLC word inputs of the
robot.
- Qw_Rbe1 a Qw_rbe6 Inputs/outputs must be documented with the PLC outputs of
the robot.
- All S_xxx output can be documented by Stat type variables in the FB where you
put the BF or can be used by the BF_TCY_SUIV (For more Detail See OAP or
BF_TCY_SUIV documentation)
- Diag output is not used in the PLC program (directly used by HMI system)
- The ""G_outils_API"" input allows to indicate if events tools are managed by
the PLC and require the writing of an equation upstream to the BF.

FAULT LIST  :
*************
Diag.codedef values:
1 = Part presence fault
2 = Tip_dressing Alarm
16 = Electrode Change Alarm
********************************************************************************
                                     ANNEXES
                                     APPENDIX
********************************************************************************

Mots d'echanges API <-> Robot
Sorties robot -> Entrees automate (Iw_rbsX)
Sorties automate (Qw_rbeX) -> Entrees robot
La table d'echange initiale de 4 mots d'entrees/sorties a ete etendue a 15
mots...
Six de ces mots sont exploites par ce Bloc Fonctionnel.
********
Exchange words  PLC <-> Robot
Outputs robot  ->  Inputs controller (Iw_rbsX)
Outputs controller (Qw_rbeX) -> Inputs robot
The initial exchange table comprising 4 input/output words has been extended to
15 words...
Six of these words are evaluated by this function block.

Iw_rbe1                    Iw_rbe2                   Iw_rbe3
+----------+-----------+  +----------+-----------+  +----------+-----------+
|Octet de Poids Fort   |  |Octet de Poids Fort   |  |Octet de Poids Fort   |
|Most significant byte |  |Most significant byte |  |Most significant byte |
|----------+-----------+  |----------+-----------+  +----------+-----------+
| E x   .0 | RC READY  |  | E x+2 .0 | OR1       |  | E x+4 .0 | Ctrl Ver  |
| E x   .1 | MOTORON   |  | E x+2 .1 | OR2       |  | E x+4 .1 | Ctrl Dev  |
| E x   .2 | AUTO      |  | E x+2 .2 | OR3       |  | E x+4 .2 | Pret Ver  |
| E x   .3 | MANU      |  | E x+2 .3 | OR4       |  | E x+4 .3 |           |
| E x   .4 | REPLI     |  | E x+2 .4 | OR5       |  | E x+4 .4 |           |
| E x   .5 |           |  | E x+2 .5 | OR6       |  | E x+4 .5 |           |
| E x   .6 |           |  | E x+2 .6 | OR7       |  | E x+4 .6 | FRO MS    |
| E x   .7 |           |  | E x+2 .7 | OR8       |  | E x+4 .7 | FRO1 FZ   |
+----------+-----------+  +----------+-----------+  +----------+-----------+
|Octet de poids faible |  |Octet de poids faible |  |Octet de poids faible |
|Least significant byte|  |Least significant byte|  |Least significant byte|
+----------------------+  +----------------------+  +----------------------+
| E x+1 .0 | HPR       |  | E x+3 .0 | OR9       |  | E x+5 .0 | FRO2 FZ   |
| E x+1 .1 | AOP       |  | E x+3 .1 | OR10      |  | E x+5 .1 | CP air    |
| E x+1 .2 | DE        |  | E x+3 .2 | OR11      |  | E x+5 .2 | DMR 1     |
| E x+1 .3 | TC        |  | E x+3 .3 | OR12      |  | E x+5 .3 | DMR 2     |
| E x+1 .4 | AI        |  | E x+3 .4 | OR13      |  | E x+5 .4 | DMR 3     |
| E x+1 .5 | APE       |  | E x+3 .5 | OR14      |  | E x+5 .5 | DMR 4     |
| E x+1 .6 | APF       |  | E x+3 .6 | OR15      |  | E x+5 .6 | DMR 5     |
| E x+1 .7 | APP       |  | E x+3 .7 | OR16      |  | E x+5 .7 | DMR 6     |
+----------+-----------+  +----------+-----------+  +----------+-----------+
Iw_rbe4                    Iw_rbe5                   Iw_rbe6
+----------+-----------+  +----------+-----------+  +----------+-----------+
|Octet de Poids Fort   |  |Octet de Poids Fort   |  |Octet de Poids Fort   |
|Most significant byte |  |Most significant byte |  |Most significant byte |
|----------+-----------+  |----------+-----------+  +----------+-----------+
| E x+6 .0 |           |  | E x+8 .0 | ORO1      |  | E x+10.0 | Ctrl Ver  |
| E x+6 .1 |           |  | E x+8 .1 | ORO2      |  | E x+10.1 | Ctrl Dev  |
| E x+6 .2 |   DEFAUT  |  | E x+8 .2 | ORO3      |  | E x+10.2 | Pret Ver  |
| E x+6 .3 |   FAULT   |  | E x+8 .3 | ORO4      |  | E x+10.3 | N.U.      |
| E x+6 .4 |    SMP    |  | E x+8 .4 | ORO5      |  | E x+10.4 | N.U.      |
| E x+6 .5 |           |  | E x+8 .5 | ORO6      |  | E x+10.5 | N.U.      |
| E x+6 .6 |    p f    |  | E x+8 .6 | ORO7      |  | E x+10.6 | FRO MS    |
| E x+6 .7 |           |  | E x+8 .7 | ORO8      |  | E x+10.7 | FRO1 FZ   |
+----------+-----------+  +----------+-----------+  +----------+-----------+
|Octet de poids faible |  |Octet de poids faible |  |Octet de poids faible |
|Least significant byte|  |Least significant byte|  |Least significant byte|
+----------------------+  +----------------------+  +----------------------+
| E x+7 .0 |           |  | E x+9 .0 | ORO9      |  | E x+11.0 | FRO2 FZ   |
| E x+7 .1 |           |  | E x+9 .1 | ORO10     |  | E x+11.1 | CP air    |
| E x+7 .2 |   DEFAUT  |  | E x+9 .2 | ORO11     |  | E x+11.2 | DMR 1     |
| E x+7 .3 |   FAULT   |  | E x+9 .3 | ORO12     |  | E x+11.3 | DMR 2     |
| E x+7 .4 |    SMP    |  | E x+9 .4 | ORO13     |  | E x+11.4 | DMR 4     |
| E x+7 .5 |           |  | E x+9 .5 | ORO14     |  | E x+11.5 | DMR 8     |
| E x+7 .6 |    P F    |  | E x+9 .6 | ORO15     |  | E x+11.6 | DMR 16    |
| E x+7 .7 |           |  | E x+9 .7 | ORO16     |  | E x+11.7 | DMR 32    |
+----------+-----------+  +----------+-----------+  +----------+-----------+

Qw_rbs1                   Qw_rbs2                   Qw_rbs3
+----------+-----------+  +----------+-----------+  +----------+-----------+
|Octet de Poids Fort   |  |Octet de Poids Fort   |  |Octet de Poids Fort   |
|Most significant byte |  |Most significant byte |  |Most significant byte |
|----------+-----------+  |----------+-----------+  +----------+-----------+
| A x   .0 | AEVRB     |  | A x+2 .0 | EV1       |  | A x+4 .0 | ENPRO     |
| A x   .1 | DMSP      |  | A x+2 .1 | EV2       |  | A x+4 .1 | RFZ       |
| A x   .2 | STOP      |  | A x+2 .2 | EV3       |  | A x+4 .2 |           |
| A x   .3 | DDCY      |  | A x+2 .3 | EV4       |  | A x+4 .3 |           |
| A x   .4 | DEV       |  | A x+2 .4 | EV5       |  | A x+4 .4 |           |
| A x   .5 | CVC0      |  | A x+2 .5 | EV6       |  | A x+4 .5 |           |
| A x   .6 | CVC1      |  | A x+2 .6 | EV7       |  | A x+4 .6 |           |
| A x   .7 | CPC0      |  | A x+2 .7 | EV8       |  | A x+4 .7 |           |
+----------+-----------+  +----------+-----------+  +----------+-----------+
|Octet de poids faible |  |Octet de poids faible |  |Octet de poids faible |
|Least significant byte|  |Least significant byte|  |Least significant byte|
+----------------------+  +----------------------+  +----------------------+
| A x+1 .0 | C1        |  | A x+3 .0 | EV9       |  | A x+5 .0 |           |
| A x+1 .1 | C2        |  | A x+3 .1 | EV10      |  | A x+5 .1 |           |
| A x+1 .2 | C4        |  | A x+3 .2 | EV11      |  | A x+5 .2 |           |
| A x+1 .3 | C8        |  | A x+3 .3 | EV12      |  | A x+5 .3 |           |
| A x+1 .4 | C16       |  | A x+3 .4 | EV13      |  | A x+5 .4 |           |
| A x+1 .5 | C32       |  | A x+3 .5 | EV14      |  | A x+5 .5 |           |
| A x+1 .6 | Res       |  | A x+3 .6 | EV15      |  | A x+5 .6 |           |
| A x+1 .7 | Res       |  | A x+3 .7 | EV16      |  | A x+5 .7 |           |
+----------+-----------+  +----------+-----------+  +----------+-----------+
Qw_rbs4                    Qw_rbs5                   Qw_rbs6
+----------+-----------+  +----------+-----------+  +----------+-----------+
|Octet de Poids Fort   |  |Octet de Poids Fort   |  |Octet de Poids Fort   |
|Most significant byte |  |Most significant byte |  |Most significant byte |
|----------+-----------+  |----------+-----------+  +----------+-----------+
| A x+6 .0 | GS1       |  | A x+8 .0 | EVO1      |  | A x+10.0 |           |
| A x+6 .1 | GS2       |  | A x+8 .1 | EVO2      |  | A x+10.1 |           |
| A x+6 .2 | GS4       |  | A x+8 .2 | EVO3      |  | A x+10.2 |           |
| A x+6 .3 | GS8       |  | A x+8 .3 | EVO4      |  | A x+10.3 |           |
| A x+6 .4 | E1S_RE    |  | A x+8 .4 | EVO5      |  | A x+10.4 |           |
| A x+6 .5 | E1S_AV    |  | A x+8 .5 | EVO6      |  | A x+10.5 |           |
| A x+6 .6 | E2S_RE    |  | A x+8 .6 | EVO7      |  | A x+10.6 |           |
| A x+6 .7 | E2S_AV    |  | A x+8 .7 | EVO8      |  | A x+10.7 |           |
+----------+-----------+  +----------+-----------+  +----------+-----------+
|Octet de poids faible |  |Octet de poids faible |  |Octet de poids faible |
|Least significant byte|  |Least significant byte|  |Least significant byte|
+----------------------+  +----------------------+  +----------------------+
| A x+7 .0 | Cde Dev   |  | A x+9 .0 | EVO9      |  | A x+11.0 |           |
| A x+7 .1 | Cde Ver   |  | A x+9 .1 | EVO10     |  | A x+11.1 |           |
| A x+7 .2 |           |  | A x+9 .2 | EVO11     |  | A x+11.2 |           |
| A x+7 .3 |           |  | A x+9 .3 | EVO12     |  | A x+11.3 |           |
| A x+7 .4 |           |  | A x+9 .4 | EVO13     |  | A x+11.4 |           |
| A x+7 .5 |           |  | A x+9 .5 | EVO14     |  | A x+11.5 |           |
| A x+7 .6 |           |  | A x+9 .6 | EVO15     |  | A x+11.6 |           |
| A x+7 .7 |           |  | A x+9 .7 | EVO16     |  | A x+11.7 |           |
+----------+-----------+  +----------+-----------+  +----------+-----------+

*************************** -ODIL_ID- ************************************
NB Reseaux BF 1er Version / Network Number in 1ft version : 55
Dernier ID mis en oeuvre / Last ID implemented : 2016_56
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....
";""
"**********************************************************************
*                          FB ""TCY_SUIV""                             *
*    SERT A MESURE LES TEMPS DE CYCLE D'UN MOYEN DE PRODUCTION       *
*          Used to measure production facility cycle time            *
**********************************************************************
(In english further below)
DESCRIPTION:
************
LE FB ""TCY_SUIV"" REMPLIE PLUSIEURS FONCTIONS
-MESURE DU TEMPS DE CYCLE PROPRE DU MOYEN, HORS TEMPS D'ATTENTE DUS A
L'ENVIRONNEMENT
-MESURE DU TEMPS DE CYCLE TOTAL DU MOYEN, COMPRENANT LES TEMPS D'ATTENTE DUS A
L'ENVIRONNEMENT
-SIGNALEMENT DU DEPASSEMENT DE TEMPS DE CYCLE APRES UN TEMPS INDIQUE
-SIGNALEMENT D'UNE PANNE POSSIBLE SI LE DEPASSEMENT DE TEMPS DE CYCLE EST
SUPERIEUR A UN TEMPS INDIQUE

CONTRAINTES:
************
-LA BASE DE TEMPS INTERNE DE LA FB EST LE ms ALORS QUE CELLE EXTERNE EST LE
1/10s (BASE DE SMPLOC)
-LES TEMPS MESURES, COMME LES VALEURS DE SEULS, NE PEUVENT EXCEDER 54mn
(32400/10s, MOT DE 16 BITS SIGNE)
-LA FB NE PEUT CONTROLER PLUSIEURS TEMPS DE CYCLE SIMULTANEMENT

CODE DE DEFAUT:
***************
Diagnostic Code Défaut Codedef valeur en DEC
1 : Dépassement T1 si validation mesure tcy propre
2 : Dépassement T2 si validation mesure tcy propre

************************ English information ********************************
DESCRIPTION:
************
The ""TCY_SUIV"" FB has several functions:
-Measurement of facility cycle time belonging, without waiting time due
to the environment
-Measurement of facility total cycle time, including the waiting time due to
the
environment
-Indication of a cycle time that has exceeded a defined time period
-Indication of a possible production failure due to the cycle time exceeding
the
defined time period

CONDITIONS:
************
-The internal time base of the function block is in milliseconds, whereas the
external time base is expressed in 1/10th of a second (Basis of SMPLOC)
-The measured time values, such as the limit values, may not exceed 54 minutes
(32400/10s, signed word of 16 bits)
-The function block is not capable of controlling several cycle times at the
same timeT

FAULT CODE :
***********
Values of Diagnosis Code Fault ""Codedef"" (In DEC)
1 : Exceeding T1 if measurement validation tcy
2 : Exceeding T2 if measurement validation tcy

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 4
Dernier ID mis en oeuvre / Last ID implemented : 2019_4
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"**********************************************************************
*                          FB ""TCY_SUIV""                             *
*    SERT A MESURE LES TEMPS DE CYCLE D'UN MOYEN DE PRODUCTION       *
*          Used to measure production facility cycle time            *
**********************************************************************
(In english further below)
DESCRIPTION:
************
LE FB ""TCY_SUIV"" REMPLIE PLUSIEURS FONCTIONS
-MESURE DU TEMPS DE CYCLE PROPRE DU MOYEN, HORS TEMPS D'ATTENTE DUS A
L'ENVIRONNEMENT
-MESURE DU TEMPS DE CYCLE TOTAL DU MOYEN, COMPRENANT LES TEMPS D'ATTENTE DUS A
L'ENVIRONNEMENT
-SIGNALEMENT DU DEPASSEMENT DE TEMPS DE CYCLE APRES UN TEMPS INDIQUE
-SIGNALEMENT D'UNE PANNE POSSIBLE SI LE DEPASSEMENT DE TEMPS DE CYCLE EST
SUPERIEUR A UN TEMPS INDIQUE

CONTRAINTES:
************
-LA BASE DE TEMPS INTERNE DE LA FB EST LE ms ALORS QUE CELLE EXTERNE EST LE
1/10s (BASE DE SMPLOC)
-LES TEMPS MESURES, COMME LES VALEURS DE SEULS, NE PEUVENT EXCEDER 54mn
(32400/10s, MOT DE 16 BITS SIGNE)
-LA FB NE PEUT CONTROLER PLUSIEURS TEMPS DE CYCLE SIMULTANEMENT

CODE DE DEFAUT:
***************
Diagnostic Code Défaut Codedef valeur en DEC
1 : Dépassement T1 si validation mesure tcy propre
2 : Dépassement T2 si validation mesure tcy propre

************************ English information ********************************
DESCRIPTION:
************
The ""TCY_SUIV"" FB has several functions:
-Measurement of facility cycle time belonging, without waiting time due
to the environment
-Measurement of facility total cycle time, including the waiting time due to
the
environment
-Indication of a cycle time that has exceeded a defined time period
-Indication of a possible production failure due to the cycle time exceeding
the
defined time period

CONDITIONS:
************
-The internal time base of the function block is in milliseconds, whereas the
external time base is expressed in 1/10th of a second (Basis of SMPLOC)
-The measured time values, such as the limit values, may not exceed 54 minutes
(32400/10s, signed word of 16 bits)
-The function block is not capable of controlling several cycle times at the
same timeT

FAULT CODE :
***********
Values of Diagnosis Code Fault ""Codedef"" (In DEC)
1 : Exceeding T1 if measurement validation tcy
2 : Exceeding T2 if measurement validation tcy

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 4
Dernier ID mis en oeuvre / Last ID implemented : 2019_4
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"**********************************************************************
*                          FB ""TCY_SUIV""                             *
*    SERT A MESURE LES TEMPS DE CYCLE D'UN MOYEN DE PRODUCTION       *
*          Used to measure production facility cycle time            *
**********************************************************************
(In english further below)
DESCRIPTION:
************
LE FB ""TCY_SUIV"" REMPLIE PLUSIEURS FONCTIONS
-MESURE DU TEMPS DE CYCLE PROPRE DU MOYEN, HORS TEMPS D'ATTENTE DUS A
L'ENVIRONNEMENT
-MESURE DU TEMPS DE CYCLE TOTAL DU MOYEN, COMPRENANT LES TEMPS D'ATTENTE DUS A
L'ENVIRONNEMENT
-SIGNALEMENT DU DEPASSEMENT DE TEMPS DE CYCLE APRES UN TEMPS INDIQUE
-SIGNALEMENT D'UNE PANNE POSSIBLE SI LE DEPASSEMENT DE TEMPS DE CYCLE EST
SUPERIEUR A UN TEMPS INDIQUE

CONTRAINTES:
************
-LA BASE DE TEMPS INTERNE DE LA FB EST LE ms ALORS QUE CELLE EXTERNE EST LE
1/10s (BASE DE SMPLOC)
-LES TEMPS MESURES, COMME LES VALEURS DE SEULS, NE PEUVENT EXCEDER 54mn
(32400/10s, MOT DE 16 BITS SIGNE)
-LA FB NE PEUT CONTROLER PLUSIEURS TEMPS DE CYCLE SIMULTANEMENT

CODE DE DEFAUT:
***************
Diagnostic Code Défaut Codedef valeur en DEC
1 : Dépassement T1 si validation mesure tcy propre
2 : Dépassement T2 si validation mesure tcy propre

************************ English information ********************************
DESCRIPTION:
************
The ""TCY_SUIV"" FB has several functions:
-Measurement of facility cycle time belonging, without waiting time due
to the environment
-Measurement of facility total cycle time, including the waiting time due to
the
environment
-Indication of a cycle time that has exceeded a defined time period
-Indication of a possible production failure due to the cycle time exceeding
the
defined time period

CONDITIONS:
************
-The internal time base of the function block is in milliseconds, whereas the
external time base is expressed in 1/10th of a second (Basis of SMPLOC)
-The measured time values, such as the limit values, may not exceed 54 minutes
(32400/10s, signed word of 16 bits)
-The function block is not capable of controlling several cycle times at the
same timeT

FAULT CODE :
***********
Values of Diagnosis Code Fault ""Codedef"" (In DEC)
1 : Exceeding T1 if measurement validation tcy
2 : Exceeding T2 if measurement validation tcy

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 4
Dernier ID mis en oeuvre / Last ID implemented : 2019_4
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";""
"**********************************************************************
*                           FB RUP_FLU                               *
*                           ***********                              *
*            SERT A METTRE EN EVIDENCE LA PERTE DE TEMPS             *
*               ENTRE 2 POSTES DE PRODUCTION EN FLUX                 *
*            USED TO IDENTIFY TIME LOST BETWEEN TWO WORKSTATIONS     *
**********************************************************************
(In English further below)
DESCRIPTION:
************
LE FB ""RUP_FLU"" POSSEDE, AU CHOIX, 2 MODES DE FONCTIONNEMENT (SELECTION PAR
L'ENTREE ""MODE"")
-MODE 1 : CONTROLE DE SATURATION (LE POSTE AMONT ATTEND LE POSTE AVAL)
          .SIGNALEMENT DE L'ARRET INDUIT
          .SIGNALEMENT DE LA RUPTURE DE FLUX AU BOUT D'UN TEMPS INDIQUE
-MODE 2 : CONTROLE DU DESAMORCAGE (LE POSTE AVAL ATTEND LE POSTE AMONT)
          .SIGNALEMENT DE L'ARRET INDUIT;
          .SIGNALEMENT DE LA RUPTURE DE FLUX AU BOUT D'UN TEMPS INDIQUE
CONTRAINTES:

************
-LA BASE DE TEMPS DISPONIBLE DANS LE FB EST LE 1/100s
ALORS QUE CELLE DES SEUILS
ET RESULTATS EST LE 1/10s
-LES TEMPS MESURES (COMME LES TEMPS ATTRIBUES)NE PEUVENT EXCEDER 54mn SOIT
32400/10s
-LE FB PEUT CONTROLER SOIT UNE SATURATION,SOIT UN DESAMORCAGE,MAIS PAS LES 2
SIMULTANEMENT

**************************** ENGLISH INFORMATION *****************************
DESCRIPTION:
************
This functional box performs the checks according to 2 modes (""mode"" input):
- Mode input = 1: saturation check (Downstream Workstation is waiting
for upstream one)
                . Indicates induces stoppage
                . indicates flow rupture after defined time
- Mode input = 2: interruption check (Upstream Workstation is waiting for
downstream one)
                . Indicates induces stoppage
                . indicates flow rupture after defined time

CONTRAINTS:

************
-The internal time base of the function block is in milliseconds, whereas the
external time base is expressed in 1/10th of a second (Basis of SMPLOC)
-The measured time values, such as the limit values, may not exceed 54 minutes
(32400/10s, signed word of 16 bits)
-The function block is not capable of controlling several cycle times at the
same timeT

************************* _ODIL_ID_ *********************************
NB Reseaux BF 1er Version / Network Number in 1ft version : 8
Dernier ID mis en oeuvre / Last ID implemented : 2020_8
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"**********************************************************************
*                           FB RUP_FLU                               *
*                           ***********                              *
*            SERT A METTRE EN EVIDENCE LA PERTE DE TEMPS             *
*               ENTRE 2 POSTES DE PRODUCTION EN FLUX                 *
*            USED TO IDENTIFY TIME LOST BETWEEN TWO WORKSTATIONS     *
**********************************************************************
(In English further below)
DESCRIPTION:
************
LE FB ""RUP_FLU"" POSSEDE, AU CHOIX, 2 MODES DE FONCTIONNEMENT (SELECTION PAR
L'ENTREE ""MODE"")
-MODE 1 : CONTROLE DE SATURATION (LE POSTE AMONT ATTEND LE POSTE AVAL)
          .SIGNALEMENT DE L'ARRET INDUIT
          .SIGNALEMENT DE LA RUPTURE DE FLUX AU BOUT D'UN TEMPS INDIQUE
-MODE 2 : CONTROLE DU DESAMORCAGE (LE POSTE AVAL ATTEND LE POSTE AMONT)
          .SIGNALEMENT DE L'ARRET INDUIT;
          .SIGNALEMENT DE LA RUPTURE DE FLUX AU BOUT D'UN TEMPS INDIQUE
CONTRAINTES:

************
-LA BASE DE TEMPS DISPONIBLE DANS LE FB EST LE 1/100s
ALORS QUE CELLE DES SEUILS
ET RESULTATS EST LE 1/10s
-LES TEMPS MESURES (COMME LES TEMPS ATTRIBUES)NE PEUVENT EXCEDER 54mn SOIT
32400/10s
-LE FB PEUT CONTROLER SOIT UNE SATURATION,SOIT UN DESAMORCAGE,MAIS PAS LES 2
SIMULTANEMENT

**************************** ENGLISH INFORMATION *****************************
DESCRIPTION:
************
This functional box performs the checks according to 2 modes (""mode"" input):
- Mode input = 1: saturation check (Downstream Workstation is waiting
for upstream one)
                . Indicates induces stoppage
                . indicates flow rupture after defined time
- Mode input = 2: interruption check (Upstream Workstation is waiting for
downstream one)
                . Indicates induces stoppage
                . indicates flow rupture after defined time

CONTRAINTS:

************
-The internal time base of the function block is in milliseconds, whereas the
external time base is expressed in 1/10th of a second (Basis of SMPLOC)
-The measured time values, such as the limit values, may not exceed 54 minutes
(32400/10s, signed word of 16 bits)
-The function block is not capable of controlling several cycle times at the
same timeT

************************* _ODIL_ID_ *********************************
NB Reseaux BF 1er Version / Network Number in 1ft version : 8
Dernier ID mis en oeuvre / Last ID implemented : 2020_8
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"**********************************************************************
*                           FB RUP_FLU                               *
*                           ***********                              *
*            SERT A METTRE EN EVIDENCE LA PERTE DE TEMPS             *
*               ENTRE 2 POSTES DE PRODUCTION EN FLUX                 *
*            USED TO IDENTIFY TIME LOST BETWEEN TWO WORKSTATIONS     *
**********************************************************************
(In English further below)
DESCRIPTION:
************
LE FB ""RUP_FLU"" POSSEDE, AU CHOIX, 2 MODES DE FONCTIONNEMENT (SELECTION PAR
L'ENTREE ""MODE"")
-MODE 1 : CONTROLE DE SATURATION (LE POSTE AMONT ATTEND LE POSTE AVAL)
          .SIGNALEMENT DE L'ARRET INDUIT
          .SIGNALEMENT DE LA RUPTURE DE FLUX AU BOUT D'UN TEMPS INDIQUE
-MODE 2 : CONTROLE DU DESAMORCAGE (LE POSTE AVAL ATTEND LE POSTE AMONT)
          .SIGNALEMENT DE L'ARRET INDUIT;
          .SIGNALEMENT DE LA RUPTURE DE FLUX AU BOUT D'UN TEMPS INDIQUE
CONTRAINTES:

************
-LA BASE DE TEMPS DISPONIBLE DANS LE FB EST LE 1/100s
ALORS QUE CELLE DES SEUILS
ET RESULTATS EST LE 1/10s
-LES TEMPS MESURES (COMME LES TEMPS ATTRIBUES)NE PEUVENT EXCEDER 54mn SOIT
32400/10s
-LE FB PEUT CONTROLER SOIT UNE SATURATION,SOIT UN DESAMORCAGE,MAIS PAS LES 2
SIMULTANEMENT

**************************** ENGLISH INFORMATION *****************************
DESCRIPTION:
************
This functional box performs the checks according to 2 modes (""mode"" input):
- Mode input = 1: saturation check (Downstream Workstation is waiting
for upstream one)
                . Indicates induces stoppage
                . indicates flow rupture after defined time
- Mode input = 2: interruption check (Upstream Workstation is waiting for
downstream one)
                . Indicates induces stoppage
                . indicates flow rupture after defined time

CONTRAINTS:

************
-The internal time base of the function block is in milliseconds, whereas the
external time base is expressed in 1/10th of a second (Basis of SMPLOC)
-The measured time values, such as the limit values, may not exceed 54 minutes
(32400/10s, signed word of 16 bits)
-The function block is not capable of controlling several cycle times at the
same timeT

************************* _ODIL_ID_ *********************************
NB Reseaux BF 1er Version / Network Number in 1ft version : 8
Dernier ID mis en oeuvre / Last ID implemented : 2020_8
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";""
"********************************************************************************
*                             BF CPT_PIECE                                     *
*                            COMPTAGE PIECES                                   *
*                             PART COUNTER                                     *
********************************************************************************
(In English futher below)

DESCRIPTION :
************
Assure le comptage des pièces avec visualisation de la présélection et de la
valeur en cours.

MISE EN OEUVRE :
****************
Le comptage pièce doit être associé au sous ensemble désigner sous ODIL comme
référence SMP.

Liens avec SMP :
- 1 BF par diversité déclarée sous SMP.
- La Raz des compteurs est réalisée par SMP :
  a) déclarer une variable Sxraz (x=Numéro de zone) dans le FB de gestion de la
     zone concernée au niveau STAT.
  b) déclarer les variables Sxraz et Sxfraz (x=Numéro de zone)dans le DB Global

   ""ZxG"" pour faire le lien avec les sous ensembles contenant les BF_CPT_PIECE.
  C)Mettre en oeuvre les réseaux suivants dans le FB de gestion de Zone(FBx00):

 Reseau N :  Sxraz         ZxG.Sxraz
        -----| |-------------( )

 Reseau N+1 : ZxG.Sxfraz    Sxraz
         -----| |------------(R)
  d) Mettre en oeuvre le reseau suivant en aval de la Dernièer BF_Cpt_pièce de
  la zone :
           ZxG.Sxraz   ZxG.Sxfraz
        -----| |-----------( )
Entrées du BF :
Raz_cpt = ZxG.Sxraz
Autcompt = ZxG.mauto ( issue de la BF zone Mode)
Comptage  : la BF gére le font montant de l'évènement.

Sortie du BF :
Val_cour = Variable de valeur de comptage définie sous SMP (niveau STAT)

CODE DEFAUT :
*************
Non utilisé

************************** ENGLISH INFORMATION *********************************
DESCRIPTION:
************
Insure the counting of parts with display of the preselection and the current
value.

OPERATING :
*********
The counting part must be associated to the Sub assembly indicated under ODIL
as
SMP references.

Links with SMP:
- 1 BF by diversity declared under SMP.
- Raz of counter is realized by SMP:
  A) Implement a variable Sxraz (x=zone number) in the FB of zone management
      concerned at STAT level.
  B) Implement variables Sxraz and Sxfraz (x= zone number) in the GlobalDB
     ""ZxG "" to make the link with sub assembly containing the BF_CPT_PIECE.
  C) Implement the following networks in the FB of zone management ( FBx00):

 Network N:    Sxraz          ZxG.Sxraz
          -----¦ ¦-------------( )

 Network N+1: ZxG.Sxfraz       Sxraz
          -----¦ ¦------------( R )
  D) Implement the reseau following downstream the last BF_Cpt_pièce of the
     zone:  ZxG.Sxraz    ZxG.Sxfraz
          -----¦ ¦-----------( )
BF Input:
Raz_cpt = ZxG.Sxraz
Autcompt = ZxG.mauto (stemming from the BF zone Mode)
Comptage : the BF create the rising edge of the event.

BF Output:
Val_cour = Counter value defined under SMP (STAT level)

FAULT CODE:
************
Not used

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 4
Dernier ID mis en oeuvre / Last ID implemented : 2021_4
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"********************************************************************************
*                             BF CPT_PIECE                                     *
*                            COMPTAGE PIECES                                   *
*                             PART COUNTER                                     *
********************************************************************************
(In English futher below)

DESCRIPTION :
************
Assure le comptage des pièces avec visualisation de la présélection et de la
valeur en cours.

MISE EN OEUVRE :
****************
Le comptage pièce doit être associé au sous ensemble désigner sous ODIL comme
référence SMP.

Liens avec SMP :
- 1 BF par diversité déclarée sous SMP.
- La Raz des compteurs est réalisée par SMP :
  a) déclarer une variable Sxraz (x=Numéro de zone) dans le FB de gestion de la
     zone concernée au niveau STAT.
  b) déclarer les variables Sxraz et Sxfraz (x=Numéro de zone)dans le DB Global

   ""ZxG"" pour faire le lien avec les sous ensembles contenant les BF_CPT_PIECE.
  C)Mettre en oeuvre les réseaux suivants dans le FB de gestion de Zone(FBx00):

 Reseau N :  Sxraz         ZxG.Sxraz
        -----| |-------------( )

 Reseau N+1 : ZxG.Sxfraz    Sxraz
         -----| |------------(R)
  d) Mettre en oeuvre le reseau suivant en aval de la Dernièer BF_Cpt_pièce de
  la zone :
           ZxG.Sxraz   ZxG.Sxfraz
        -----| |-----------( )
Entrées du BF :
Raz_cpt = ZxG.Sxraz
Autcompt = ZxG.mauto ( issue de la BF zone Mode)
Comptage  : la BF gére le font montant de l'évènement.

Sortie du BF :
Val_cour = Variable de valeur de comptage définie sous SMP (niveau STAT)

CODE DEFAUT :
*************
Non utilisé

************************** ENGLISH INFORMATION *********************************
DESCRIPTION:
************
Insure the counting of parts with display of the preselection and the current
value.

OPERATING :
*********
The counting part must be associated to the Sub assembly indicated under ODIL
as
SMP references.

Links with SMP:
- 1 BF by diversity declared under SMP.
- Raz of counter is realized by SMP:
  A) Implement a variable Sxraz (x=zone number) in the FB of zone management
      concerned at STAT level.
  B) Implement variables Sxraz and Sxfraz (x= zone number) in the GlobalDB
     ""ZxG "" to make the link with sub assembly containing the BF_CPT_PIECE.
  C) Implement the following networks in the FB of zone management ( FBx00):

 Network N:    Sxraz          ZxG.Sxraz
          -----¦ ¦-------------( )

 Network N+1: ZxG.Sxfraz       Sxraz
          -----¦ ¦------------( R )
  D) Implement the reseau following downstream the last BF_Cpt_pièce of the
     zone:  ZxG.Sxraz    ZxG.Sxfraz
          -----¦ ¦-----------( )
BF Input:
Raz_cpt = ZxG.Sxraz
Autcompt = ZxG.mauto (stemming from the BF zone Mode)
Comptage : the BF create the rising edge of the event.

BF Output:
Val_cour = Counter value defined under SMP (STAT level)

FAULT CODE:
************
Not used

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 4
Dernier ID mis en oeuvre / Last ID implemented : 2021_4
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"********************************************************************************
*                             BF CPT_PIECE                                     *
*                            COMPTAGE PIECES                                   *
*                             PART COUNTER                                     *
********************************************************************************
(In English futher below)

DESCRIPTION :
************
Assure le comptage des pièces avec visualisation de la présélection et de la
valeur en cours.

MISE EN OEUVRE :
****************
Le comptage pièce doit être associé au sous ensemble désigner sous ODIL comme
référence SMP.

Liens avec SMP :
- 1 BF par diversité déclarée sous SMP.
- La Raz des compteurs est réalisée par SMP :
  a) déclarer une variable Sxraz (x=Numéro de zone) dans le FB de gestion de la
     zone concernée au niveau STAT.
  b) déclarer les variables Sxraz et Sxfraz (x=Numéro de zone)dans le DB Global

   ""ZxG"" pour faire le lien avec les sous ensembles contenant les BF_CPT_PIECE.
  C)Mettre en oeuvre les réseaux suivants dans le FB de gestion de Zone(FBx00):

 Reseau N :  Sxraz         ZxG.Sxraz
        -----| |-------------( )

 Reseau N+1 : ZxG.Sxfraz    Sxraz
         -----| |------------(R)
  d) Mettre en oeuvre le reseau suivant en aval de la Dernièer BF_Cpt_pièce de
  la zone :
           ZxG.Sxraz   ZxG.Sxfraz
        -----| |-----------( )
Entrées du BF :
Raz_cpt = ZxG.Sxraz
Autcompt = ZxG.mauto ( issue de la BF zone Mode)
Comptage  : la BF gére le font montant de l'évènement.

Sortie du BF :
Val_cour = Variable de valeur de comptage définie sous SMP (niveau STAT)

CODE DEFAUT :
*************
Non utilisé

************************** ENGLISH INFORMATION *********************************
DESCRIPTION:
************
Insure the counting of parts with display of the preselection and the current
value.

OPERATING :
*********
The counting part must be associated to the Sub assembly indicated under ODIL
as
SMP references.

Links with SMP:
- 1 BF by diversity declared under SMP.
- Raz of counter is realized by SMP:
  A) Implement a variable Sxraz (x=zone number) in the FB of zone management
      concerned at STAT level.
  B) Implement variables Sxraz and Sxfraz (x= zone number) in the GlobalDB
     ""ZxG "" to make the link with sub assembly containing the BF_CPT_PIECE.
  C) Implement the following networks in the FB of zone management ( FBx00):

 Network N:    Sxraz          ZxG.Sxraz
          -----¦ ¦-------------( )

 Network N+1: ZxG.Sxfraz       Sxraz
          -----¦ ¦------------( R )
  D) Implement the reseau following downstream the last BF_Cpt_pièce of the
     zone:  ZxG.Sxraz    ZxG.Sxfraz
          -----¦ ¦-----------( )
BF Input:
Raz_cpt = ZxG.Sxraz
Autcompt = ZxG.mauto (stemming from the BF zone Mode)
Comptage : the BF create the rising edge of the event.

BF Output:
Val_cour = Counter value defined under SMP (STAT level)

FAULT CODE:
************
Not used

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 4
Dernier ID mis en oeuvre / Last ID implemented : 2021_4
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";""
"*******************************************************************************
*                       BF_API_MAITRE_CAL                                     *
*               Echanges Automate maitre <-> Calculateur                      *
*                                                                             *
*               Exchange between Master PLC <-> Server                        *
*******************************************************************************
( In English further below)

DESCRIPTION :
******
Ce bloc Fonctionnel prend en charge les echanges de donnees avec le systeme de
production.

Il s'occupe:
- de la mise a jour du bloc d'echange a partir des donnees issues
de l'application. (Tab_maj ->>> Tab_ech)

- du dialogue entre le calculateur et l'automate (Gestion des mots de
synchronisation des echanges).

- de la mise a jour des donnees utilisees par l'application en provenance
du calculateur. (Tab_ech ->>> Tab_acq)



MISE EN OEUVRE :
***************
A) DB Globale :

Ce FB utilise des Tables de donnees mise en oeuvre dans le DB SIPx
( voir exemple dans le DB89 au format Struct)

Ces Structs doivent etre personalisees en fonction du vehicule et du projet
vous devez faire confirmer les 4 structures par votre projet

Dans la structure programme Les Blocs DB89 a DB80 sont reserves a cette effet.
(Numerotation decroissante a respecter)

Le Nom symbolique des DB est SIP<x> avec x = 1 pour la premier liaison N2
(maxi 8 suivant le type dautomate).
le DB89 porte le Nom SIP1

B) utilisation des Structures dans le DB Globale

4 structures sont mises en oeuvre :
""NOMSE"" = entree BF ""Tab_ech"" pour Trame dechange entre Siptol et API
""NOMSEana"" = information SIPTOL pour animation des ecrans danalyses
""NOMSEacq"" = entree BF ""Tab_acq"" pour Donnees pouvant etre lues par API
""NOMSEmaj"" = entree BF ""Tab_maj"" pour Donnees pouvant etre ecrites par API

NOMSE doit etre remplace par le NOM du sous ensemble ou la BF est mise en oeuvre

Constitution de TAB_ECH dans l'ordre suivant :
 - VALAPI (Mot de gestion des echanges API --> Calculateur)
 - Les donnees (Informations de production equivalentes au contenue de TAB_acq
et TAB_maj)
 - N° de requete du calculateur (MOT)
 - VALCAL  (Mot de gestion des echanges Calculateur --> API)
 - Marche locale (Mot d'information du type de fonctionnement du mode)

Voir le guide de mise en oeuvre du bloc fonctionnel GE03.FP.216 pour plus
d'information.


C) ETAT INTERFACE :

Sortie Etat dial :
*VALAPI*VALCAL*ETATDIAL*DEFINITIONS
***********************************
*  0   *  0   *  10    * Dialogue non initialise
*  1   *  0   *  1     * Demande de dialogue avec Siptol
*  2   *  0   *  2     * Fin de l'attente de Siptol
*  3   *  0   *  3     * Dialogue en marche forcee
*  4   *  0   *  4     * Dialogue sur defaut d'identification
*  5   *  0   *  5     * Correction des donnees Siptol
*  0   *  1   *  6     * Reponse de Siptol
*  0   *  2   *  7     * Demande d'attente de Siptol
*  0   *  4   *  8     * Donnees erronees pour Siptol
* >5   *      *  11    * VALAPI et VALCAL non conformes


LISTE DES DEFAUTS :
******************
Sortie codedef :
1 = Defaut de parametrage
2 = Defaut caracteristiques
4 = Time-out liaison calculateur

************************** ENGLISH INFORMATION  ****************************

DESCRIPTION :
******
This Functional block takes care of the data exchanges with the production
control IT system.

It handles:
- the update of the exchange block from the data coming
the application. (Tab_maj - > > > Tab_ech)

- the dialog between the Server and the PLC
(Management of the exchanges words of synchronization).

- the update of the data used by the PLC from the Calculator.
 (Tab_ech - > > > Tab_acq)

OPERATING :
**********
A) Global Data :

This FB uses data tables that are implementated in the DB SIPx
 (see example in the DB 89 in Struct format)

Structs must be adapted to the vehicle and your project.
You have to make confirm the 4 struct by your project

In the S7 program structure, DB89 to DB80 are reserved in this effect.
( Lessening Numbering to be respected)

The symbolic Name of the DB is SIPx with x = 1 for the first
Link with N2_Ethernet Level (maxi 8 according to the type of PLC)
The Name of DB89 is SIP1

B) Use of the Structures in Global DB

4 structures are implemented:
""NOMSE""  = Tab_ech BF input for exchange frame between Siptol and PLC
""NOMSEana"" = SIPTOL information used by screen (HMI) and specified by siptol
""NOMSEacq"" = Tab_acq BF input for Data can be read by PLC
""NOMSEmaj"" = Tab_maj BF input for Data can be written by PLC

NOMSE must be replaced by the sub assembly NAME where the BF is operating

Constitution of TAB_ECH in the following order:
- VALAPI (Exchange management word PLC -> server)
- The data (Words of product data equivalent to TAB_acq and TAB_maj data)
- Server request number (NRcal WORD)
- VALCAL (Exchange management word server -> PLC)
- local Mode ( Flag_mdm Operating type information Word)

See the guide of implementation of the functional block GE03. FP.216
for more information.

C) Interface Status :

Etat_dial out:
*VALAPI*VALCAL*ETATDIAL* DEFINITIONS
***********************************
*  0   *  0   *   10   * not initialized Dialog
*  1   *  0   *   1    * Request of dialog with Siptol
*  2   *  0   *   2    * End of wait of Siptol
*  3   *  0   *   3    * Dialog on forced mode
*  4   *  0   *   4    * Dialog on identification (RFID) fault
*  5   *  0   *   5    * Correction of the Siptol data
*  0   *  1   *   6    * Siptol answer
*  0   *  2   *   7    * Wait request from Siptol
*  0   *  4   *   8    * Erroneous Data for Siptol
* > 5  *      *   11   * VALAPI and VALCAL not corresponding


FAULT LIST :
***********
Codedef Values :
 1 = parameter setting Fault
 2 = characteristics Fault
 4 = Server link Time-out

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 22
Dernier ID mis en oeuvre / Last ID implemented : 2031_22
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"*******************************************************************************
*                       BF_API_MAITRE_CAL                                     *
*               Echanges Automate maitre <-> Calculateur                      *
*                                                                             *
*               Exchange between Master PLC <-> Server                        *
*******************************************************************************
( In English further below)

DESCRIPTION :
******
Ce bloc Fonctionnel prend en charge les echanges de donnees avec le systeme de
production.

Il s'occupe:
- de la mise a jour du bloc d'echange a partir des donnees issues
de l'application. (Tab_maj ->>> Tab_ech)

- du dialogue entre le calculateur et l'automate (Gestion des mots de
synchronisation des echanges).

- de la mise a jour des donnees utilisees par l'application en provenance
du calculateur. (Tab_ech ->>> Tab_acq)



MISE EN OEUVRE :
***************
A) DB Globale :

Ce FB utilise des Tables de donnees mise en oeuvre dans le DB SIPx
( voir exemple dans le DB89 au format Struct)

Ces Structs doivent etre personalisees en fonction du vehicule et du projet
vous devez faire confirmer les 4 structures par votre projet

Dans la structure programme Les Blocs DB89 a DB80 sont reserves a cette effet.
(Numerotation decroissante a respecter)

Le Nom symbolique des DB est SIP<x> avec x = 1 pour la premier liaison N2
(maxi 8 suivant le type dautomate).
le DB89 porte le Nom SIP1

B) utilisation des Structures dans le DB Globale

4 structures sont mises en oeuvre :
""NOMSE"" = entree BF ""Tab_ech"" pour Trame dechange entre Siptol et API
""NOMSEana"" = information SIPTOL pour animation des ecrans danalyses
""NOMSEacq"" = entree BF ""Tab_acq"" pour Donnees pouvant etre lues par API
""NOMSEmaj"" = entree BF ""Tab_maj"" pour Donnees pouvant etre ecrites par API

NOMSE doit etre remplace par le NOM du sous ensemble ou la BF est mise en oeuvre

Constitution de TAB_ECH dans l'ordre suivant :
 - VALAPI (Mot de gestion des echanges API --> Calculateur)
 - Les donnees (Informations de production equivalentes au contenue de TAB_acq
et TAB_maj)
 - N° de requete du calculateur (MOT)
 - VALCAL  (Mot de gestion des echanges Calculateur --> API)
 - Marche locale (Mot d'information du type de fonctionnement du mode)

Voir le guide de mise en oeuvre du bloc fonctionnel GE03.FP.216 pour plus
d'information.


C) ETAT INTERFACE :

Sortie Etat dial :
*VALAPI*VALCAL*ETATDIAL*DEFINITIONS
***********************************
*  0   *  0   *  10    * Dialogue non initialise
*  1   *  0   *  1     * Demande de dialogue avec Siptol
*  2   *  0   *  2     * Fin de l'attente de Siptol
*  3   *  0   *  3     * Dialogue en marche forcee
*  4   *  0   *  4     * Dialogue sur defaut d'identification
*  5   *  0   *  5     * Correction des donnees Siptol
*  0   *  1   *  6     * Reponse de Siptol
*  0   *  2   *  7     * Demande d'attente de Siptol
*  0   *  4   *  8     * Donnees erronees pour Siptol
* >5   *      *  11    * VALAPI et VALCAL non conformes


LISTE DES DEFAUTS :
******************
Sortie codedef :
1 = Defaut de parametrage
2 = Defaut caracteristiques
4 = Time-out liaison calculateur

************************** ENGLISH INFORMATION  ****************************

DESCRIPTION :
******
This Functional block takes care of the data exchanges with the production
control IT system.

It handles:
- the update of the exchange block from the data coming
the application. (Tab_maj - > > > Tab_ech)

- the dialog between the Server and the PLC
(Management of the exchanges words of synchronization).

- the update of the data used by the PLC from the Calculator.
 (Tab_ech - > > > Tab_acq)

OPERATING :
**********
A) Global Data :

This FB uses data tables that are implementated in the DB SIPx
 (see example in the DB 89 in Struct format)

Structs must be adapted to the vehicle and your project.
You have to make confirm the 4 struct by your project

In the S7 program structure, DB89 to DB80 are reserved in this effect.
( Lessening Numbering to be respected)

The symbolic Name of the DB is SIPx with x = 1 for the first
Link with N2_Ethernet Level (maxi 8 according to the type of PLC)
The Name of DB89 is SIP1

B) Use of the Structures in Global DB

4 structures are implemented:
""NOMSE""  = Tab_ech BF input for exchange frame between Siptol and PLC
""NOMSEana"" = SIPTOL information used by screen (HMI) and specified by siptol
""NOMSEacq"" = Tab_acq BF input for Data can be read by PLC
""NOMSEmaj"" = Tab_maj BF input for Data can be written by PLC

NOMSE must be replaced by the sub assembly NAME where the BF is operating

Constitution of TAB_ECH in the following order:
- VALAPI (Exchange management word PLC -> server)
- The data (Words of product data equivalent to TAB_acq and TAB_maj data)
- Server request number (NRcal WORD)
- VALCAL (Exchange management word server -> PLC)
- local Mode ( Flag_mdm Operating type information Word)

See the guide of implementation of the functional block GE03. FP.216
for more information.

C) Interface Status :

Etat_dial out:
*VALAPI*VALCAL*ETATDIAL* DEFINITIONS
***********************************
*  0   *  0   *   10   * not initialized Dialog
*  1   *  0   *   1    * Request of dialog with Siptol
*  2   *  0   *   2    * End of wait of Siptol
*  3   *  0   *   3    * Dialog on forced mode
*  4   *  0   *   4    * Dialog on identification (RFID) fault
*  5   *  0   *   5    * Correction of the Siptol data
*  0   *  1   *   6    * Siptol answer
*  0   *  2   *   7    * Wait request from Siptol
*  0   *  4   *   8    * Erroneous Data for Siptol
* > 5  *      *   11   * VALAPI and VALCAL not corresponding


FAULT LIST :
***********
Codedef Values :
 1 = parameter setting Fault
 2 = characteristics Fault
 4 = Server link Time-out

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 22
Dernier ID mis en oeuvre / Last ID implemented : 2031_22
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"*******************************************************************************
*                       BF_API_MAITRE_CAL                                     *
*               Echanges Automate maitre <-> Calculateur                      *
*                                                                             *
*               Exchange between Master PLC <-> Server                        *
*******************************************************************************
( In English further below)

DESCRIPTION :
******
Ce bloc Fonctionnel prend en charge les echanges de donnees avec le systeme de
production.

Il s'occupe:
- de la mise a jour du bloc d'echange a partir des donnees issues
de l'application. (Tab_maj ->>> Tab_ech)

- du dialogue entre le calculateur et l'automate (Gestion des mots de
synchronisation des echanges).

- de la mise a jour des donnees utilisees par l'application en provenance
du calculateur. (Tab_ech ->>> Tab_acq)



MISE EN OEUVRE :
***************
A) DB Globale :

Ce FB utilise des Tables de donnees mise en oeuvre dans le DB SIPx
( voir exemple dans le DB89 au format Struct)

Ces Structs doivent etre personalisees en fonction du vehicule et du projet
vous devez faire confirmer les 4 structures par votre projet

Dans la structure programme Les Blocs DB89 a DB80 sont reserves a cette effet.
(Numerotation decroissante a respecter)

Le Nom symbolique des DB est SIP<x> avec x = 1 pour la premier liaison N2
(maxi 8 suivant le type dautomate).
le DB89 porte le Nom SIP1

B) utilisation des Structures dans le DB Globale

4 structures sont mises en oeuvre :
""NOMSE"" = entree BF ""Tab_ech"" pour Trame dechange entre Siptol et API
""NOMSEana"" = information SIPTOL pour animation des ecrans danalyses
""NOMSEacq"" = entree BF ""Tab_acq"" pour Donnees pouvant etre lues par API
""NOMSEmaj"" = entree BF ""Tab_maj"" pour Donnees pouvant etre ecrites par API

NOMSE doit etre remplace par le NOM du sous ensemble ou la BF est mise en oeuvre

Constitution de TAB_ECH dans l'ordre suivant :
 - VALAPI (Mot de gestion des echanges API --> Calculateur)
 - Les donnees (Informations de production equivalentes au contenue de TAB_acq
et TAB_maj)
 - N° de requete du calculateur (MOT)
 - VALCAL  (Mot de gestion des echanges Calculateur --> API)
 - Marche locale (Mot d'information du type de fonctionnement du mode)

Voir le guide de mise en oeuvre du bloc fonctionnel GE03.FP.216 pour plus
d'information.


C) ETAT INTERFACE :

Sortie Etat dial :
*VALAPI*VALCAL*ETATDIAL*DEFINITIONS
***********************************
*  0   *  0   *  10    * Dialogue non initialise
*  1   *  0   *  1     * Demande de dialogue avec Siptol
*  2   *  0   *  2     * Fin de l'attente de Siptol
*  3   *  0   *  3     * Dialogue en marche forcee
*  4   *  0   *  4     * Dialogue sur defaut d'identification
*  5   *  0   *  5     * Correction des donnees Siptol
*  0   *  1   *  6     * Reponse de Siptol
*  0   *  2   *  7     * Demande d'attente de Siptol
*  0   *  4   *  8     * Donnees erronees pour Siptol
* >5   *      *  11    * VALAPI et VALCAL non conformes


LISTE DES DEFAUTS :
******************
Sortie codedef :
1 = Defaut de parametrage
2 = Defaut caracteristiques
4 = Time-out liaison calculateur

************************** ENGLISH INFORMATION  ****************************

DESCRIPTION :
******
This Functional block takes care of the data exchanges with the production
control IT system.

It handles:
- the update of the exchange block from the data coming
the application. (Tab_maj - > > > Tab_ech)

- the dialog between the Server and the PLC
(Management of the exchanges words of synchronization).

- the update of the data used by the PLC from the Calculator.
 (Tab_ech - > > > Tab_acq)

OPERATING :
**********
A) Global Data :

This FB uses data tables that are implementated in the DB SIPx
 (see example in the DB 89 in Struct format)

Structs must be adapted to the vehicle and your project.
You have to make confirm the 4 struct by your project

In the S7 program structure, DB89 to DB80 are reserved in this effect.
( Lessening Numbering to be respected)

The symbolic Name of the DB is SIPx with x = 1 for the first
Link with N2_Ethernet Level (maxi 8 according to the type of PLC)
The Name of DB89 is SIP1

B) Use of the Structures in Global DB

4 structures are implemented:
""NOMSE""  = Tab_ech BF input for exchange frame between Siptol and PLC
""NOMSEana"" = SIPTOL information used by screen (HMI) and specified by siptol
""NOMSEacq"" = Tab_acq BF input for Data can be read by PLC
""NOMSEmaj"" = Tab_maj BF input for Data can be written by PLC

NOMSE must be replaced by the sub assembly NAME where the BF is operating

Constitution of TAB_ECH in the following order:
- VALAPI (Exchange management word PLC -> server)
- The data (Words of product data equivalent to TAB_acq and TAB_maj data)
- Server request number (NRcal WORD)
- VALCAL (Exchange management word server -> PLC)
- local Mode ( Flag_mdm Operating type information Word)

See the guide of implementation of the functional block GE03. FP.216
for more information.

C) Interface Status :

Etat_dial out:
*VALAPI*VALCAL*ETATDIAL* DEFINITIONS
***********************************
*  0   *  0   *   10   * not initialized Dialog
*  1   *  0   *   1    * Request of dialog with Siptol
*  2   *  0   *   2    * End of wait of Siptol
*  3   *  0   *   3    * Dialog on forced mode
*  4   *  0   *   4    * Dialog on identification (RFID) fault
*  5   *  0   *   5    * Correction of the Siptol data
*  0   *  1   *   6    * Siptol answer
*  0   *  2   *   7    * Wait request from Siptol
*  0   *  4   *   8    * Erroneous Data for Siptol
* > 5  *      *   11   * VALAPI and VALCAL not corresponding


FAULT LIST :
***********
Codedef Values :
 1 = parameter setting Fault
 2 = characteristics Fault
 4 = Server link Time-out

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 22
Dernier ID mis en oeuvre / Last ID implemented : 2031_22
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";""
"**********************************************************************
*                           BF_ACT_DESACT                            *
*      Assure l'activation / desactivation d'un groupe d'IODevice    *
*      Processes activation / deactivation of an IODevice group      *
**********************************************************************
In english further below
------------------------
DESCRIPTION:
************
La BF ACT_DESACT permet d'activer ou de desactiver un groupe d'IO DEVICE sur le
reseau PROFINET IO pendant le cycle machine ou lors d'operations de maintenance
sans provoquer de defaut Profinet.
Un groupe d'IO Device est un ensemble d'IODevice Profinet (de 1 a 16 IODevices
par groupe) actives / desactives lors de la meme action process par exemple pour

des IODevices Profinet montes en aval d'un changeur d'outil.

MISE EN OEUVRE :
****************
Prevoir une instance de BF_ACT_DESACT par groupe d'IOdevices Profinet a activer
/desactiver.

La demande de desactivation est prioritaire sur la demande d'activation.

Parametrage : les numeros d'appareil dans le groupe doivent etre consecutifs
(HWConfig).

Pour plus de details sur la mise en uvre de la fonctionnalite Fast Start-Up se
referer au guide de mise en uvre Profinet GE03.MO.160.

Mettre en oeuvre le bool Sysfroid dans l'ob1 et documenter l'entree SYSFROID du
Bloc (Voir Doc mise en oeuvre BF V3.0 mini)

Codes de defaut:
****************
En cas d'erreur de parametrage ""Diag.CodeDef"" prend la valeur:
0x827F si la valeur du parametre ""DevCnt"" n'est pas comprise entre 1 et 16
0x8095 si au moins un des modules du groupe n'existe pas dans la configuration
materielle
Pour les autres codes d'erreur, consulter la documentation des SFC 70 et SFC 12.

OBJET WINCC :
*************
ATTENTION :
L'objet Act-Desact FR_EN est a utilise uniquement que pour les ecrans de
maintenance.
Les entrees IhmDeaReq et IhmActReq sont reservees aux ecrans de maintenance
sous
Wincc pour permettre une activation desactivation d'un module sans condition
prealable.

- Liens entre Objet Wincc et Programme:
ZXG_Manu = Z$G.manu
Pilot_HmiActReq= <Nom du DB SE>.<Non Instance BF_Act_Desact>.Pilot.IhmActReq
Pilot_HmiDeaReq= <Nom du DB SE>.<Non Instance BF_Act_Desact>.Pilot.IhmDeaReq
Diag_HmiSts = <Nom du DB SE>.<Non Instance BF_Act_Desact>.Diag.IhmSts


******************************** English Information ***************************
DESCRIPTION:
************
The purpose of this BF ACT_DESACT is to activate or deactivate a ""group"" of
IODevices over PROFINET IO during machine cycle or during maintenance operation
without causing Profinet failure.
A group of IODevices is a set of Profinet IODevices (from 1 to 16 IODevices)
that are activated or deactivated while the same machine action for example for
Profinet IODevices located on a gripper downstream a tool changer.

OPERATING :
***********
Put one instance of BF_ACT_DESACT for each Profinet IODevice group to be
activated / deactivated.

Deactivation request is prioritary on activation request.

Parameter settings : Device number for IODevices must be contiguous (HWConfig).

For further details on implementation for Fast Start Up to refer to Profinet
installation guide GE03.MO.160.

Implement the sysfroid boolean in the OB1 and put it on the SYSFROID input of
the block (see the BF_Act_DESACT documentation in V3.0 mini)

CODES FAULT  :
****************
In case of error in parameter settings ""Diag.CodeDef"" is set with following
values :
0x827F if parameter ""DevCnt"" is not between 1 and 16
0x8095 if at least one IODevice of the group doesn't exists in the hardware
configuration.
For other error codes, refer to SFC70 and SFC12 documentation.

WINCC OBJECT :
*************
WARNING :
The ""Act_desact FR_EN"" Wincc Objet must be only used for Maintenance Screen.
The IhmDeaReq and IhmActReq inputs are reserved for maintenance screens under
Wincc to allow activation/deactivation of a module without prior conditions.

- Links between Wincc object and PLC code :
ZXG_Manu = Z$G.manu ($ =  Zone Number)
Pilot_HmiActReq =<DB Sub assembly ame>.<BF_Instance Name>.Pilot.IhmActReq
Pilot_HmiDeaReq= <DB Sub assembly Name>.<BF_Instance Name>.Pilot.IhmDeaRe
Diag_HmiSts = <DB Sub assembly Name>.<BF_Instance Name>.Diag.IhmSts

************************** ODIL _ID **************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 1
Dernier ID mis en oeuvre / Last ID implemented : 2033_1
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"**********************************************************************
*                           BF_ACT_DESACT                            *
*      Assure l'activation / desactivation d'un groupe d'IODevice    *
*      Processes activation / deactivation of an IODevice group      *
**********************************************************************
In english further below
------------------------
DESCRIPTION:
************
La BF ACT_DESACT permet d'activer ou de desactiver un groupe d'IO DEVICE sur le
reseau PROFINET IO pendant le cycle machine ou lors d'operations de maintenance
sans provoquer de defaut Profinet.
Un groupe d'IO Device est un ensemble d'IODevice Profinet (de 1 a 16 IODevices
par groupe) actives / desactives lors de la meme action process par exemple pour

des IODevices Profinet montes en aval d'un changeur d'outil.

MISE EN OEUVRE :
****************
Prevoir une instance de BF_ACT_DESACT par groupe d'IOdevices Profinet a activer
/desactiver.

La demande de desactivation est prioritaire sur la demande d'activation.

Parametrage : les numeros d'appareil dans le groupe doivent etre consecutifs
(HWConfig).

Pour plus de details sur la mise en uvre de la fonctionnalite Fast Start-Up se
referer au guide de mise en uvre Profinet GE03.MO.160.

Mettre en oeuvre le bool Sysfroid dans l'ob1 et documenter l'entree SYSFROID du
Bloc (Voir Doc mise en oeuvre BF V3.0 mini)

Codes de defaut:
****************
En cas d'erreur de parametrage ""Diag.CodeDef"" prend la valeur:
0x827F si la valeur du parametre ""DevCnt"" n'est pas comprise entre 1 et 16
0x8095 si au moins un des modules du groupe n'existe pas dans la configuration
materielle
Pour les autres codes d'erreur, consulter la documentation des SFC 70 et SFC 12.

OBJET WINCC :
*************
ATTENTION :
L'objet Act-Desact FR_EN est a utilise uniquement que pour les ecrans de
maintenance.
Les entrees IhmDeaReq et IhmActReq sont reservees aux ecrans de maintenance
sous
Wincc pour permettre une activation desactivation d'un module sans condition
prealable.

- Liens entre Objet Wincc et Programme:
ZXG_Manu = Z$G.manu
Pilot_HmiActReq= <Nom du DB SE>.<Non Instance BF_Act_Desact>.Pilot.IhmActReq
Pilot_HmiDeaReq= <Nom du DB SE>.<Non Instance BF_Act_Desact>.Pilot.IhmDeaReq
Diag_HmiSts = <Nom du DB SE>.<Non Instance BF_Act_Desact>.Diag.IhmSts


******************************** English Information ***************************
DESCRIPTION:
************
The purpose of this BF ACT_DESACT is to activate or deactivate a ""group"" of
IODevices over PROFINET IO during machine cycle or during maintenance operation
without causing Profinet failure.
A group of IODevices is a set of Profinet IODevices (from 1 to 16 IODevices)
that are activated or deactivated while the same machine action for example for
Profinet IODevices located on a gripper downstream a tool changer.

OPERATING :
***********
Put one instance of BF_ACT_DESACT for each Profinet IODevice group to be
activated / deactivated.

Deactivation request is prioritary on activation request.

Parameter settings : Device number for IODevices must be contiguous (HWConfig).

For further details on implementation for Fast Start Up to refer to Profinet
installation guide GE03.MO.160.

Implement the sysfroid boolean in the OB1 and put it on the SYSFROID input of
the block (see the BF_Act_DESACT documentation in V3.0 mini)

CODES FAULT  :
****************
In case of error in parameter settings ""Diag.CodeDef"" is set with following
values :
0x827F if parameter ""DevCnt"" is not between 1 and 16
0x8095 if at least one IODevice of the group doesn't exists in the hardware
configuration.
For other error codes, refer to SFC70 and SFC12 documentation.

WINCC OBJECT :
*************
WARNING :
The ""Act_desact FR_EN"" Wincc Objet must be only used for Maintenance Screen.
The IhmDeaReq and IhmActReq inputs are reserved for maintenance screens under
Wincc to allow activation/deactivation of a module without prior conditions.

- Links between Wincc object and PLC code :
ZXG_Manu = Z$G.manu ($ =  Zone Number)
Pilot_HmiActReq =<DB Sub assembly ame>.<BF_Instance Name>.Pilot.IhmActReq
Pilot_HmiDeaReq= <DB Sub assembly Name>.<BF_Instance Name>.Pilot.IhmDeaRe
Diag_HmiSts = <DB Sub assembly Name>.<BF_Instance Name>.Diag.IhmSts

************************** ODIL _ID **************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 1
Dernier ID mis en oeuvre / Last ID implemented : 2033_1
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"**********************************************************************
*                           BF_ACT_DESACT                            *
*      Assure l'activation / desactivation d'un groupe d'IODevice    *
*      Processes activation / deactivation of an IODevice group      *
**********************************************************************
In english further below
------------------------
DESCRIPTION:
************
La BF ACT_DESACT permet d'activer ou de desactiver un groupe d'IO DEVICE sur le
reseau PROFINET IO pendant le cycle machine ou lors d'operations de maintenance
sans provoquer de defaut Profinet.
Un groupe d'IO Device est un ensemble d'IODevice Profinet (de 1 a 16 IODevices
par groupe) actives / desactives lors de la meme action process par exemple pour

des IODevices Profinet montes en aval d'un changeur d'outil.

MISE EN OEUVRE :
****************
Prevoir une instance de BF_ACT_DESACT par groupe d'IOdevices Profinet a activer
/desactiver.

La demande de desactivation est prioritaire sur la demande d'activation.

Parametrage : les numeros d'appareil dans le groupe doivent etre consecutifs
(HWConfig).

Pour plus de details sur la mise en uvre de la fonctionnalite Fast Start-Up se
referer au guide de mise en uvre Profinet GE03.MO.160.

Mettre en oeuvre le bool Sysfroid dans l'ob1 et documenter l'entree SYSFROID du
Bloc (Voir Doc mise en oeuvre BF V3.0 mini)

Codes de defaut:
****************
En cas d'erreur de parametrage ""Diag.CodeDef"" prend la valeur:
0x827F si la valeur du parametre ""DevCnt"" n'est pas comprise entre 1 et 16
0x8095 si au moins un des modules du groupe n'existe pas dans la configuration
materielle
Pour les autres codes d'erreur, consulter la documentation des SFC 70 et SFC 12.

OBJET WINCC :
*************
ATTENTION :
L'objet Act-Desact FR_EN est a utilise uniquement que pour les ecrans de
maintenance.
Les entrees IhmDeaReq et IhmActReq sont reservees aux ecrans de maintenance
sous
Wincc pour permettre une activation desactivation d'un module sans condition
prealable.

- Liens entre Objet Wincc et Programme:
ZXG_Manu = Z$G.manu
Pilot_HmiActReq= <Nom du DB SE>.<Non Instance BF_Act_Desact>.Pilot.IhmActReq
Pilot_HmiDeaReq= <Nom du DB SE>.<Non Instance BF_Act_Desact>.Pilot.IhmDeaReq
Diag_HmiSts = <Nom du DB SE>.<Non Instance BF_Act_Desact>.Diag.IhmSts


******************************** English Information ***************************
DESCRIPTION:
************
The purpose of this BF ACT_DESACT is to activate or deactivate a ""group"" of
IODevices over PROFINET IO during machine cycle or during maintenance operation
without causing Profinet failure.
A group of IODevices is a set of Profinet IODevices (from 1 to 16 IODevices)
that are activated or deactivated while the same machine action for example for
Profinet IODevices located on a gripper downstream a tool changer.

OPERATING :
***********
Put one instance of BF_ACT_DESACT for each Profinet IODevice group to be
activated / deactivated.

Deactivation request is prioritary on activation request.

Parameter settings : Device number for IODevices must be contiguous (HWConfig).

For further details on implementation for Fast Start Up to refer to Profinet
installation guide GE03.MO.160.

Implement the sysfroid boolean in the OB1 and put it on the SYSFROID input of
the block (see the BF_Act_DESACT documentation in V3.0 mini)

CODES FAULT  :
****************
In case of error in parameter settings ""Diag.CodeDef"" is set with following
values :
0x827F if parameter ""DevCnt"" is not between 1 and 16
0x8095 if at least one IODevice of the group doesn't exists in the hardware
configuration.
For other error codes, refer to SFC70 and SFC12 documentation.

WINCC OBJECT :
*************
WARNING :
The ""Act_desact FR_EN"" Wincc Objet must be only used for Maintenance Screen.
The IhmDeaReq and IhmActReq inputs are reserved for maintenance screens under
Wincc to allow activation/deactivation of a module without prior conditions.

- Links between Wincc object and PLC code :
ZXG_Manu = Z$G.manu ($ =  Zone Number)
Pilot_HmiActReq =<DB Sub assembly ame>.<BF_Instance Name>.Pilot.IhmActReq
Pilot_HmiDeaReq= <DB Sub assembly Name>.<BF_Instance Name>.Pilot.IhmDeaRe
Diag_HmiSts = <DB Sub assembly Name>.<BF_Instance Name>.Diag.IhmSts

************************** ODIL _ID **************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 1
Dernier ID mis en oeuvre / Last ID implemented : 2033_1
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";""
"**********************************************************************
*                        BF_DIAG_PROFINET                            *
*     Assure le traitement du diagnostic des IOdevices Profinet      *
*         Processes the diagnostic of Profinet IODevices             *
**********************************************************************
(in english further below)
DESCRIPTION:
************
Ce FB assure le traitement du diagnostic des IOdevices Profinet

Version 1.3 Compatible avec le FW 2.7 des CPU 319F

MISE EN OEUVRE:
***************
1) Blocs associes :
- 1 DB d'instance ( DB 2036 ) DB_PN pour la BF_Diag_Profinet
- 1 DB Global (DB78) Conf_PN ( topologie reseau)uniquement si pupitre sans IHMP
  - Si le pupitre contient IHMP :
     Il faut mettre a 1 l'entree P_Ihmp, et le DB CONF_PN n'est pas necessaire.
  - Si le pupitre ne contient pas IHMP :
     Il faut mettre a 0 l'entree P_Ihmp, et le DB CONF_PN est necessaire sur
     l'entree DB_Config de la BF.
Pour la mise en oeuvre du DB78 voir detail dans la documentation
BF_Diag_Profinet

2) SFM :
Voir detail dans documentation BF_Diag_profinet

3) Appels dans la structure programme pour la fonction Diag_Profinet
3.1)Dans OB1 :
- Faire un Call du FB20 ""SFM_FB"" avec le DB75 ""SFM_DB"" pour instance
  avant l'appel du FC1 (FC Ilot)
- Dans FC1 : Faire un Call du FB1 (Gestion ilot) avec le DB1 ""I01"" pour instance
- Dans FB1 mettre en oeuvre la BF_Diag_Profinet FB2026 avec le DB 2036 ""DB_PN""
  pour instance

3.2) Dans OB100 :
- Mettre en oeuvre la BF_Diag_Profinet FB2026 avec le DB 2036 ""DB_PN"" pour
 instance (Seul les entrees DB_SFM et DB_Config sont a mettre en oeuvre)
3.3) Dans OB86 :
- Faire un Call du FB20 ""SFM_FB"" avec le DB75 ""SFM_DB"" pour instance
  avant de mettre en oeuvre la BF_Diag_Profinet FB2026 avec le DB 2036 ""DB_PN""

  pour instance (Seul les entrees DB_SFM et DB_Config sont a mettre en oeuvre)

CODE DEFAUT :
*************
Valeur de Diag.codedef :
1 = Defaut module I/O
257 = I/O configure present avec alarme

----------------------English information-------------------------------
DESCRIPTION:
************
This FB processes the diagnostic of Profinet IODevices.

Version 1.3 compatible with FW 2.7 of CPU319F

OPERATING :
***********
1) Blocks associate:
- 1 DB of instance(DB 2036) ""DB_PN"" for the BF_Diag_Profinet
- 1 Global DB (DB78) ""Conf_PN"" (Profinet network topology) only if panel without

  IHMP
 - If panel contains IHMP :
     It is necessary to put to 1 the P_Ihmp input, and the DB CONF_PN
     is not necessary.
  - If panel does not contain IHMP:
     It is necessary to put to 0 P_Ihmp input, and the DB CONF_PN
is necessary on the DB_Config imput of the BF.
For the implementation of the DB78 see detail in the documentation
BF_Diag_Profinet

2) SFM:
See detail in documentation BF_Diag_profinet

3) Calls in the structure progra) for the function Diag_Profinet
3.1) In OB1:
- Make Call of FB20 "" SFM_FB "" with the DB75 "" SFM_DB "" for instance before the
  call of the FC1 (Facility FC)
- In FC1: Make Call ofFB1 (Facility Management) with the DB1 ""I01"" for instance
- In FB1 operate the BF_Diag_Profinet FB2026 with the DB 2036 ""DB_PN"" for
 instance

3.2) In OB100:
- Operate the BF_Diag_Profinet FB2026 with the DB 2036 ""DB_PN"" for Instance
(  Warning : Only DB_SFM and DB_config Input must be used)
3.3) In OB86:
- Make Call du FB20 "" SFM_FB "" with the DB75 "" SFM_DB "" for instance before
operating BF_Diag_Profinet FB2026 with the DB 2036 ""DB_PN"" for instance
  (Warning : Only DB_SFM and DB_config Input must be used)

FAULT CODE :
************
Values of Diag.codedef :
1 = Profinet I/O module in fault
257 = Profinet I/O module configured is present with an alarm

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 41
Dernier ID mis en oeuvre / Last ID implemented : 2036_41
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"**********************************************************************
*                        BF_DIAG_PROFINET                            *
*     Assure le traitement du diagnostic des IOdevices Profinet      *
*         Processes the diagnostic of Profinet IODevices             *
**********************************************************************
(in english further below)
DESCRIPTION:
************
Ce FB assure le traitement du diagnostic des IOdevices Profinet

Version 1.3 Compatible avec le FW 2.7 des CPU 319F

MISE EN OEUVRE:
***************
1) Blocs associes :
- 1 DB d'instance ( DB 2036 ) DB_PN pour la BF_Diag_Profinet
- 1 DB Global (DB78) Conf_PN ( topologie reseau)uniquement si pupitre sans IHMP
  - Si le pupitre contient IHMP :
     Il faut mettre a 1 l'entree P_Ihmp, et le DB CONF_PN n'est pas necessaire.
  - Si le pupitre ne contient pas IHMP :
     Il faut mettre a 0 l'entree P_Ihmp, et le DB CONF_PN est necessaire sur
     l'entree DB_Config de la BF.
Pour la mise en oeuvre du DB78 voir detail dans la documentation
BF_Diag_Profinet

2) SFM :
Voir detail dans documentation BF_Diag_profinet

3) Appels dans la structure programme pour la fonction Diag_Profinet
3.1)Dans OB1 :
- Faire un Call du FB20 ""SFM_FB"" avec le DB75 ""SFM_DB"" pour instance
  avant l'appel du FC1 (FC Ilot)
- Dans FC1 : Faire un Call du FB1 (Gestion ilot) avec le DB1 ""I01"" pour instance
- Dans FB1 mettre en oeuvre la BF_Diag_Profinet FB2026 avec le DB 2036 ""DB_PN""
  pour instance

3.2) Dans OB100 :
- Mettre en oeuvre la BF_Diag_Profinet FB2026 avec le DB 2036 ""DB_PN"" pour
 instance (Seul les entrees DB_SFM et DB_Config sont a mettre en oeuvre)
3.3) Dans OB86 :
- Faire un Call du FB20 ""SFM_FB"" avec le DB75 ""SFM_DB"" pour instance
  avant de mettre en oeuvre la BF_Diag_Profinet FB2026 avec le DB 2036 ""DB_PN""

  pour instance (Seul les entrees DB_SFM et DB_Config sont a mettre en oeuvre)

CODE DEFAUT :
*************
Valeur de Diag.codedef :
1 = Defaut module I/O
257 = I/O configure present avec alarme

----------------------English information-------------------------------
DESCRIPTION:
************
This FB processes the diagnostic of Profinet IODevices.

Version 1.3 compatible with FW 2.7 of CPU319F

OPERATING :
***********
1) Blocks associate:
- 1 DB of instance(DB 2036) ""DB_PN"" for the BF_Diag_Profinet
- 1 Global DB (DB78) ""Conf_PN"" (Profinet network topology) only if panel without

  IHMP
 - If panel contains IHMP :
     It is necessary to put to 1 the P_Ihmp input, and the DB CONF_PN
     is not necessary.
  - If panel does not contain IHMP:
     It is necessary to put to 0 P_Ihmp input, and the DB CONF_PN
is necessary on the DB_Config imput of the BF.
For the implementation of the DB78 see detail in the documentation
BF_Diag_Profinet

2) SFM:
See detail in documentation BF_Diag_profinet

3) Calls in the structure progra) for the function Diag_Profinet
3.1) In OB1:
- Make Call of FB20 "" SFM_FB "" with the DB75 "" SFM_DB "" for instance before the
  call of the FC1 (Facility FC)
- In FC1: Make Call ofFB1 (Facility Management) with the DB1 ""I01"" for instance
- In FB1 operate the BF_Diag_Profinet FB2026 with the DB 2036 ""DB_PN"" for
 instance

3.2) In OB100:
- Operate the BF_Diag_Profinet FB2026 with the DB 2036 ""DB_PN"" for Instance
(  Warning : Only DB_SFM and DB_config Input must be used)
3.3) In OB86:
- Make Call du FB20 "" SFM_FB "" with the DB75 "" SFM_DB "" for instance before
operating BF_Diag_Profinet FB2026 with the DB 2036 ""DB_PN"" for instance
  (Warning : Only DB_SFM and DB_config Input must be used)

FAULT CODE :
************
Values of Diag.codedef :
1 = Profinet I/O module in fault
257 = Profinet I/O module configured is present with an alarm

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 41
Dernier ID mis en oeuvre / Last ID implemented : 2036_41
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"**********************************************************************
*                        BF_DIAG_PROFINET                            *
*     Assure le traitement du diagnostic des IOdevices Profinet      *
*         Processes the diagnostic of Profinet IODevices             *
**********************************************************************
(in english further below)
DESCRIPTION:
************
Ce FB assure le traitement du diagnostic des IOdevices Profinet

Version 1.3 Compatible avec le FW 2.7 des CPU 319F

MISE EN OEUVRE:
***************
1) Blocs associes :
- 1 DB d'instance ( DB 2036 ) DB_PN pour la BF_Diag_Profinet
- 1 DB Global (DB78) Conf_PN ( topologie reseau)uniquement si pupitre sans IHMP
  - Si le pupitre contient IHMP :
     Il faut mettre a 1 l'entree P_Ihmp, et le DB CONF_PN n'est pas necessaire.
  - Si le pupitre ne contient pas IHMP :
     Il faut mettre a 0 l'entree P_Ihmp, et le DB CONF_PN est necessaire sur
     l'entree DB_Config de la BF.
Pour la mise en oeuvre du DB78 voir detail dans la documentation
BF_Diag_Profinet

2) SFM :
Voir detail dans documentation BF_Diag_profinet

3) Appels dans la structure programme pour la fonction Diag_Profinet
3.1)Dans OB1 :
- Faire un Call du FB20 ""SFM_FB"" avec le DB75 ""SFM_DB"" pour instance
  avant l'appel du FC1 (FC Ilot)
- Dans FC1 : Faire un Call du FB1 (Gestion ilot) avec le DB1 ""I01"" pour instance
- Dans FB1 mettre en oeuvre la BF_Diag_Profinet FB2026 avec le DB 2036 ""DB_PN""
  pour instance

3.2) Dans OB100 :
- Mettre en oeuvre la BF_Diag_Profinet FB2026 avec le DB 2036 ""DB_PN"" pour
 instance (Seul les entrees DB_SFM et DB_Config sont a mettre en oeuvre)
3.3) Dans OB86 :
- Faire un Call du FB20 ""SFM_FB"" avec le DB75 ""SFM_DB"" pour instance
  avant de mettre en oeuvre la BF_Diag_Profinet FB2026 avec le DB 2036 ""DB_PN""

  pour instance (Seul les entrees DB_SFM et DB_Config sont a mettre en oeuvre)

CODE DEFAUT :
*************
Valeur de Diag.codedef :
1 = Defaut module I/O
257 = I/O configure present avec alarme

----------------------English information-------------------------------
DESCRIPTION:
************
This FB processes the diagnostic of Profinet IODevices.

Version 1.3 compatible with FW 2.7 of CPU319F

OPERATING :
***********
1) Blocks associate:
- 1 DB of instance(DB 2036) ""DB_PN"" for the BF_Diag_Profinet
- 1 Global DB (DB78) ""Conf_PN"" (Profinet network topology) only if panel without

  IHMP
 - If panel contains IHMP :
     It is necessary to put to 1 the P_Ihmp input, and the DB CONF_PN
     is not necessary.
  - If panel does not contain IHMP:
     It is necessary to put to 0 P_Ihmp input, and the DB CONF_PN
is necessary on the DB_Config imput of the BF.
For the implementation of the DB78 see detail in the documentation
BF_Diag_Profinet

2) SFM:
See detail in documentation BF_Diag_profinet

3) Calls in the structure progra) for the function Diag_Profinet
3.1) In OB1:
- Make Call of FB20 "" SFM_FB "" with the DB75 "" SFM_DB "" for instance before the
  call of the FC1 (Facility FC)
- In FC1: Make Call ofFB1 (Facility Management) with the DB1 ""I01"" for instance
- In FB1 operate the BF_Diag_Profinet FB2026 with the DB 2036 ""DB_PN"" for
 instance

3.2) In OB100:
- Operate the BF_Diag_Profinet FB2026 with the DB 2036 ""DB_PN"" for Instance
(  Warning : Only DB_SFM and DB_config Input must be used)
3.3) In OB86:
- Make Call du FB20 "" SFM_FB "" with the DB75 "" SFM_DB "" for instance before
operating BF_Diag_Profinet FB2026 with the DB 2036 ""DB_PN"" for instance
  (Warning : Only DB_SFM and DB_config Input must be used)

FAULT CODE :
************
Values of Diag.codedef :
1 = Profinet I/O module in fault
257 = Profinet I/O module configured is present with an alarm

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 41
Dernier ID mis en oeuvre / Last ID implemented : 2036_41
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";""
"**************************************************************************
*                            BF TF_TP                                    *
*                            ********                                    *
*             Transfert de table de memoires pieces                      *
*             Transfer of Part memory (word) table                       *
**************************************************************************
 ( In English further below)

DESCRIPTION:  LE BF ""TF_TP"" PERMET D'EFFECTUER SI  ""VAL"" EST ACTIVEE:
************
             -LA RECOPIE D'UN NOMBRE DE BITS DE ""MEMOIRE PIECE"" CONSECUTIF
              (STRUCT ""ORIGINE"" ===> STRUCT ""DESTINATION"")
              SI LA STRUCT  ""ORIGINE""  EST CHARGE ET LA STRUCT ""DESTINATION""
              LIBRE.
             -LA REMISE A ZERO DE LA STRUCT ""ORIGINE"" APRES LA RECOPIE DANS
              LA  STRUCT ""DESTINATION"".

           PERMET QUELQUE SOIT L'ETAT DE LA ""VALIDATION"":
             -LA RAZ STRUCT ""ORIGINE"" SI LE BIT ""MpP"" (1er BIT DE LA STRUCT)
               EST A 0 (DANS LE BUT DE FACILITER LE RECYCLAGE).
             -LA RAZ DE LA STRUCT DESTINATION SUR FRONT MONTANT DE RAZ_DEST
             -LA RECOPIE DES ENTREES PILOT DANS DIAG SANS CONTROLE DU BIT ""MPP""

Mise en Oeuvre:
**************
- Les informations a transferer de ""Orig"" vers ""Dest"" doivent etres declarees
dans un seul et meme DB.
- La taille de la table des mémoires pièce doit être égale à 20 Mots pour chaque

sous ensemble
- 1 table par sous ensemble au format struct
- le premier mot de la table doit obligatoirement etre au format de 16 bools
- le 1er bool (adresse 0.0) de la struct doit obligatoirement etre l'image de la

présence pièce (Mpp)
- le nom de la structure = nom du sous ensemble
- Le nb de bool a transferer d'une mémoire a une autre est a documenter sur
l'entree ""Nbit1"" de la BF pour le 1er mot de la struct et ""Nbit2"" de la BF pour
le 2eme mot de la struct.
- Il est impossible de documenter des valeurs dans la table si le
1er bool n'est pas à 1 ( Reset automatique de la memoire).
Donc, vous devez declarer l'information Mpp en premier pour documenter
les valeurs des autres informations pour la creation de la premiere memoire de
l'ilot.
- l'entree ""raz_dest"" permet de reseter la mémoire de destination sur la
derniere utilisation de la BF dans le programme ( dernier sous ensemble)

-Il ne faut pas rajouter ou supprimer des variables dans cette BF
car nous utilisons des valeurs absolues de variables temporaires et les Adresse
des variables dans le BF. en cas d'evolution les nouvelles variables doivent
obligatoirement etre d'eclarees a la suite pour tout type E/S,Stat et Temp.

Codes d'erreur:
***************
Diag.CodeDef:
1 = Destination <> 0 (pas vide)et bit 0 source a 1(transfert STRUCT piece
    demande)
2 = Nombre de nbit1 ou nbit2 < 1 ou > 16
4 = Erreur de Parametrage Orig
          Origine n'est pas dans un DB
          Origine n'est pas egale a 20 WORD
8 = Erreur de Parametrage Dest
          Destination n'est pas dans un DB
          Destination n'est pas egale a 20 WORD
16 = Origine et Destination ne sont pas dans le meme DB
************************** ENGLISH INFORMATION  ****************************
DESCRIPTION :
*************
THE FB Block ""BF_TF_TP "" handles the following operations :
       WHEN THE VALIDATION ""VAL"" IS ACTIVATED:
             - THE COPY OF CONSECUTIVE NUMBER OF BOOLS OF "" MEMORY PART ""
              (STRUCT ""ORIG"" to STRUCT ""DEST""),
              IF THE STRUCT ""ORIG"" IS LOADED AND THE STRUCT ""DEST"" IS FREE.
             - THE RESET OF THE STRUCT ""ORIG"" AFTER THE COPY IN
                THE STRUCT ""DEST"".

       WHATEVER VALIDATION STATUS IS :
             - The RESET OF STRUCT ""ORIG"" IF THE bool "" MPP ""(1st bool OF THE
              STRUCT) IS FALSE (TO EASE RECYCLING).
             - The RESET OF THE STRUCT ""DEST"" ON RISING EDGE OF ""RAZ_DEST""
             - The COPY OF THE Input ""PILOT"" TO THE OUTPUT ""DIAG""
               WITHOUT CONTROL OF the BOOL"" MPP ""
OPERATING:
***********
- The data to be transferred from ""Orig"" to ""Dest"" must be declared in the same
DB.
- The size of the table must be equal to 20 Words for each sub-assembly
- One table for each sub-assembly in Struct type:
  - The first word of the table in the struct must be created with 16 bools
  - The First bool (0.0 address) of the struct must be the part presence memory
  (Mpp)
  - Struct name = sub-assembly symbolic name
- The number of bool that can be transferred must be documented in the FB input

""NBit1"" for the first word and in the ""NBit2"" input for the second word
- It's impossible to modify any value of the table if the first bool
is not set (Table Automatic Reset)
So for the first sub-assembly you must set to 1 Mpp or Mps at first before
modifying the others bool values.
- ""raz_dest"" input is used for reset the last destination memory of the last
sub-assembly

- The existing variables in this BF must not be moved or deleted in header,
because we use the absolute values of the variables and the variable addresses
in the FB.
In case of changes the new variables MUST be declared consecutively for
all I/O, Stat and Temp types.

Alarm list:
************
1 = Destination <> 0 (not empty) and origin bit 0 is set (STRUCT Table transfer
    is requested
2 = Bit number of nbit1 or nbit2 is < 1 or > 16
4 = Parameter fault on Orig
          Origin is not in a DB
          Origin is not equal to 20 WORDS
8 = Parameter fault on Dest
          Destination is not in a DB
          Destination is not equal to 20 WORDS
16 = Origin and Destination are not in the same DB

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 56
Dernier ID mis en oeuvre / Last ID implemented : 2037_56
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"**************************************************************************
*                            BF TF_TP                                    *
*                            ********                                    *
*             Transfert de table de memoires pieces                      *
*             Transfer of Part memory (word) table                       *
**************************************************************************
 ( In English further below)

DESCRIPTION:  LE BF ""TF_TP"" PERMET D'EFFECTUER SI  ""VAL"" EST ACTIVEE:
************
             -LA RECOPIE D'UN NOMBRE DE BITS DE ""MEMOIRE PIECE"" CONSECUTIF
              (STRUCT ""ORIGINE"" ===> STRUCT ""DESTINATION"")
              SI LA STRUCT  ""ORIGINE""  EST CHARGE ET LA STRUCT ""DESTINATION""
              LIBRE.
             -LA REMISE A ZERO DE LA STRUCT ""ORIGINE"" APRES LA RECOPIE DANS
              LA  STRUCT ""DESTINATION"".

           PERMET QUELQUE SOIT L'ETAT DE LA ""VALIDATION"":
             -LA RAZ STRUCT ""ORIGINE"" SI LE BIT ""MpP"" (1er BIT DE LA STRUCT)
               EST A 0 (DANS LE BUT DE FACILITER LE RECYCLAGE).
             -LA RAZ DE LA STRUCT DESTINATION SUR FRONT MONTANT DE RAZ_DEST
             -LA RECOPIE DES ENTREES PILOT DANS DIAG SANS CONTROLE DU BIT ""MPP""

Mise en Oeuvre:
**************
- Les informations a transferer de ""Orig"" vers ""Dest"" doivent etres declarees
dans un seul et meme DB.
- La taille de la table des mémoires pièce doit être égale à 20 Mots pour chaque

sous ensemble
- 1 table par sous ensemble au format struct
- le premier mot de la table doit obligatoirement etre au format de 16 bools
- le 1er bool (adresse 0.0) de la struct doit obligatoirement etre l'image de la

présence pièce (Mpp)
- le nom de la structure = nom du sous ensemble
- Le nb de bool a transferer d'une mémoire a une autre est a documenter sur
l'entree ""Nbit1"" de la BF pour le 1er mot de la struct et ""Nbit2"" de la BF pour
le 2eme mot de la struct.
- Il est impossible de documenter des valeurs dans la table si le
1er bool n'est pas à 1 ( Reset automatique de la memoire).
Donc, vous devez declarer l'information Mpp en premier pour documenter
les valeurs des autres informations pour la creation de la premiere memoire de
l'ilot.
- l'entree ""raz_dest"" permet de reseter la mémoire de destination sur la
derniere utilisation de la BF dans le programme ( dernier sous ensemble)

-Il ne faut pas rajouter ou supprimer des variables dans cette BF
car nous utilisons des valeurs absolues de variables temporaires et les Adresse
des variables dans le BF. en cas d'evolution les nouvelles variables doivent
obligatoirement etre d'eclarees a la suite pour tout type E/S,Stat et Temp.

Codes d'erreur:
***************
Diag.CodeDef:
1 = Destination <> 0 (pas vide)et bit 0 source a 1(transfert STRUCT piece
    demande)
2 = Nombre de nbit1 ou nbit2 < 1 ou > 16
4 = Erreur de Parametrage Orig
          Origine n'est pas dans un DB
          Origine n'est pas egale a 20 WORD
8 = Erreur de Parametrage Dest
          Destination n'est pas dans un DB
          Destination n'est pas egale a 20 WORD
16 = Origine et Destination ne sont pas dans le meme DB
************************** ENGLISH INFORMATION  ****************************
DESCRIPTION :
*************
THE FB Block ""BF_TF_TP "" handles the following operations :
       WHEN THE VALIDATION ""VAL"" IS ACTIVATED:
             - THE COPY OF CONSECUTIVE NUMBER OF BOOLS OF "" MEMORY PART ""
              (STRUCT ""ORIG"" to STRUCT ""DEST""),
              IF THE STRUCT ""ORIG"" IS LOADED AND THE STRUCT ""DEST"" IS FREE.
             - THE RESET OF THE STRUCT ""ORIG"" AFTER THE COPY IN
                THE STRUCT ""DEST"".

       WHATEVER VALIDATION STATUS IS :
             - The RESET OF STRUCT ""ORIG"" IF THE bool "" MPP ""(1st bool OF THE
              STRUCT) IS FALSE (TO EASE RECYCLING).
             - The RESET OF THE STRUCT ""DEST"" ON RISING EDGE OF ""RAZ_DEST""
             - The COPY OF THE Input ""PILOT"" TO THE OUTPUT ""DIAG""
               WITHOUT CONTROL OF the BOOL"" MPP ""
OPERATING:
***********
- The data to be transferred from ""Orig"" to ""Dest"" must be declared in the same
DB.
- The size of the table must be equal to 20 Words for each sub-assembly
- One table for each sub-assembly in Struct type:
  - The first word of the table in the struct must be created with 16 bools
  - The First bool (0.0 address) of the struct must be the part presence memory
  (Mpp)
  - Struct name = sub-assembly symbolic name
- The number of bool that can be transferred must be documented in the FB input

""NBit1"" for the first word and in the ""NBit2"" input for the second word
- It's impossible to modify any value of the table if the first bool
is not set (Table Automatic Reset)
So for the first sub-assembly you must set to 1 Mpp or Mps at first before
modifying the others bool values.
- ""raz_dest"" input is used for reset the last destination memory of the last
sub-assembly

- The existing variables in this BF must not be moved or deleted in header,
because we use the absolute values of the variables and the variable addresses
in the FB.
In case of changes the new variables MUST be declared consecutively for
all I/O, Stat and Temp types.

Alarm list:
************
1 = Destination <> 0 (not empty) and origin bit 0 is set (STRUCT Table transfer
    is requested
2 = Bit number of nbit1 or nbit2 is < 1 or > 16
4 = Parameter fault on Orig
          Origin is not in a DB
          Origin is not equal to 20 WORDS
8 = Parameter fault on Dest
          Destination is not in a DB
          Destination is not equal to 20 WORDS
16 = Origin and Destination are not in the same DB

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 56
Dernier ID mis en oeuvre / Last ID implemented : 2037_56
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"**************************************************************************
*                            BF TF_TP                                    *
*                            ********                                    *
*             Transfert de table de memoires pieces                      *
*             Transfer of Part memory (word) table                       *
**************************************************************************
 ( In English further below)

DESCRIPTION:  LE BF ""TF_TP"" PERMET D'EFFECTUER SI  ""VAL"" EST ACTIVEE:
************
             -LA RECOPIE D'UN NOMBRE DE BITS DE ""MEMOIRE PIECE"" CONSECUTIF
              (STRUCT ""ORIGINE"" ===> STRUCT ""DESTINATION"")
              SI LA STRUCT  ""ORIGINE""  EST CHARGE ET LA STRUCT ""DESTINATION""
              LIBRE.
             -LA REMISE A ZERO DE LA STRUCT ""ORIGINE"" APRES LA RECOPIE DANS
              LA  STRUCT ""DESTINATION"".

           PERMET QUELQUE SOIT L'ETAT DE LA ""VALIDATION"":
             -LA RAZ STRUCT ""ORIGINE"" SI LE BIT ""MpP"" (1er BIT DE LA STRUCT)
               EST A 0 (DANS LE BUT DE FACILITER LE RECYCLAGE).
             -LA RAZ DE LA STRUCT DESTINATION SUR FRONT MONTANT DE RAZ_DEST
             -LA RECOPIE DES ENTREES PILOT DANS DIAG SANS CONTROLE DU BIT ""MPP""

Mise en Oeuvre:
**************
- Les informations a transferer de ""Orig"" vers ""Dest"" doivent etres declarees
dans un seul et meme DB.
- La taille de la table des mémoires pièce doit être égale à 20 Mots pour chaque

sous ensemble
- 1 table par sous ensemble au format struct
- le premier mot de la table doit obligatoirement etre au format de 16 bools
- le 1er bool (adresse 0.0) de la struct doit obligatoirement etre l'image de la

présence pièce (Mpp)
- le nom de la structure = nom du sous ensemble
- Le nb de bool a transferer d'une mémoire a une autre est a documenter sur
l'entree ""Nbit1"" de la BF pour le 1er mot de la struct et ""Nbit2"" de la BF pour
le 2eme mot de la struct.
- Il est impossible de documenter des valeurs dans la table si le
1er bool n'est pas à 1 ( Reset automatique de la memoire).
Donc, vous devez declarer l'information Mpp en premier pour documenter
les valeurs des autres informations pour la creation de la premiere memoire de
l'ilot.
- l'entree ""raz_dest"" permet de reseter la mémoire de destination sur la
derniere utilisation de la BF dans le programme ( dernier sous ensemble)

-Il ne faut pas rajouter ou supprimer des variables dans cette BF
car nous utilisons des valeurs absolues de variables temporaires et les Adresse
des variables dans le BF. en cas d'evolution les nouvelles variables doivent
obligatoirement etre d'eclarees a la suite pour tout type E/S,Stat et Temp.

Codes d'erreur:
***************
Diag.CodeDef:
1 = Destination <> 0 (pas vide)et bit 0 source a 1(transfert STRUCT piece
    demande)
2 = Nombre de nbit1 ou nbit2 < 1 ou > 16
4 = Erreur de Parametrage Orig
          Origine n'est pas dans un DB
          Origine n'est pas egale a 20 WORD
8 = Erreur de Parametrage Dest
          Destination n'est pas dans un DB
          Destination n'est pas egale a 20 WORD
16 = Origine et Destination ne sont pas dans le meme DB
************************** ENGLISH INFORMATION  ****************************
DESCRIPTION :
*************
THE FB Block ""BF_TF_TP "" handles the following operations :
       WHEN THE VALIDATION ""VAL"" IS ACTIVATED:
             - THE COPY OF CONSECUTIVE NUMBER OF BOOLS OF "" MEMORY PART ""
              (STRUCT ""ORIG"" to STRUCT ""DEST""),
              IF THE STRUCT ""ORIG"" IS LOADED AND THE STRUCT ""DEST"" IS FREE.
             - THE RESET OF THE STRUCT ""ORIG"" AFTER THE COPY IN
                THE STRUCT ""DEST"".

       WHATEVER VALIDATION STATUS IS :
             - The RESET OF STRUCT ""ORIG"" IF THE bool "" MPP ""(1st bool OF THE
              STRUCT) IS FALSE (TO EASE RECYCLING).
             - The RESET OF THE STRUCT ""DEST"" ON RISING EDGE OF ""RAZ_DEST""
             - The COPY OF THE Input ""PILOT"" TO THE OUTPUT ""DIAG""
               WITHOUT CONTROL OF the BOOL"" MPP ""
OPERATING:
***********
- The data to be transferred from ""Orig"" to ""Dest"" must be declared in the same
DB.
- The size of the table must be equal to 20 Words for each sub-assembly
- One table for each sub-assembly in Struct type:
  - The first word of the table in the struct must be created with 16 bools
  - The First bool (0.0 address) of the struct must be the part presence memory
  (Mpp)
  - Struct name = sub-assembly symbolic name
- The number of bool that can be transferred must be documented in the FB input

""NBit1"" for the first word and in the ""NBit2"" input for the second word
- It's impossible to modify any value of the table if the first bool
is not set (Table Automatic Reset)
So for the first sub-assembly you must set to 1 Mpp or Mps at first before
modifying the others bool values.
- ""raz_dest"" input is used for reset the last destination memory of the last
sub-assembly

- The existing variables in this BF must not be moved or deleted in header,
because we use the absolute values of the variables and the variable addresses
in the FB.
In case of changes the new variables MUST be declared consecutively for
all I/O, Stat and Temp types.

Alarm list:
************
1 = Destination <> 0 (not empty) and origin bit 0 is set (STRUCT Table transfer
    is requested
2 = Bit number of nbit1 or nbit2 is < 1 or > 16
4 = Parameter fault on Orig
          Origin is not in a DB
          Origin is not equal to 20 WORDS
8 = Parameter fault on Dest
          Destination is not in a DB
          Destination is not equal to 20 WORDS
16 = Origin and Destination are not in the same DB

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 56
Dernier ID mis en oeuvre / Last ID implemented : 2037_56
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";""
"*******************************************************************************
*                               FB ""MVSE2P1""                                  *
* ASSURE LA COMMANDE DE MOUVEMENT SIMPLE EFFET 2 POSITIONS EXCLUSIVEMENT      *
*                     (Avec ou sans Commande Bimanuel)                        *

*                                                                             *
*       EXECUTES THE COMMANDE FOR A SIMPLE EFFECT MOUVEMENT WITH 2 POSITIONS  *
*                   (with or without 2-hand control)                          *
*******************************************************************************
( In English further below)
DESCRIPTION:
************
   - gestion des ordres de commande suivant les modes:
       Auto, Manu reglage, Auto Pas a Pas, Auto Retour Origine de Cycle
        (positionnes sur les bits du mot lien pupitre LIEN_PUP)
   - gestion de l'ordre de commande suivant l'etat de la fonction
       (positionnees sur les bits du mot fonction MF)
   - gestion des voyants particuliers
   - gestion des voyants communs
   - mesure du temps d'execution du mouvement et comparaison avec un temps
       de reference enregistre. Activation d'une alerte et d'un defaut


MISE EN OEUVRE :
*************
Utilise :
l' UDT 1988 Lien_Pup ( les information sont generees par la BF_Zone_Mode)
l'UDT 2042 Mot_Fonc (Information a generer en amont de la BF)
Gestion des mouvements en Mode Manuel :
Par defaut la BF fonctionne pour une commande de mouvement dans une zone fermee
sans risque operateur
Pour une utilisation avec commande Bimanuelle, l'information BIM contenue dans
le Mot fonction MF doit etre Maintenue a 1 en amont de la BF pour visualiser la
position du mouvement sur l'ecran et permettre la selection du sens du
mouvement

Les temps de references doivent etre associes au DB $98 de la zone (Z$T)
($ = Numero de la zone)

L'entree COM doit etre mise en uvre avec l'information de commun electrique
issue du programme Safety
Pour les mouvements en zone fermee = info safety de la zone fermee ""TNI"".Z$FZ_OK
Pour les mouvements avec commande bimanuelle = Info safety de securite
operateur
""TRI"".<NomSE>SOP_OK

LISTE DES DEFAUT :
***************
Valeur de codedef :
1 = Defaut depassement du temps mouvement
2 = Defaut perte de position
4 = Alarme de depassement du temps mouvement

************************** ENGLISH INFORMATION  ****************************
DESCRIPTION :
*************
- Control of the order of commands depending on the operating modes:
Auto, Manual control, Auto Step mode, Auto Return to Cycle Origin
(set by the bool of the UDT link to operator panel LIEN_PUP)
- Control of the order of commands depending on the status of the function
(set with the Bool of the UDT function MF )
- Control of the dedicated lamps
- Control of the commom lamps
- Measurement of the execution time for the movement and comparison with the
recorded reference time. Activation of a warning and an error message.

OPERATING:
***********
This BF Use :
UDT 1988 ""LIEN_PUP"" (written by BF_ZONE_MODE)
UDT 2042 ""MOT_FONC"" (the information must be written before this BF)
Movement in Manual Mode:
If you use an safety two-hand control, the ""BIM"" Input contained in MF UDT must
be set to 1 before this BF in order to see the movement lamp position in the
screen, and select the movement
Time movement Reference:
Must be defined in global data DB$98 ""Z$T"" of the area (zone) dependence($ =
zone Number)
COM Input : must be implemented with safety infomation from safety program
- For a movement in a closed Area = Safety closed area, use safety OK
information from ""TNI"" DB (for example: ""TNI"".Z$FZ_OK (With $= zone number of
the facility)
- For a movement with two-hand control, use Safety operator OK data in ""TRI"" DB
( For example: ""TRI"".<Sub-unit NAME>SOP_OK )

FAULT list:
************
Codedef values:
1 = Movement time exceeded fault
2 = Position lost fault
4 = Movement time exceeded alarm

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 49
Dernier ID mis en oeuvre / Last ID implemented : 2040_49
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"*******************************************************************************
*                               FB ""MVSE2P1""                                  *
* ASSURE LA COMMANDE DE MOUVEMENT SIMPLE EFFET 2 POSITIONS EXCLUSIVEMENT      *
*                     (Avec ou sans Commande Bimanuel)                        *

*                                                                             *
*       EXECUTES THE COMMANDE FOR A SIMPLE EFFECT MOUVEMENT WITH 2 POSITIONS  *
*                   (with or without 2-hand control)                          *
*******************************************************************************
( In English further below)
DESCRIPTION:
************
   - gestion des ordres de commande suivant les modes:
       Auto, Manu reglage, Auto Pas a Pas, Auto Retour Origine de Cycle
        (positionnes sur les bits du mot lien pupitre LIEN_PUP)
   - gestion de l'ordre de commande suivant l'etat de la fonction
       (positionnees sur les bits du mot fonction MF)
   - gestion des voyants particuliers
   - gestion des voyants communs
   - mesure du temps d'execution du mouvement et comparaison avec un temps
       de reference enregistre. Activation d'une alerte et d'un defaut


MISE EN OEUVRE :
*************
Utilise :
l' UDT 1988 Lien_Pup ( les information sont generees par la BF_Zone_Mode)
l'UDT 2042 Mot_Fonc (Information a generer en amont de la BF)
Gestion des mouvements en Mode Manuel :
Par defaut la BF fonctionne pour une commande de mouvement dans une zone fermee
sans risque operateur
Pour une utilisation avec commande Bimanuelle, l'information BIM contenue dans
le Mot fonction MF doit etre Maintenue a 1 en amont de la BF pour visualiser la
position du mouvement sur l'ecran et permettre la selection du sens du
mouvement

Les temps de references doivent etre associes au DB $98 de la zone (Z$T)
($ = Numero de la zone)

L'entree COM doit etre mise en uvre avec l'information de commun electrique
issue du programme Safety
Pour les mouvements en zone fermee = info safety de la zone fermee ""TNI"".Z$FZ_OK
Pour les mouvements avec commande bimanuelle = Info safety de securite
operateur
""TRI"".<NomSE>SOP_OK

LISTE DES DEFAUT :
***************
Valeur de codedef :
1 = Defaut depassement du temps mouvement
2 = Defaut perte de position
4 = Alarme de depassement du temps mouvement

************************** ENGLISH INFORMATION  ****************************
DESCRIPTION :
*************
- Control of the order of commands depending on the operating modes:
Auto, Manual control, Auto Step mode, Auto Return to Cycle Origin
(set by the bool of the UDT link to operator panel LIEN_PUP)
- Control of the order of commands depending on the status of the function
(set with the Bool of the UDT function MF )
- Control of the dedicated lamps
- Control of the commom lamps
- Measurement of the execution time for the movement and comparison with the
recorded reference time. Activation of a warning and an error message.

OPERATING:
***********
This BF Use :
UDT 1988 ""LIEN_PUP"" (written by BF_ZONE_MODE)
UDT 2042 ""MOT_FONC"" (the information must be written before this BF)
Movement in Manual Mode:
If you use an safety two-hand control, the ""BIM"" Input contained in MF UDT must
be set to 1 before this BF in order to see the movement lamp position in the
screen, and select the movement
Time movement Reference:
Must be defined in global data DB$98 ""Z$T"" of the area (zone) dependence($ =
zone Number)
COM Input : must be implemented with safety infomation from safety program
- For a movement in a closed Area = Safety closed area, use safety OK
information from ""TNI"" DB (for example: ""TNI"".Z$FZ_OK (With $= zone number of
the facility)
- For a movement with two-hand control, use Safety operator OK data in ""TRI"" DB
( For example: ""TRI"".<Sub-unit NAME>SOP_OK )

FAULT list:
************
Codedef values:
1 = Movement time exceeded fault
2 = Position lost fault
4 = Movement time exceeded alarm

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 49
Dernier ID mis en oeuvre / Last ID implemented : 2040_49
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"*******************************************************************************
*                               FB ""MVSE2P1""                                  *
* ASSURE LA COMMANDE DE MOUVEMENT SIMPLE EFFET 2 POSITIONS EXCLUSIVEMENT      *
*                     (Avec ou sans Commande Bimanuel)                        *

*                                                                             *
*       EXECUTES THE COMMANDE FOR A SIMPLE EFFECT MOUVEMENT WITH 2 POSITIONS  *
*                   (with or without 2-hand control)                          *
*******************************************************************************
( In English further below)
DESCRIPTION:
************
   - gestion des ordres de commande suivant les modes:
       Auto, Manu reglage, Auto Pas a Pas, Auto Retour Origine de Cycle
        (positionnes sur les bits du mot lien pupitre LIEN_PUP)
   - gestion de l'ordre de commande suivant l'etat de la fonction
       (positionnees sur les bits du mot fonction MF)
   - gestion des voyants particuliers
   - gestion des voyants communs
   - mesure du temps d'execution du mouvement et comparaison avec un temps
       de reference enregistre. Activation d'une alerte et d'un defaut


MISE EN OEUVRE :
*************
Utilise :
l' UDT 1988 Lien_Pup ( les information sont generees par la BF_Zone_Mode)
l'UDT 2042 Mot_Fonc (Information a generer en amont de la BF)
Gestion des mouvements en Mode Manuel :
Par defaut la BF fonctionne pour une commande de mouvement dans une zone fermee
sans risque operateur
Pour une utilisation avec commande Bimanuelle, l'information BIM contenue dans
le Mot fonction MF doit etre Maintenue a 1 en amont de la BF pour visualiser la
position du mouvement sur l'ecran et permettre la selection du sens du
mouvement

Les temps de references doivent etre associes au DB $98 de la zone (Z$T)
($ = Numero de la zone)

L'entree COM doit etre mise en uvre avec l'information de commun electrique
issue du programme Safety
Pour les mouvements en zone fermee = info safety de la zone fermee ""TNI"".Z$FZ_OK
Pour les mouvements avec commande bimanuelle = Info safety de securite
operateur
""TRI"".<NomSE>SOP_OK

LISTE DES DEFAUT :
***************
Valeur de codedef :
1 = Defaut depassement du temps mouvement
2 = Defaut perte de position
4 = Alarme de depassement du temps mouvement

************************** ENGLISH INFORMATION  ****************************
DESCRIPTION :
*************
- Control of the order of commands depending on the operating modes:
Auto, Manual control, Auto Step mode, Auto Return to Cycle Origin
(set by the bool of the UDT link to operator panel LIEN_PUP)
- Control of the order of commands depending on the status of the function
(set with the Bool of the UDT function MF )
- Control of the dedicated lamps
- Control of the commom lamps
- Measurement of the execution time for the movement and comparison with the
recorded reference time. Activation of a warning and an error message.

OPERATING:
***********
This BF Use :
UDT 1988 ""LIEN_PUP"" (written by BF_ZONE_MODE)
UDT 2042 ""MOT_FONC"" (the information must be written before this BF)
Movement in Manual Mode:
If you use an safety two-hand control, the ""BIM"" Input contained in MF UDT must
be set to 1 before this BF in order to see the movement lamp position in the
screen, and select the movement
Time movement Reference:
Must be defined in global data DB$98 ""Z$T"" of the area (zone) dependence($ =
zone Number)
COM Input : must be implemented with safety infomation from safety program
- For a movement in a closed Area = Safety closed area, use safety OK
information from ""TNI"" DB (for example: ""TNI"".Z$FZ_OK (With $= zone number of
the facility)
- For a movement with two-hand control, use Safety operator OK data in ""TRI"" DB
( For example: ""TRI"".<Sub-unit NAME>SOP_OK )

FAULT list:
************
Codedef values:
1 = Movement time exceeded fault
2 = Position lost fault
4 = Movement time exceeded alarm

**************************** _ODIL_ID_ ***************************

NB Reseaux BF 1er Version / Network Number in 1ft version : 49
Dernier ID mis en oeuvre / Last ID implemented : 2040_49
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";""
"*******************************************************************************
*                            FB ""MOUVMP1""                                     *
*        ASSURE LA COMMANDE DE MOUVEMENT PLUS DE 2 POSITIONS                  *
*                     (Avec ou sans Commande Bimanuel)                        *
*                                                                             *
*       EXECUTES THE COMMANDE OF MOUVEMENT WITH MORE THAN 2 POSITIONS         *
*                   (with or without 2-hand control)                          *
*******************************************************************************
( In English further below)
DESCRIPTION:
************
   - gestion des ordres de commande suivant les modes:
       Auto, Manu reglage, Auto Pas a Pas, Auto Retour Origine de Cycle
        (positionnes sur les bits du mot lien pupitre LIEN_PUP)
   - gestion de l'ordre de commande suivant l'etat de la fonction
       (positionnees sur les bits du mot fonction MF)
   - gestion des voyants particuliers
   - gestion des voyants communs
   - mesure du temps d'execution du mouvement et comparaison avec un temps
       de reference enregistre. Activation d'une alerte et d'un defaut


MISE EN OEUVRE :
*************
Utilise :
l' UDT 1988 Lien_Pup ( les information sont generees par la BF_Zone_Mode)
l'UDT 2041 Mot_Fonc_MP (Information a generer en amont de la BF)
Gestion des mouvements en Mode Manuel :
Par defaut la BF fonctionne pour une commande de mouvement dans une zone fermee
sans risque operateur
Pour une utilisation avec commande Bimanuelle, l'information BIM contenue dans
le Mot fonction MF doit etre Maintenue a 1 en amont de la BF pour visualiser la
position du mouvement sur l'ecran et permettre la selection du mouvement

Les temps de references doivent etre associes au DB $98 de la zone (Z$T)
($ = Numero de la zone)

L'entree COM doit etre mise en uvre avec l'information de commun electrique
issue du programme Safety

Multi-position :
Le FB actionne ou non l'ordre de deplacement du mobile vers la position X
Chaque deplacement vers une position est gere par un FB "" MOUVMP1 ""
Pour eviter de commander plusieurs ordres de deplacement en meme temps, il
existe un Lien entre les FB traitant des deplacements d'un meme mobile (IN/OUT
LIEN).
Un deplacement vers une position X est autorise si le mot Lien est a 0. Le FB
neutralise les autres boites en mettant son numero de position dans le mot Lien.
Si le deplacement est termine ou impossible, le FB remet 0 dans le mot Lien,
autorisant ainsi les autres deplacements

LISTE DES DEFAUT :
***************
Valeur de codedef :
1 = Defaut depassement du temps mouvement
2 = Defaut perte de position
4 = Alarme de depassement du temps mouvement

************************** ENGLISH INFORMATION  ****************************
DESCRIPTION :
*************
- Control of the order of commands depending on the operating modes:
Auto, Manual control, Auto Step mode, Auto Return to Cycle Origin
(set by the bool of the UDT link to operator panel LIEN_PUP)
- Control of the order of commands depending on the status of the function
(set with the Bool of the UDT function MF )
- Control of the dedicated lamps
- Control of the commom lamps
- Measurement of the execution time for the movement and comparison with the
recorded reference time. Activation of a warning and an error message.

OPERATING:
***********
This BF Use :
UDT 1988 ""LIEN_PUP"" (written by BF_ZONE_MODE)
UDT 2041 ""MOT_FONC_MP"" (the information must be written before this BF)
Movement in Manual Mode:
If you use an safety two-hand control, the ""BIM"" Input contained in MF UDT must
be set to 1 before this BF in order to see the movement lamp position in the
screen, and select the movement
Time movement Reference:
Must be defined in global data DB$98 ""Z$T"" of the area (zone) dependence($ =
zone Number)
COM Input : must be implemented with safety infomation from safety program

Multi-position :
The FB executes or not the command of sub-assembly movement to reach
position X
For each movement between 2 given positions a FB ""MOUVMP1"" is used.
The link word between FBs processing movements of the same sub-assembly (IN/OUT
""LIEN"") is used to avoid several movement commands at the same time.
A movement to a position X is authorized if the Link word is reset to 0. The FB
blocks the other FB by writing its position number in the Link word.
If the movement is finished or is impossible, the FB resets the Link word to 0,
thus authorising the other movements.

FAULT list:
************
Codedef values:
1 = Movement time exceeded fault
2 = Position lost fault
4 = Movement time exceeded alarm

****************************_ODIL_ID***************************************
NB Reseaux BF 1er Version / Network Number in 1ft version : 52
Dernier ID mis en oeuvre / Last ID implemented : 2041_52
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"*******************************************************************************
*                            FB ""MOUVMP1""                                     *
*        ASSURE LA COMMANDE DE MOUVEMENT PLUS DE 2 POSITIONS                  *
*                     (Avec ou sans Commande Bimanuel)                        *
*                                                                             *
*       EXECUTES THE COMMANDE OF MOUVEMENT WITH MORE THAN 2 POSITIONS         *
*                   (with or without 2-hand control)                          *
*******************************************************************************
( In English further below)
DESCRIPTION:
************
   - gestion des ordres de commande suivant les modes:
       Auto, Manu reglage, Auto Pas a Pas, Auto Retour Origine de Cycle
        (positionnes sur les bits du mot lien pupitre LIEN_PUP)
   - gestion de l'ordre de commande suivant l'etat de la fonction
       (positionnees sur les bits du mot fonction MF)
   - gestion des voyants particuliers
   - gestion des voyants communs
   - mesure du temps d'execution du mouvement et comparaison avec un temps
       de reference enregistre. Activation d'une alerte et d'un defaut


MISE EN OEUVRE :
*************
Utilise :
l' UDT 1988 Lien_Pup ( les information sont generees par la BF_Zone_Mode)
l'UDT 2041 Mot_Fonc_MP (Information a generer en amont de la BF)
Gestion des mouvements en Mode Manuel :
Par defaut la BF fonctionne pour une commande de mouvement dans une zone fermee
sans risque operateur
Pour une utilisation avec commande Bimanuelle, l'information BIM contenue dans
le Mot fonction MF doit etre Maintenue a 1 en amont de la BF pour visualiser la
position du mouvement sur l'ecran et permettre la selection du mouvement

Les temps de references doivent etre associes au DB $98 de la zone (Z$T)
($ = Numero de la zone)

L'entree COM doit etre mise en uvre avec l'information de commun electrique
issue du programme Safety

Multi-position :
Le FB actionne ou non l'ordre de deplacement du mobile vers la position X
Chaque deplacement vers une position est gere par un FB "" MOUVMP1 ""
Pour eviter de commander plusieurs ordres de deplacement en meme temps, il
existe un Lien entre les FB traitant des deplacements d'un meme mobile (IN/OUT
LIEN).
Un deplacement vers une position X est autorise si le mot Lien est a 0. Le FB
neutralise les autres boites en mettant son numero de position dans le mot Lien.
Si le deplacement est termine ou impossible, le FB remet 0 dans le mot Lien,
autorisant ainsi les autres deplacements

LISTE DES DEFAUT :
***************
Valeur de codedef :
1 = Defaut depassement du temps mouvement
2 = Defaut perte de position
4 = Alarme de depassement du temps mouvement

************************** ENGLISH INFORMATION  ****************************
DESCRIPTION :
*************
- Control of the order of commands depending on the operating modes:
Auto, Manual control, Auto Step mode, Auto Return to Cycle Origin
(set by the bool of the UDT link to operator panel LIEN_PUP)
- Control of the order of commands depending on the status of the function
(set with the Bool of the UDT function MF )
- Control of the dedicated lamps
- Control of the commom lamps
- Measurement of the execution time for the movement and comparison with the
recorded reference time. Activation of a warning and an error message.

OPERATING:
***********
This BF Use :
UDT 1988 ""LIEN_PUP"" (written by BF_ZONE_MODE)
UDT 2041 ""MOT_FONC_MP"" (the information must be written before this BF)
Movement in Manual Mode:
If you use an safety two-hand control, the ""BIM"" Input contained in MF UDT must
be set to 1 before this BF in order to see the movement lamp position in the
screen, and select the movement
Time movement Reference:
Must be defined in global data DB$98 ""Z$T"" of the area (zone) dependence($ =
zone Number)
COM Input : must be implemented with safety infomation from safety program

Multi-position :
The FB executes or not the command of sub-assembly movement to reach
position X
For each movement between 2 given positions a FB ""MOUVMP1"" is used.
The link word between FBs processing movements of the same sub-assembly (IN/OUT
""LIEN"") is used to avoid several movement commands at the same time.
A movement to a position X is authorized if the Link word is reset to 0. The FB
blocks the other FB by writing its position number in the Link word.
If the movement is finished or is impossible, the FB resets the Link word to 0,
thus authorising the other movements.

FAULT list:
************
Codedef values:
1 = Movement time exceeded fault
2 = Position lost fault
4 = Movement time exceeded alarm

****************************_ODIL_ID***************************************
NB Reseaux BF 1er Version / Network Number in 1ft version : 52
Dernier ID mis en oeuvre / Last ID implemented : 2041_52
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"*******************************************************************************
*                            FB ""MOUVMP1""                                     *
*        ASSURE LA COMMANDE DE MOUVEMENT PLUS DE 2 POSITIONS                  *
*                     (Avec ou sans Commande Bimanuel)                        *
*                                                                             *
*       EXECUTES THE COMMANDE OF MOUVEMENT WITH MORE THAN 2 POSITIONS         *
*                   (with or without 2-hand control)                          *
*******************************************************************************
( In English further below)
DESCRIPTION:
************
   - gestion des ordres de commande suivant les modes:
       Auto, Manu reglage, Auto Pas a Pas, Auto Retour Origine de Cycle
        (positionnes sur les bits du mot lien pupitre LIEN_PUP)
   - gestion de l'ordre de commande suivant l'etat de la fonction
       (positionnees sur les bits du mot fonction MF)
   - gestion des voyants particuliers
   - gestion des voyants communs
   - mesure du temps d'execution du mouvement et comparaison avec un temps
       de reference enregistre. Activation d'une alerte et d'un defaut


MISE EN OEUVRE :
*************
Utilise :
l' UDT 1988 Lien_Pup ( les information sont generees par la BF_Zone_Mode)
l'UDT 2041 Mot_Fonc_MP (Information a generer en amont de la BF)
Gestion des mouvements en Mode Manuel :
Par defaut la BF fonctionne pour une commande de mouvement dans une zone fermee
sans risque operateur
Pour une utilisation avec commande Bimanuelle, l'information BIM contenue dans
le Mot fonction MF doit etre Maintenue a 1 en amont de la BF pour visualiser la
position du mouvement sur l'ecran et permettre la selection du mouvement

Les temps de references doivent etre associes au DB $98 de la zone (Z$T)
($ = Numero de la zone)

L'entree COM doit etre mise en uvre avec l'information de commun electrique
issue du programme Safety

Multi-position :
Le FB actionne ou non l'ordre de deplacement du mobile vers la position X
Chaque deplacement vers une position est gere par un FB "" MOUVMP1 ""
Pour eviter de commander plusieurs ordres de deplacement en meme temps, il
existe un Lien entre les FB traitant des deplacements d'un meme mobile (IN/OUT
LIEN).
Un deplacement vers une position X est autorise si le mot Lien est a 0. Le FB
neutralise les autres boites en mettant son numero de position dans le mot Lien.
Si le deplacement est termine ou impossible, le FB remet 0 dans le mot Lien,
autorisant ainsi les autres deplacements

LISTE DES DEFAUT :
***************
Valeur de codedef :
1 = Defaut depassement du temps mouvement
2 = Defaut perte de position
4 = Alarme de depassement du temps mouvement

************************** ENGLISH INFORMATION  ****************************
DESCRIPTION :
*************
- Control of the order of commands depending on the operating modes:
Auto, Manual control, Auto Step mode, Auto Return to Cycle Origin
(set by the bool of the UDT link to operator panel LIEN_PUP)
- Control of the order of commands depending on the status of the function
(set with the Bool of the UDT function MF )
- Control of the dedicated lamps
- Control of the commom lamps
- Measurement of the execution time for the movement and comparison with the
recorded reference time. Activation of a warning and an error message.

OPERATING:
***********
This BF Use :
UDT 1988 ""LIEN_PUP"" (written by BF_ZONE_MODE)
UDT 2041 ""MOT_FONC_MP"" (the information must be written before this BF)
Movement in Manual Mode:
If you use an safety two-hand control, the ""BIM"" Input contained in MF UDT must
be set to 1 before this BF in order to see the movement lamp position in the
screen, and select the movement
Time movement Reference:
Must be defined in global data DB$98 ""Z$T"" of the area (zone) dependence($ =
zone Number)
COM Input : must be implemented with safety infomation from safety program

Multi-position :
The FB executes or not the command of sub-assembly movement to reach
position X
For each movement between 2 given positions a FB ""MOUVMP1"" is used.
The link word between FBs processing movements of the same sub-assembly (IN/OUT
""LIEN"") is used to avoid several movement commands at the same time.
A movement to a position X is authorized if the Link word is reset to 0. The FB
blocks the other FB by writing its position number in the Link word.
If the movement is finished or is impossible, the FB resets the Link word to 0,
thus authorising the other movements.

FAULT list:
************
Codedef values:
1 = Movement time exceeded fault
2 = Position lost fault
4 = Movement time exceeded alarm

****************************_ODIL_ID***************************************
NB Reseaux BF 1er Version / Network Number in 1ft version : 52
Dernier ID mis en oeuvre / Last ID implemented : 2041_52
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";""
"*******************************************************************************
*                           FB ""MOUV2P1""                                      *
* ASSURE LA COMMANDE DE MOUVEMENT 2 POSITIONS (Avec ou sans Commande Bimanuel)*
*                                                                             *
*                                                                             *
*       EXECUTES THE COMMANDE FOR A MOUVEMENT WITH 2 POSITIONS                *
*                   (with or without 2-hand control)                          *
*******************************************************************************
( In English further below)
DESCRIPTION:
************
   - gestion des ordres de commande suivant les modes:
       Auto, Manu reglage, Auto Pas a Pas, Auto Retour Origine de Cycle
        (positionnes sur les bits du mot lien pupitre LIEN_PUP)
   - gestion de l'ordre de commande suivant l'etat de la fonction
       (positionnees sur les bits du mot fonction MF)
   - gestion des voyants particuliers
   - gestion des voyants communs
   - mesure du temps d'execution du mouvement et comparaison avec un temps
       de reference enregistre. Activation d'une alerte et d'un defaut


MISE EN OEUVRE :
*************
Utilise :
l' UDT 1988 Lien_Pup ( les information sont generees par la BF_Zone_Mode)
l'UDT 2042 Mot_Fonc (Information a generer en amont de la BF)
Gestion des mouvements en Mode Manuel :
Par defaut la BF fonctionne pour une commande de mouvement dans une zone fermee
sans risque operateur
Pour une utilisation avec commande Bimanuelle, l'information BIM contenue dans
le Mot fonction MF doit etre Maintenue a 1 en amont de la BF pour visualiser la
position du mouvement sur l'ecran et permettre la selection du sens du
mouvement
Pour une utilisation avec auto maintien des ordres, le bit AutM doit être
maintenu à 1 avec un bit BA1

Les temps de references doivent etre associes au DB $98 de la zone (Z$T)
($ = Numero de la zone)

L'entree COM doit etre mise en uvre avec l'information de commun electrique
issue du programme Safety
Pour les mouvements en zone fermee = info safety de la zone fermee ""TNI"".Z$FZ_OK
Pour les mouvements avec commande bimanuelle = Info safety de securite
operateur
""TRI"".<NomSE>SOP_OK
Pour les mouvements sur préhenseur robot, suivant analyse, = BA1

LISTE DES DEFAUT :
***************
Valeur de codedef :
1 = Defaut depassement du temps mouvement
2 = Defaut perte de position
4 = Alarme de depassement du temps mouvement

************************** ENGLISH INFORMATION  ****************************
DESCRIPTION :
*************
 Control of the order of commands depending on the operating modes:
Auto, Manual control, Auto Step mode, Auto Return to Cycle Origin
(set by the bool of the UDT link to operator panel LIEN_PUP)
- Control of the order of commands depending on the status of the function
(set with the Bool of the UDT function MF )
- Control of the dedicated lamps
- Control of the commom lamps
- Measurement of the execution time for the movement and comparison with the
recorded reference time. Activation of a warning and an error message.

OPERATING:
***********
This BF Use :
UDT 1988 ""LIEN_PUP"" (written by BF_ZONE_MODE)
UDT 2042 ""MOT_FONC"" (the information must be written before this BF)
Movement in Manual Mode:
If you use an Safety Bimanual comand, the BIM Input contained in MF UDT must be
set to 1 before this BF to see the lamp position of movement to the screen
and select the movement direction
If you use the fonction of auto latch of the orders, you must set the input
AutM
to 1 with a bit BA1

Time movement Reference:
Must be use between the global data DB$98 ""Z$T"" of the area (zone) dependence (
$ = zone Number)
COM Input : must be operate with the safety command polarity
- For a movement in a closed Area = Safety closed area command polarity data in
""TNI"" DB (for example: ""TNI"".Z$FZ_OK (With $= zone number of the facility)
- For a movement with Bimanual commad = Safety operator data in ""TRI"" DB ( For
example: ""TRI"".<Sub-unit NAME>SOP_OK
- For a robot gripper, after analysis = BA1
FAULT list:
************
Codedef values:
1 = Movement time exceeded fault
2 = Loss of position fault
4 = Movement time exceeded alarm

NB Reseaux BF 1er Version / Network Number in 1ft version : 50
Dernier ID mis en oeuvre / Last ID implemented : 2042_50
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....
";"*******************************************************************************
*                           FB ""MOUV2P1""                                      *
* ASSURE LA COMMANDE DE MOUVEMENT 2 POSITIONS (Avec ou sans Commande Bimanuel)*
*                                                                             *
*                                                                             *
*       EXECUTES THE COMMANDE FOR A MOUVEMENT WITH 2 POSITIONS                *
*                   (with or without 2-hand control)                          *
*******************************************************************************
( In English further below)
DESCRIPTION:
************
   - gestion des ordres de commande suivant les modes:
       Auto, Manu reglage, Auto Pas a Pas, Auto Retour Origine de Cycle
        (positionnes sur les bits du mot lien pupitre LIEN_PUP)
   - gestion de l'ordre de commande suivant l'etat de la fonction
       (positionnees sur les bits du mot fonction MF)
   - gestion des voyants particuliers
   - gestion des voyants communs
   - mesure du temps d'execution du mouvement et comparaison avec un temps
       de reference enregistre. Activation d'une alerte et d'un defaut


MISE EN OEUVRE :
*************
Utilise :
l' UDT 1988 Lien_Pup ( les information sont generees par la BF_Zone_Mode)
l'UDT 2042 Mot_Fonc (Information a generer en amont de la BF)
Gestion des mouvements en Mode Manuel :
Par defaut la BF fonctionne pour une commande de mouvement dans une zone fermee
sans risque operateur
Pour une utilisation avec commande Bimanuelle, l'information BIM contenue dans
le Mot fonction MF doit etre Maintenue a 1 en amont de la BF pour visualiser la
position du mouvement sur l'ecran et permettre la selection du sens du
mouvement
Pour une utilisation avec auto maintien des ordres, le bit AutM doit être
maintenu à 1 avec un bit BA1

Les temps de references doivent etre associes au DB $98 de la zone (Z$T)
($ = Numero de la zone)

L'entree COM doit etre mise en uvre avec l'information de commun electrique
issue du programme Safety
Pour les mouvements en zone fermee = info safety de la zone fermee ""TNI"".Z$FZ_OK
Pour les mouvements avec commande bimanuelle = Info safety de securite
operateur
""TRI"".<NomSE>SOP_OK
Pour les mouvements sur préhenseur robot, suivant analyse, = BA1

LISTE DES DEFAUT :
***************
Valeur de codedef :
1 = Defaut depassement du temps mouvement
2 = Defaut perte de position
4 = Alarme de depassement du temps mouvement

************************** ENGLISH INFORMATION  ****************************
DESCRIPTION :
*************
 Control of the order of commands depending on the operating modes:
Auto, Manual control, Auto Step mode, Auto Return to Cycle Origin
(set by the bool of the UDT link to operator panel LIEN_PUP)
- Control of the order of commands depending on the status of the function
(set with the Bool of the UDT function MF )
- Control of the dedicated lamps
- Control of the commom lamps
- Measurement of the execution time for the movement and comparison with the
recorded reference time. Activation of a warning and an error message.

OPERATING:
***********
This BF Use :
UDT 1988 ""LIEN_PUP"" (written by BF_ZONE_MODE)
UDT 2042 ""MOT_FONC"" (the information must be written before this BF)
Movement in Manual Mode:
If you use an Safety Bimanual comand, the BIM Input contained in MF UDT must be
set to 1 before this BF to see the lamp position of movement to the screen
and select the movement direction
If you use the fonction of auto latch of the orders, you must set the input
AutM
to 1 with a bit BA1

Time movement Reference:
Must be use between the global data DB$98 ""Z$T"" of the area (zone) dependence (
$ = zone Number)
COM Input : must be operate with the safety command polarity
- For a movement in a closed Area = Safety closed area command polarity data in
""TNI"" DB (for example: ""TNI"".Z$FZ_OK (With $= zone number of the facility)
- For a movement with Bimanual commad = Safety operator data in ""TRI"" DB ( For
example: ""TRI"".<Sub-unit NAME>SOP_OK
- For a robot gripper, after analysis = BA1
FAULT list:
************
Codedef values:
1 = Movement time exceeded fault
2 = Loss of position fault
4 = Movement time exceeded alarm

NB Reseaux BF 1er Version / Network Number in 1ft version : 50
Dernier ID mis en oeuvre / Last ID implemented : 2042_50
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....
";"*******************************************************************************
*                           FB ""MOUV2P1""                                      *
* ASSURE LA COMMANDE DE MOUVEMENT 2 POSITIONS (Avec ou sans Commande Bimanuel)*
*                                                                             *
*                                                                             *
*       EXECUTES THE COMMANDE FOR A MOUVEMENT WITH 2 POSITIONS                *
*                   (with or without 2-hand control)                          *
*******************************************************************************
( In English further below)
DESCRIPTION:
************
   - gestion des ordres de commande suivant les modes:
       Auto, Manu reglage, Auto Pas a Pas, Auto Retour Origine de Cycle
        (positionnes sur les bits du mot lien pupitre LIEN_PUP)
   - gestion de l'ordre de commande suivant l'etat de la fonction
       (positionnees sur les bits du mot fonction MF)
   - gestion des voyants particuliers
   - gestion des voyants communs
   - mesure du temps d'execution du mouvement et comparaison avec un temps
       de reference enregistre. Activation d'une alerte et d'un defaut


MISE EN OEUVRE :
*************
Utilise :
l' UDT 1988 Lien_Pup ( les information sont generees par la BF_Zone_Mode)
l'UDT 2042 Mot_Fonc (Information a generer en amont de la BF)
Gestion des mouvements en Mode Manuel :
Par defaut la BF fonctionne pour une commande de mouvement dans une zone fermee
sans risque operateur
Pour une utilisation avec commande Bimanuelle, l'information BIM contenue dans
le Mot fonction MF doit etre Maintenue a 1 en amont de la BF pour visualiser la
position du mouvement sur l'ecran et permettre la selection du sens du
mouvement
Pour une utilisation avec auto maintien des ordres, le bit AutM doit être
maintenu à 1 avec un bit BA1

Les temps de references doivent etre associes au DB $98 de la zone (Z$T)
($ = Numero de la zone)

L'entree COM doit etre mise en uvre avec l'information de commun electrique
issue du programme Safety
Pour les mouvements en zone fermee = info safety de la zone fermee ""TNI"".Z$FZ_OK
Pour les mouvements avec commande bimanuelle = Info safety de securite
operateur
""TRI"".<NomSE>SOP_OK
Pour les mouvements sur préhenseur robot, suivant analyse, = BA1

LISTE DES DEFAUT :
***************
Valeur de codedef :
1 = Defaut depassement du temps mouvement
2 = Defaut perte de position
4 = Alarme de depassement du temps mouvement

************************** ENGLISH INFORMATION  ****************************
DESCRIPTION :
*************
 Control of the order of commands depending on the operating modes:
Auto, Manual control, Auto Step mode, Auto Return to Cycle Origin
(set by the bool of the UDT link to operator panel LIEN_PUP)
- Control of the order of commands depending on the status of the function
(set with the Bool of the UDT function MF )
- Control of the dedicated lamps
- Control of the commom lamps
- Measurement of the execution time for the movement and comparison with the
recorded reference time. Activation of a warning and an error message.

OPERATING:
***********
This BF Use :
UDT 1988 ""LIEN_PUP"" (written by BF_ZONE_MODE)
UDT 2042 ""MOT_FONC"" (the information must be written before this BF)
Movement in Manual Mode:
If you use an Safety Bimanual comand, the BIM Input contained in MF UDT must be
set to 1 before this BF to see the lamp position of movement to the screen
and select the movement direction
If you use the fonction of auto latch of the orders, you must set the input
AutM
to 1 with a bit BA1

Time movement Reference:
Must be use between the global data DB$98 ""Z$T"" of the area (zone) dependence (
$ = zone Number)
COM Input : must be operate with the safety command polarity
- For a movement in a closed Area = Safety closed area command polarity data in
""TNI"" DB (for example: ""TNI"".Z$FZ_OK (With $= zone number of the facility)
- For a movement with Bimanual commad = Safety operator data in ""TRI"" DB ( For
example: ""TRI"".<Sub-unit NAME>SOP_OK
- For a robot gripper, after analysis = BA1
FAULT list:
************
Codedef values:
1 = Movement time exceeded fault
2 = Loss of position fault
4 = Movement time exceeded alarm

NB Reseaux BF 1er Version / Network Number in 1ft version : 50
Dernier ID mis en oeuvre / Last ID implemented : 2042_50
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....
";""
" Esta FB contiene el código generado de Señalización de errores del sistema de STEP 7.
Es llamada en los OB de error y dentro de la OB1 o dentro de un OB de alarma cíclica.
El FB explota los errores del sistema y los señala vía un bloque Alarm_S.
sobre el visual.
Durante el tratamiento de la FB, la ejecución de todas las interrupciones se retrasa.
";" Ce FB contient le code généré de Signalisation d'erreurs système de STEP 7.
Il est appelé dans les OB d'erreur et dans l'OB1 ou dans un OB d'alarme cyclique.
Le FB exploite les erreurs système et signale celles-ci via un bloc Alarm_S.
sur le visuel.
Durant le traitement du FB, l'exécution de toutes les interruptions est retardée.
";" Esta FB contiene el código generado de Señalización de errores del sistema de STEP 7.
Es llamada en los OB de error y dentro de la OB1 o dentro de un OB de alarma cíclica.
El FB explota los errores del sistema y los señala vía un bloque Alarm_S.
sobre el visual.
Durante el tratamiento de la FB, la ejecución de todas las interrupciones se retrasa.
";""
"**********************************************************************
*                        BF_DIAG_PROFINET                            *
*     Assure le traitement du diagnostic des IOdevices Profinet      *
*         Processes the diagnostic of Profinet IODevices             *
**********************************************************************
(in english further below)
DESCRIPTION:
************
Ce FB assure le traitement du diagnostic des IOdevices Profinet

Version 1.3 Compatible avec le FW 2.7 des CPU 319F
version 1.4 ??
Version 1.5 #Fm_Dpn pour execution BF avec D_pn  

MISE EN OEUVRE:
***************
1) Blocs associes :
- 1 DB d'instance ( DB 2036 ) DB_PN pour la BF_Diag_Profinet
- 1 DB Global (DB78) Conf_PN ( topologie reseau)uniquement si pupitre sans IHMP
  - Si le pupitre contient IHMP :
     Il faut mettre a 1 l'entree P_Ihmp, et le DB CONF_PN n'est pas necessaire.
  - Si le pupitre ne contient pas IHMP :
     Il faut mettre a 0 l'entree P_Ihmp, et le DB CONF_PN est necessaire sur
     l'entree DB_Config de la BF.
Pour la mise en oeuvre du DB78 voir detail dans la documentation
BF_Diag_Profinet

2) SFM :
Voir detail dans documentation BF_Diag_profinet

3) Appels dans la structure programme pour la fonction Diag_Profinet
3.1)Dans OB1 :
- Faire un Call du FB20 ""SFM_FB"" avec le DB75 ""SFM_DB"" pour instance
  avant l'appel du FC1 (FC Ilot)
- Dans FC1 : Faire un Call du FB1 (Gestion ilot) avec le DB1 ""I01"" pour instance
- Dans FB1 mettre en oeuvre la BF_Diag_Profinet FB2026 avec le DB 2036 ""DB_PN""
  pour instance

3.2) Dans OB100 :
- Mettre en oeuvre la BF_Diag_Profinet FB2026 avec le DB 2036 ""DB_PN"" pour
 instance (Seul les entrees DB_SFM et DB_Config sont a mettre en oeuvre)
3.3) Dans OB86 :
- Faire un Call du FB20 ""SFM_FB"" avec le DB75 ""SFM_DB"" pour instance
  avant de mettre en oeuvre la BF_Diag_Profinet FB2026 avec le DB 2036 ""DB_PN""

  pour instance (Seul les entrees DB_SFM et DB_Config sont a mettre en oeuvre)

CODE DEFAUT :
*************
Valeur de Diag.codedef :
1 = Defaut module I/O
257 = I/O configure present avec alarme

----------------------English information-------------------------------
DESCRIPTION:
************
This FB processes the diagnostic of Profinet IODevices.

Version 1.3 compatible with FW 2.7 of CPU319F

OPERATING :
***********
1) Blocks associate:
- 1 DB of instance(DB 2036) ""DB_PN"" for the BF_Diag_Profinet
- 1 Global DB (DB78) ""Conf_PN"" (Profinet network topology) only if panel without

  IHMP
 - If panel contains IHMP :
     It is necessary to put to 1 the P_Ihmp input, and the DB CONF_PN
     is not necessary.
  - If panel does not contain IHMP:
     It is necessary to put to 0 P_Ihmp input, and the DB CONF_PN
is necessary on the DB_Config imput of the BF.
For the implementation of the DB78 see detail in the documentation
BF_Diag_Profinet

2) SFM:
See detail in documentation BF_Diag_profinet

3) Calls in the structure progra) for the function Diag_Profinet
3.1) In OB1:
- Make Call of FB20 "" SFM_FB "" with the DB75 "" SFM_DB "" for instance before the
  call of the FC1 (Facility FC)
- In FC1: Make Call ofFB1 (Facility Management) with the DB1 ""I01"" for instance
- In FB1 operate the BF_Diag_Profinet FB2026 with the DB 2036 ""DB_PN"" for
 instance

3.2) In OB100:
- Operate the BF_Diag_Profinet FB2026 with the DB 2036 ""DB_PN"" for Instance
(  Warning : Only DB_SFM and DB_config Input must be used)
3.3) In OB86:
- Make Call du FB20 "" SFM_FB "" with the DB75 "" SFM_DB "" for instance before
operating BF_Diag_Profinet FB2026 with the DB 2036 ""DB_PN"" for instance
  (Warning : Only DB_SFM and DB_config Input must be used)

FAULT CODE :
************
Values of Diag.codedef :
1 = Profinet I/O module in fault
257 = Profinet I/O module configured is present with an alarm

****************************** ODIL_ID *************************************
NB Reseaux BF 1er Version / Network Number in 1ft version : 41
Dernier ID mis en oeuvre / Last ID implemented : 2036_41
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"**********************************************************************
*                        BF_DIAG_PROFINET                            *
*     Assure le traitement du diagnostic des IOdevices Profinet      *
*         Processes the diagnostic of Profinet IODevices             *
**********************************************************************
(in english further below)
DESCRIPTION:
************
Ce FB assure le traitement du diagnostic des IOdevices Profinet

Version 1.3 Compatible avec le FW 2.7 des CPU 319F
version 1.4 ??
Version 1.5 #Fm_Dpn pour execution BF avec D_pn  

MISE EN OEUVRE:
***************
1) Blocs associes :
- 1 DB d'instance ( DB 2036 ) DB_PN pour la BF_Diag_Profinet
- 1 DB Global (DB78) Conf_PN ( topologie reseau)uniquement si pupitre sans IHMP
  - Si le pupitre contient IHMP :
     Il faut mettre a 1 l'entree P_Ihmp, et le DB CONF_PN n'est pas necessaire.
  - Si le pupitre ne contient pas IHMP :
     Il faut mettre a 0 l'entree P_Ihmp, et le DB CONF_PN est necessaire sur
     l'entree DB_Config de la BF.
Pour la mise en oeuvre du DB78 voir detail dans la documentation
BF_Diag_Profinet

2) SFM :
Voir detail dans documentation BF_Diag_profinet

3) Appels dans la structure programme pour la fonction Diag_Profinet
3.1)Dans OB1 :
- Faire un Call du FB20 ""SFM_FB"" avec le DB75 ""SFM_DB"" pour instance
  avant l'appel du FC1 (FC Ilot)
- Dans FC1 : Faire un Call du FB1 (Gestion ilot) avec le DB1 ""I01"" pour instance
- Dans FB1 mettre en oeuvre la BF_Diag_Profinet FB2026 avec le DB 2036 ""DB_PN""
  pour instance

3.2) Dans OB100 :
- Mettre en oeuvre la BF_Diag_Profinet FB2026 avec le DB 2036 ""DB_PN"" pour
 instance (Seul les entrees DB_SFM et DB_Config sont a mettre en oeuvre)
3.3) Dans OB86 :
- Faire un Call du FB20 ""SFM_FB"" avec le DB75 ""SFM_DB"" pour instance
  avant de mettre en oeuvre la BF_Diag_Profinet FB2026 avec le DB 2036 ""DB_PN""

  pour instance (Seul les entrees DB_SFM et DB_Config sont a mettre en oeuvre)

CODE DEFAUT :
*************
Valeur de Diag.codedef :
1 = Defaut module I/O
257 = I/O configure present avec alarme

----------------------English information-------------------------------
DESCRIPTION:
************
This FB processes the diagnostic of Profinet IODevices.

Version 1.3 compatible with FW 2.7 of CPU319F

OPERATING :
***********
1) Blocks associate:
- 1 DB of instance(DB 2036) ""DB_PN"" for the BF_Diag_Profinet
- 1 Global DB (DB78) ""Conf_PN"" (Profinet network topology) only if panel without

  IHMP
 - If panel contains IHMP :
     It is necessary to put to 1 the P_Ihmp input, and the DB CONF_PN
     is not necessary.
  - If panel does not contain IHMP:
     It is necessary to put to 0 P_Ihmp input, and the DB CONF_PN
is necessary on the DB_Config imput of the BF.
For the implementation of the DB78 see detail in the documentation
BF_Diag_Profinet

2) SFM:
See detail in documentation BF_Diag_profinet

3) Calls in the structure progra) for the function Diag_Profinet
3.1) In OB1:
- Make Call of FB20 "" SFM_FB "" with the DB75 "" SFM_DB "" for instance before the
  call of the FC1 (Facility FC)
- In FC1: Make Call ofFB1 (Facility Management) with the DB1 ""I01"" for instance
- In FB1 operate the BF_Diag_Profinet FB2026 with the DB 2036 ""DB_PN"" for
 instance

3.2) In OB100:
- Operate the BF_Diag_Profinet FB2026 with the DB 2036 ""DB_PN"" for Instance
(  Warning : Only DB_SFM and DB_config Input must be used)
3.3) In OB86:
- Make Call du FB20 "" SFM_FB "" with the DB75 "" SFM_DB "" for instance before
operating BF_Diag_Profinet FB2026 with the DB 2036 ""DB_PN"" for instance
  (Warning : Only DB_SFM and DB_config Input must be used)

FAULT CODE :
************
Values of Diag.codedef :
1 = Profinet I/O module in fault
257 = Profinet I/O module configured is present with an alarm

****************************** ODIL_ID *************************************
NB Reseaux BF 1er Version / Network Number in 1ft version : 41
Dernier ID mis en oeuvre / Last ID implemented : 2036_41
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";"**********************************************************************
*                        BF_DIAG_PROFINET                            *
*     Assure le traitement du diagnostic des IOdevices Profinet      *
*         Processes the diagnostic of Profinet IODevices             *
**********************************************************************
(in english further below)
DESCRIPTION:
************
Ce FB assure le traitement du diagnostic des IOdevices Profinet

Version 1.3 Compatible avec le FW 2.7 des CPU 319F
version 1.4 ??
Version 1.5 #Fm_Dpn pour execution BF avec D_pn  

MISE EN OEUVRE:
***************
1) Blocs associes :
- 1 DB d'instance ( DB 2036 ) DB_PN pour la BF_Diag_Profinet
- 1 DB Global (DB78) Conf_PN ( topologie reseau)uniquement si pupitre sans IHMP
  - Si le pupitre contient IHMP :
     Il faut mettre a 1 l'entree P_Ihmp, et le DB CONF_PN n'est pas necessaire.
  - Si le pupitre ne contient pas IHMP :
     Il faut mettre a 0 l'entree P_Ihmp, et le DB CONF_PN est necessaire sur
     l'entree DB_Config de la BF.
Pour la mise en oeuvre du DB78 voir detail dans la documentation
BF_Diag_Profinet

2) SFM :
Voir detail dans documentation BF_Diag_profinet

3) Appels dans la structure programme pour la fonction Diag_Profinet
3.1)Dans OB1 :
- Faire un Call du FB20 ""SFM_FB"" avec le DB75 ""SFM_DB"" pour instance
  avant l'appel du FC1 (FC Ilot)
- Dans FC1 : Faire un Call du FB1 (Gestion ilot) avec le DB1 ""I01"" pour instance
- Dans FB1 mettre en oeuvre la BF_Diag_Profinet FB2026 avec le DB 2036 ""DB_PN""
  pour instance

3.2) Dans OB100 :
- Mettre en oeuvre la BF_Diag_Profinet FB2026 avec le DB 2036 ""DB_PN"" pour
 instance (Seul les entrees DB_SFM et DB_Config sont a mettre en oeuvre)
3.3) Dans OB86 :
- Faire un Call du FB20 ""SFM_FB"" avec le DB75 ""SFM_DB"" pour instance
  avant de mettre en oeuvre la BF_Diag_Profinet FB2026 avec le DB 2036 ""DB_PN""

  pour instance (Seul les entrees DB_SFM et DB_Config sont a mettre en oeuvre)

CODE DEFAUT :
*************
Valeur de Diag.codedef :
1 = Defaut module I/O
257 = I/O configure present avec alarme

----------------------English information-------------------------------
DESCRIPTION:
************
This FB processes the diagnostic of Profinet IODevices.

Version 1.3 compatible with FW 2.7 of CPU319F

OPERATING :
***********
1) Blocks associate:
- 1 DB of instance(DB 2036) ""DB_PN"" for the BF_Diag_Profinet
- 1 Global DB (DB78) ""Conf_PN"" (Profinet network topology) only if panel without

  IHMP
 - If panel contains IHMP :
     It is necessary to put to 1 the P_Ihmp input, and the DB CONF_PN
     is not necessary.
  - If panel does not contain IHMP:
     It is necessary to put to 0 P_Ihmp input, and the DB CONF_PN
is necessary on the DB_Config imput of the BF.
For the implementation of the DB78 see detail in the documentation
BF_Diag_Profinet

2) SFM:
See detail in documentation BF_Diag_profinet

3) Calls in the structure progra) for the function Diag_Profinet
3.1) In OB1:
- Make Call of FB20 "" SFM_FB "" with the DB75 "" SFM_DB "" for instance before the
  call of the FC1 (Facility FC)
- In FC1: Make Call ofFB1 (Facility Management) with the DB1 ""I01"" for instance
- In FB1 operate the BF_Diag_Profinet FB2026 with the DB 2036 ""DB_PN"" for
 instance

3.2) In OB100:
- Operate the BF_Diag_Profinet FB2026 with the DB 2036 ""DB_PN"" for Instance
(  Warning : Only DB_SFM and DB_config Input must be used)
3.3) In OB86:
- Make Call du FB20 "" SFM_FB "" with the DB75 "" SFM_DB "" for instance before
operating BF_Diag_Profinet FB2026 with the DB 2036 ""DB_PN"" for instance
  (Warning : Only DB_SFM and DB_config Input must be used)

FAULT CODE :
************
Values of Diag.codedef :
1 = Profinet I/O module in fault
257 = Profinet I/O module configured is present with an alarm

****************************** ODIL_ID *************************************
NB Reseaux BF 1er Version / Network Number in 1ft version : 41
Dernier ID mis en oeuvre / Last ID implemented : 2036_41
Liste des ID supprimes (Num de reseau seul) / ID deleted list ( only network
number)  : ....

";""
